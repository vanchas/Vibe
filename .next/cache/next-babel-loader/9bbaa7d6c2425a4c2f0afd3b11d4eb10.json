{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport store from \"../redux/store\";\nimport { showSuccess } from \"../redux/actions/actions\";\nlet currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nconst target = `https://intim-vibe-api.padilo.pro/api`;\nexport const authenticationService = {\n  login,\n  logout,\n  registrationAdmin,\n  registrationClient,\n  registrationProvider,\n  registrationAgency,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nasync function login(email, password) {\n  Cookies.remove(\"currentUser\");\n  const response = await fetch(`${target}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const promise = response.json();\n\n  if (response.status === 200) {\n    return promise.then(data => {\n      Cookies.set(\"currentUser\", JSON.stringify(data), {\n        expires: 1\n      });\n      currentUserSubject = data;\n      return data;\n    }).then(() => Router.push('/')).then(() => window.location.reload()).catch(err => console.error(\"Error:\", err));\n  }\n}\n\nasync function registrationClient(name, password, email, password_confirmation) {\n  Cookies.remove(\"currentUser\");\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  });\n  const promise = response.json();\n\n  if (response.status === 201) {\n    return promise.then(data => {\n      store.dispatch(showSuccess(data.message));\n      setTimeout(() => window.location.reload(), 3000);\n    }).catch(err => console.error(\"Error:\", err));\n  }\n}\n\nasync function registrationAdmin(name, password, email, password_confirmation) {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/admin/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(res => res.json()).then(data => store.dispatch(showSuccess(data.message))).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationProvider(name, password, email, password_confirmation, phone) {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/individual/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone\n    })\n  }).then(res => res.json()).then(data => store.dispatch(showSuccess(data.message))).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationAgency(name, password, email, password_confirmation, phone, agency_name) {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/agency/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone,\n      agency_name\n    })\n  }).then(res => res.json()).then(data => store.dispatch(showSuccess(data.message))).catch(err => console.error(\"Error:\", err));\n}\n\nasync function logout() {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/logout`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }).then(() => Router.push('/login')).then(() => window.location.reload(true)).catch(err => console.error(\"Error:\", err));\n}","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","Router","store","showSuccess","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","registrationAgency","currentUser","currentUserValue","email","password","remove","response","method","headers","body","JSON","stringify","promise","json","status","then","data","set","expires","push","window","location","reload","catch","err","console","error","name","password_confirmation","dispatch","message","setTimeout","res","phone","agency_name"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport store from \"../redux/store\";\nimport {showSuccess} from \"../redux/actions/actions\";\n\nlet currentUserSubject = Cookies.getJSON(\"currentUser\")\n    ? Cookies.getJSON(\"currentUser\")\n    : {};\n\nconst target = `https://intim-vibe-api.padilo.pro/api`;\n\nexport const authenticationService = {\n    login,\n    logout,\n    registrationAdmin,\n    registrationClient,\n    registrationProvider,\n    registrationAgency,\n    currentUser: currentUserSubject,\n    get currentUserValue() {\n        return currentUserSubject;\n    },\n};\n\nasync function login(email: string, password: string): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response = await fetch(`${target}/login`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({email, password}),\n    });\n    const promise = response.json();\n    if (response.status === 200) {\n        return promise.then(data => {\n            Cookies.set(\"currentUser\", JSON.stringify(data), {expires: 1});\n            currentUserSubject = data;\n            return data;\n        }).then(() => Router.push('/'))\n            .then(() => window.location.reload())\n            .catch((err) => console.error(\"Error:\", err));\n    }\n}\n\nasync function registrationClient(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n        }),\n    });\n    const promise = response.json();\n    if (response.status === 201) {\n        return promise.then((data: any) => {\n            store.dispatch(showSuccess(data.message))\n            setTimeout(() => window.location.reload(), 3000)\n        }).catch((err: any) => console.error(\"Error:\", err));\n    }\n}\n\nasync function registrationAdmin(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/admin/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n        }),\n    }).then(res => res.json())\n        .then(data => store.dispatch(showSuccess(data.message)))\n        .catch((err) => console.error(\"Error:\", err));\n}\n\nasync function registrationProvider(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string,\n    phone: string | number\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/individual/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n            phone\n        }),\n    }).then(res => res.json())\n        .then(data => store.dispatch(showSuccess(data.message)))\n        .catch((err) => console.error(\"Error:\", err));\n}\n\nasync function registrationAgency(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string,\n    phone: string | number,\n    agency_name: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/agency/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n            phone,\n            agency_name\n        }),\n    }).then(res => res.json())\n        .then(data => store.dispatch(showSuccess(data.message)))\n        .catch((err) => console.error(\"Error:\", err));\n}\n\nasync function logout(): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/logout`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    })\n        .then(() => Router.push('/login'))\n        .then(() => window.location.reload(true))\n        .catch((err) => console.error(\"Error:\", err));\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, GET_CATEGORIES, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES } from \"../actions/types\";\nconst initialState = {\n  loading: false,\n  alert: null,\n  categories: [],\n  posts: [],\n  states: [],\n  cities: []\n};\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case HIDE_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case SHOW_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: action.payload\n      });\n\n    case HIDE_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: null\n      });\n\n    case GET_CATEGORIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: action.payload\n      });\n\n    case GET_ALL_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case GET_LOCAITONS_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        states: action.payload\n      });\n\n    case GET_CITIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cities: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/reducers/appReducer.ts"],"names":["SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","GET_CATEGORIES","GET_ALL_POSTS","GET_LOCAITONS_INFO","GET_CITIES","initialState","loading","alert","categories","posts","states","cities","appReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,UAA/C,EAA2DC,cAA3D,EAA2EC,aAA3E,EAA0FC,kBAA1F,EAA8GC,UAA9G,QAAgI,kBAAhI;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,MAAM,EAAE,EALW;AAMnBC,EAAAA,MAAM,EAAE;AANW,CAArB;AASA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAU,GAAGR,YAAd,EAA4BS,MAA5B,KAA4C;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,WAAL;AACE,6CAAYgB,KAAZ;AAAmBP,QAAAA,OAAO,EAAE;AAA5B;;AAEF,SAAKR,WAAL;AACE,6CAAYe,KAAZ;AAAmBP,QAAAA,OAAO,EAAE;AAA5B;;AAEF,SAAKP,UAAL;AACE,6CAAYc,KAAZ;AAAmBN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAAjC;;AAEF,SAAKhB,UAAL;AACE,6CAAYa,KAAZ;AAAmBN,QAAAA,KAAK,EAAE;AAA1B;;AAEF,SAAKN,cAAL;AACE,6CAAYY,KAAZ;AAAmBL,QAAAA,UAAU,EAAEM,MAAM,CAACE;AAAtC;;AAEF,SAAKd,aAAL;AACE,6CAAYW,KAAZ;AAAmBJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAAjC;;AAEF,SAAKb,kBAAL;AACE,6CAAYU,KAAZ;AAAmBH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAAlC;;AAEF,SAAKZ,UAAL;AACE,6CAAYS,KAAZ;AAAmBF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAAlC;;AAEF;AAAS,aAAOH,KAAP;AAzBX;AA2BD,CA5BM","sourcesContent":["import { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, GET_CATEGORIES, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  alert: null,\r\n  categories: [],\r\n  posts: [],\r\n  states: [],\r\n  cities: []\r\n};\r\n\r\nexport const appReducer = (state: any = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true }\r\n\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false }\r\n\r\n    case SHOW_ALERT:\r\n      return { ...state, alert: action.payload }\r\n\r\n    case HIDE_ALERT:\r\n      return { ...state, alert: null }\r\n\r\n    case GET_CATEGORIES:\r\n      return { ...state, categories: action.payload }\r\n\r\n    case GET_ALL_POSTS:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case GET_LOCAITONS_INFO:\r\n      return { ...state, states: action.payload }\r\n\r\n    case GET_CITIES:\r\n      return { ...state, cities: action.payload }\r\n\r\n    default: return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
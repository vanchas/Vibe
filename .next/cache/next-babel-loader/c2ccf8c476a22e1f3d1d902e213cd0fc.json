{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CREATE_POST } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  fetchesPosts: []\n};\nexport const postsReducer = (state = initialState, action) => {\n  console.log(111);\n\n  switch (action.type) {\n    case CREATE_POST:\n      console.log(action);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.concat(action.payload)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/reducers/postsReducer.ts"],"names":["CREATE_POST","initialState","posts","fetchesPosts","postsReducer","state","action","console","log","type","concat","payload"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAoD;AAC9EC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAKT,WAAL;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,6CAAWD,KAAX;AAAkBH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmBJ,MAAM,CAACK,OAA1B;AAAzB;;AAEA;AACE,aAAON,KAAP;AAPJ;AASD,CAZM","sourcesContent":["import { CREATE_POST, PostsActionTypes } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  fetchesPosts: []\r\n};\r\n\r\nexport const postsReducer = (state = initialState, action: PostsActionTypes) => {\r\n  console.log(111);\r\n  \r\n  switch (action.type) {\r\n    case CREATE_POST:\r\n    console.log(action);\r\n\r\n    return {...state, posts: state.posts.concat(action.payload)}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Location from \"../components/home-page/Location\";\nimport Search from \"../components/home-page/Search\";\nimport Categories from \"../components/home-page/Categories\";\nimport LocationPageControl from \"../components/location-page/LocPageControl\";\nimport LocHorCarousel from \"../components/location-page/LocHorCarousel\";\nimport LocVertCarousel from \"../components/location-page/LocVertCarousel\";\nimport LocPageFoot from \"../components/location-page/LocPageFoot\";\nimport { connect } from \"react-redux\";\nimport Router from 'next/router';\nimport { getAllPosts, getNewPosts, filterPosts, addToFavorites, getCities } from '../redux/actions/actions';\n\nfunction LocationPage(props) {\n  var _jsx;\n\n  useEffect(function () {\n    props.getCities(Router.query.id);\n    props.getAllPosts();\n    props.getNewPosts();\n  }, []);\n  return __jsx(\"div\", null, __jsx(Location, {\n    states: props.states,\n    filterPosts: props.filterPosts,\n    getCities: props.getCities\n  }), __jsx(Search, null), __jsx(Categories, {\n    categories: props.categories,\n    newPosts: props.newPosts,\n    filterPosts: props.filterPosts\n  }), __jsx(LocationPageControl, (_jsx = {\n    cities: props.cities,\n    filterPosts: props.filterPosts,\n    availability: props.availability,\n    available_to: props.available_to,\n    ethnicity: props.ethnicity,\n    affiliation: props.affiliation\n  }, _defineProperty(_jsx, \"filterPosts\", props.filterPosts), _defineProperty(_jsx, \"eyes\", props.eyes), _defineProperty(_jsx, \"hair\", props.hair), _jsx)), __jsx(LocHorCarousel, {\n    posts: props.posts,\n    addToFavorites: props.addToFavorites\n  }), __jsx(LocVertCarousel, {\n    posts: props.posts,\n    addToFavorites: props.addToFavorites\n  }), __jsx(LocPageFoot, {\n    filterPosts: props.filterPosts\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    states: state.app.states,\n    categories: state.app.categories,\n    cities: state.app.cities,\n    posts: state.app.posts,\n    newPosts: state.app.newPosts,\n    availability: state.app.availability,\n    available_to: state.app.available_to,\n    ethnicity: state.app.ethnicity,\n    eyes: state.app.eyes,\n    hair: state.app.hair,\n    affiliation: state.app.affiliation\n  };\n};\n\nvar mapDispatchToProps = {\n  getCities: getCities,\n  getAllPosts: getAllPosts,\n  getNewPosts: getNewPosts,\n  filterPosts: filterPosts,\n  addToFavorites: addToFavorites\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationPage);","map":null,"metadata":{},"sourceType":"module"}
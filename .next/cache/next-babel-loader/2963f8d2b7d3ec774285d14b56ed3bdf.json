{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_POST, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\";\nimport { showAlert, showSuccess } from \"./actions\"; // import { useRouter } from \"next/router\"\n\nexport function getAllProviderPost() {\n  return {\n    type: GET_ALL_POSTS\n  };\n}\n;\nexport var addProviderPost = function addProviderPost(post) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var user, formData, response, promise;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = authenticationService.currentUserValue;\n              formData = new FormData();\n              formData.append('gender', post.gender);\n              formData.append('age', post.age);\n              formData.append('ethnicity_id', post.ethnicity_id);\n              formData.append('hair_id', post.hair_id);\n              formData.append('eye_id', post.eye_id);\n              formData.append('height', post.height);\n              formData.append('affiliation_id', post.affiliation_id);\n              formData.append('availability_ids', post.availability_ids);\n              formData.append('availableto_ids', post.availableto_ids);\n              formData.append('number', post.number);\n              formData.append('email', post.email);\n              formData.append('model_name', post.model_name);\n              post.photo.forEach(function (p) {\n                return formData.append('photo', p);\n              });\n              formData.append('video_link', post.video_link);\n              formData.append('about', post.about);\n              formData.append('summary', post.summary);\n              formData.append('category_id', post.category_id);\n              formData.append('state_id', post.state_id);\n              formData.append('city_id', post.city_id);\n              formData.append('second_name', post.second_name);\n              formData.append('account_name', post.account_name);\n              formData.append('photo_vertical', post.photo_vertical);\n              formData.append('photo_horizontal', post.photo_horizontal);\n              _context.next = 27;\n              return fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n                method: 'POST',\n                headers: {\n                  'Access-Control-Allow-Origin': '*',\n                  'Accept': 'application/json',\n                  'Authorization': \"\".concat(user.token_type, \" \").concat(user.token)\n                },\n                body: formData\n              });\n\n            case 27:\n              response = _context.sent;\n              promise = response.json();\n\n              if (response.status === 201) {\n                promise.then(function (data) {\n                  dispatch({\n                    type: ADD_POST,\n                    payload: post\n                  });\n                  dispatch(showSuccess(data.message));\n                })[\"catch\"](function (err) {\n                  return console.error('Error:', err);\n                });\n              } else {\n                promise.then(function (data) {\n                  dispatch(showAlert(data.message));\n                })[\"catch\"](function (err) {\n                  return console.error('Error:', err);\n                });\n              }\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport function updateProviderPost(post) {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  };\n}\n;\nexport function removeProviderPost(id) {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  };\n}\n;","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/redux/actions/providerActions.ts"],"names":["ADD_POST","UPDATE_POST","REMOVE_POST","GET_ALL_POSTS","fetch","authenticationService","showAlert","showSuccess","getAllProviderPost","type","addProviderPost","post","dispatch","user","currentUserValue","formData","FormData","append","gender","age","ethnicity_id","hair_id","eye_id","height","affiliation_id","availability_ids","availableto_ids","number","email","model_name","photo","forEach","p","video_link","about","summary","category_id","state_id","city_id","second_name","account_name","photo_vertical","photo_horizontal","method","headers","token_type","token","body","response","promise","json","status","then","data","payload","message","err","console","error","updateProviderPost","removeProviderPost","id"],"mappings":"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","sourcesContent":["import { ADD_POST, ProviderPost, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\"\nimport fetch from 'isomorphic-unfetch'\nimport { authenticationService } from \"../../_services\";\nimport {showAlert, showSuccess} from \"./actions\";\n// import { useRouter } from \"next/router\"\n\nexport function getAllProviderPost(): any {\n  return {\n    type: GET_ALL_POSTS\n  }\n};\n\nexport const addProviderPost = (post: any) => async (dispatch: any) => {\n  const user = authenticationService.currentUserValue;\n  const formData = new FormData();\n  formData.append('gender', post.gender);\n  formData.append('age', post.age);\n  formData.append('ethnicity_id', post.ethnicity_id);\n  formData.append('hair_id', post.hair_id);\n  formData.append('eye_id', post.eye_id);\n  formData.append('height', post.height);\n  formData.append('affiliation_id', post.affiliation_id);\n  formData.append('availability_ids', post.availability_ids);\n  formData.append('availableto_ids', post.availableto_ids);\n  formData.append('number', post.number);\n  formData.append('email', post.email);\n  formData.append('model_name', post.model_name);\n  post.photo.forEach((p: any) => {\n    return formData.append('photo', p);\n  });\n  formData.append('video_link', post.video_link);\n  formData.append('about', post.about);\n  formData.append('summary', post.summary);\n  formData.append('category_id', post.category_id);\n  formData.append('state_id', post.state_id);\n  formData.append('city_id', post.city_id);\n  formData.append('second_name', post.second_name);\n  formData.append('account_name', post.account_name);\n  formData.append('photo_vertical', post.photo_vertical);\n  formData.append('photo_horizontal', post.photo_horizontal);\n\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n    method: 'POST',\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Accept': 'application/json',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: formData\n  });\n  const promise = response.json();\n  if (response.status === 201) {\n    promise.then(data => {\n      dispatch({ type: ADD_POST, payload: post });\n      dispatch(showSuccess(data.message))\n    }).catch(err => console.error('Error:', err))\n  } else {\n    promise.then(data => {\n      dispatch(showAlert(data.message));\n    }).catch(err => console.error('Error:', err))\n  }\n};\nexport function updateProviderPost(post: ProviderPost): any {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  }\n};\nexport function removeProviderPost(id: number | string): any {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { CREATE_POST, FETCH_POST } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nexport function createPost(post) {\n  return {\n    type: CREATE_POST,\n    payload: post\n  };\n}\n;\nexport function fetchPosts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/todos?_limit=5', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*'\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              json = _context.sent;\n              dispatch({\n                type: FETCH_POST,\n                payload: json\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n;","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/actions.ts"],"names":["CREATE_POST","FETCH_POST","fetch","createPost","post","type","payload","fetchPosts","dispatch","method","headers","response","json"],"mappings":";;AAAA,SAASA,WAAT,EAA8CC,UAA9C,QAAgE,SAAhE;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAkD;AACrD,SAAO;AACHC,IAAAA,IAAI,EAAEL,WADH;AAEHM,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH;AAAA;AAED,OAAO,SAASG,UAAT,GAAsB;AACzB;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBN,KAAK,CAAC,iBAAD,EAAoB;AAC5CO,gBAAAA,MAAM,EAAE,KADoC;AAE5CC,gBAAAA,OAAO,EAAE;AACL,kCAAgB,kBADX;AAEL,iDAA+B;AAF1B;AAFmC,eAApB,CADzB;;AAAA;AACGC,cAAAA,QADH;AAAA;AAAA,qBAQgBA,QAAQ,CAACC,IAAT,EARhB;;AAAA;AAQGA,cAAAA,IARH;AASHJ,cAAAA,QAAQ,CAAC;AAAEH,gBAAAA,IAAI,EAAEJ,UAAR;AAAoBK,gBAAAA,OAAO,EAAEM;AAA7B,eAAD,CAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAWH;AAAA","sourcesContent":["import { CREATE_POST, PostsActionTypes, Post, FETCH_POST } from \"./types\"\r\nimport { Dispatch } from 'redux';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport function createPost(post: Post): PostsActionTypes {\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: post\r\n    }\r\n};\r\n\r\nexport function fetchPosts() {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await fetch('/todos?_limit=5', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        });\r\n        const json = await response.json();\r\n        dispatch({ type: FETCH_POST, payload: json });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}
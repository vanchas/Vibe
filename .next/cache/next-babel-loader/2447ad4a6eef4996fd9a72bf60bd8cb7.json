{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\pages\\\\addPost.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AddPostForm from '../components/add-post/AddPostForm';\nimport { connect } from 'react-redux';\nimport { addProviderPost } from '../redux/actions/providerActions';\nimport { getAllPosts, getLocationsInfo, getCities, getAppInfo } from '../redux/actions/actions';\n\nfunction AddPost({\n  getAppInfo,\n  getCities,\n  addProviderPost,\n  getLocationsInfo,\n  posts,\n  getAllPosts,\n  affiliation,\n  availability,\n  available_to,\n  ethnicity,\n  eyes,\n  hair,\n  states,\n  cities,\n  categories\n}) {\n  useEffect(() => {\n    getAllPosts();\n    getLocationsInfo();\n    getAppInfo();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"h3 text-white py-2 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, posts && posts.length ? posts.length : 0, \" posts\"), __jsx(AddPostForm, {\n    addProviderPost: addProviderPost,\n    affiliation: affiliation,\n    availability: availability,\n    available_to: available_to,\n    ethnicity: ethnicity,\n    eyes: eyes,\n    hair: hair,\n    states: states,\n    cities: cities,\n    getCities: getCities,\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    affiliation: state.app.affiliation,\n    availability: state.app.availability,\n    available_to: state.app.available_to,\n    ethnicity: state.app.ethnicity,\n    eyes: state.app.eyes,\n    hair: state.app.hair,\n    posts: state.app.posts,\n    states: state.app.states,\n    cities: state.app.cities,\n    categories: state.app.categories\n  };\n};\n\nconst mapDispatchToProps = {\n  addProviderPost,\n  getAllPosts,\n  getLocationsInfo,\n  getCities,\n  getAppInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/pages/addPost.jsx"],"names":["React","useEffect","AddPostForm","connect","addProviderPost","getAllPosts","getLocationsInfo","getCities","getAppInfo","AddPost","posts","affiliation","availability","available_to","ethnicity","eyes","hair","states","cities","categories","length","mapStateToProps","state","app","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,SAAxC,EAAmDC,UAAnD,QAAqE,0BAArE;;AAEA,SAASC,OAAT,CAAiB;AACfD,EAAAA,UADe;AAEfD,EAAAA,SAFe;AAGfH,EAAAA,eAHe;AAIfE,EAAAA,gBAJe;AAKfI,EAAAA,KALe;AAMfL,EAAAA,WANe;AAOfM,EAAAA,WAPe;AAQfC,EAAAA,YARe;AASfC,EAAAA,YATe;AAUfC,EAAAA,SAVe;AAWfC,EAAAA,IAXe;AAYfC,EAAAA,IAZe;AAafC,EAAAA,MAbe;AAcfC,EAAAA,MAde;AAefC,EAAAA;AAfe,CAAjB,EAgBG;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACXC,IAAAA,gBAAgB;AAChBE,IAAAA,UAAU;AACX,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDE,KAAK,IAAIA,KAAK,CAACU,MAAf,GAAwBV,KAAK,CAACU,MAA9B,GAAuC,CAAxF,WADF,EAEE,MAAC,WAAD;AACE,IAAA,eAAe,EAAEhB,eADnB;AAEE,IAAA,WAAW,EAAEO,WAFf;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,IAAI,EAAEC,IAPR;AAQE,IAAA,MAAM,EAAEC,MARV;AASE,IAAA,MAAM,EAAEC,MATV;AAUE,IAAA,SAAS,EAAEX,SAVb;AAWE,IAAA,UAAU,EAAEY,UAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAkBD;;AAED,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,WAAW,EAAEW,KAAK,CAACC,GAAN,CAAUZ,WADlB;AAELC,IAAAA,YAAY,EAAEU,KAAK,CAACC,GAAN,CAAUX,YAFnB;AAGLC,IAAAA,YAAY,EAAES,KAAK,CAACC,GAAN,CAAUV,YAHnB;AAILC,IAAAA,SAAS,EAAEQ,KAAK,CAACC,GAAN,CAAUT,SAJhB;AAKLC,IAAAA,IAAI,EAAEO,KAAK,CAACC,GAAN,CAAUR,IALX;AAMLC,IAAAA,IAAI,EAAEM,KAAK,CAACC,GAAN,CAAUP,IANX;AAOLN,IAAAA,KAAK,EAAEY,KAAK,CAACC,GAAN,CAAUb,KAPZ;AAQLO,IAAAA,MAAM,EAAEK,KAAK,CAACC,GAAN,CAAUN,MARb;AASLC,IAAAA,MAAM,EAAEI,KAAK,CAACC,GAAN,CAAUL,MATb;AAULC,IAAAA,UAAU,EAAEG,KAAK,CAACC,GAAN,CAAUJ;AAVjB,GAAP;AAYD,CAbD;;AAeA,MAAMK,kBAAkB,GAAG;AACzBpB,EAAAA,eADyB;AACRC,EAAAA,WADQ;AACKC,EAAAA,gBADL;AACuBC,EAAAA,SADvB;AACkCC,EAAAA;AADlC,CAA3B;AAKA,eAAeL,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,OAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport AddPostForm from '../components/add-post/AddPostForm'\r\nimport { connect } from 'react-redux'\r\nimport { addProviderPost } from '../redux/actions/providerActions'\r\nimport { getAllPosts, getLocationsInfo, getCities, getAppInfo } from '../redux/actions/actions'\r\n\r\nfunction AddPost({\r\n  getAppInfo,\r\n  getCities,\r\n  addProviderPost,\r\n  getLocationsInfo,\r\n  posts,\r\n  getAllPosts,\r\n  affiliation,\r\n  availability,\r\n  available_to,\r\n  ethnicity,\r\n  eyes,\r\n  hair,\r\n  states,\r\n  cities,\r\n  categories\r\n}) {\r\n\r\n  useEffect(() => {\r\n    getAllPosts();\r\n    getLocationsInfo();\r\n    getAppInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"h3 text-white py-2 text-center\">{posts && posts.length ? posts.length : 0} posts</div>\r\n      <AddPostForm\r\n        addProviderPost={addProviderPost}\r\n        affiliation={affiliation}\r\n        availability={availability}\r\n        available_to={available_to}\r\n        ethnicity={ethnicity}\r\n        eyes={eyes}\r\n        hair={hair}\r\n        states={states}\r\n        cities={cities}\r\n        getCities={getCities}\r\n        categories={categories}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    affiliation: state.app.affiliation,\r\n    availability: state.app.availability,\r\n    available_to: state.app.available_to,\r\n    ethnicity: state.app.ethnicity,\r\n    eyes: state.app.eyes,\r\n    hair: state.app.hair,\r\n    posts: state.app.posts,\r\n    states: state.app.states,\r\n    cities: state.app.cities,\r\n    categories: state.app.categories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addProviderPost, getAllPosts, getLocationsInfo, getCities, getAppInfo\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\n"]},"metadata":{},"sourceType":"module"}
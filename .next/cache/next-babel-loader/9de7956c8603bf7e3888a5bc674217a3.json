{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS, GET_FAVORITES, GET_COMPLAINS, SORT_POSTS, SHOW_SUCCESS } from \"../actions/types\";\nvar initialState = {\n  postComments: [],\n  loading: false,\n  alert: null,\n  categories: [],\n  posts: [],\n  newPosts: [],\n  states: [],\n  cities: [],\n  supportTasks: [],\n  affiliation: [],\n  availability: [],\n  available_to: [],\n  ethnicity: [],\n  eyes: [],\n  hair: [],\n  pagesNumber: 0,\n  favorites: [],\n  complains: [],\n  success: null\n};\nexport var appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case SHOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: action.payload\n      });\n\n    case HIDE_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case SHOW_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: action.payload\n      });\n\n    case HIDE_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: null\n      });\n\n    case GET_ALL_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case SORT_POSTS:\n      var newPosts = state.posts;\n\n      if (action.payload === 'date/-') {\n        newPosts.sort(function (a, b) {\n          var dateA = new Date(a.created_at.split('T')[0].split('-').join('/'));\n          var dateB = new Date(b.created_at.split('T')[0].split('-').join('/'));\n\n          if (dateA.getTime() < dateB.getTime()) {\n            return a - b;\n          } else if (dateA.getTime() > dateB.getTime()) {\n            return b - a;\n          } else return;\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: newPosts\n      });\n\n    case FILTER_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case GET_PAGES_NUMBER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagesNumber: action.payload\n      });\n\n    case GET_NEW_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newPosts: action.payload\n      });\n\n    case GET_LOCAITONS_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        states: action.payload\n      });\n\n    case GET_CITIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cities: action.payload\n      });\n\n    case GET_COMPLAINS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        complains: action.payload\n      });\n\n    case GET_FAVORITES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favorites: action.payload\n      });\n\n    case CREATE_SUPPORT_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        supportTasks: [].concat(_toConsumableArray(state.supportTasks), [action.payload])\n      });\n\n    case GET_ALL_USER_TASKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        supportTasks: action.payload\n      });\n\n    case GET_POST_COMMENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postComments: action.payload\n      });\n\n    case CREATE_POST_COMMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postComments: [].concat(_toConsumableArray(state.postComments), [action.payload])\n      });\n\n    case GET_APP_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: action.payload.categories,\n        affiliation: action.payload.affiliation,\n        availability: action.payload.availability,\n        available_to: action.payload.available_to,\n        ethnicity: action.payload.ethnicity,\n        eyes: action.payload.eyes,\n        hair: action.payload.hair\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/redux/reducers/appReducer.ts"],"names":["SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","GET_ALL_POSTS","GET_LOCAITONS_INFO","GET_CITIES","CREATE_SUPPORT_TASK","GET_ALL_USER_TASKS","GET_APP_INFO","GET_NEW_POSTS","GET_PAGES_NUMBER","GET_POST_COMMENTS","CREATE_POST_COMMENT","FILTER_POSTS","GET_FAVORITES","GET_COMPLAINS","SORT_POSTS","SHOW_SUCCESS","initialState","postComments","loading","alert","categories","posts","newPosts","states","cities","supportTasks","affiliation","availability","available_to","ethnicity","eyes","hair","pagesNumber","favorites","complains","success","appReducer","state","action","type","payload","sort","a","b","dateA","Date","created_at","split","join","dateB","getTime"],"mappings":"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","sourcesContent":["import {\n  SHOW_LOADER,\n  HIDE_LOADER,\n  SHOW_ALERT,\n  HIDE_ALERT,\n  GET_ALL_POSTS,\n  GET_LOCAITONS_INFO,\n  GET_CITIES,\n  CREATE_SUPPORT_TASK,\n  GET_ALL_USER_TASKS,\n  GET_APP_INFO,\n  GET_NEW_POSTS,\n  GET_PAGES_NUMBER,\n  GET_POST_COMMENTS,\n  CREATE_POST_COMMENT,\n  FILTER_POSTS,\n  GET_FAVORITES,\n  GET_COMPLAINS,\n  SORT_POSTS,\n  SHOW_SUCCESS\n} from \"../actions/types\";\nimport moment from 'moment'\n\nconst initialState = {\n  postComments: [],\n  loading: false,\n  alert: null,\n  categories: [],\n  posts: [],\n  newPosts: [],\n  states: [],\n  cities: [],\n  supportTasks: [],\n  affiliation: [],\n  availability: [],\n  available_to: [],\n  ethnicity: [],\n  eyes: [],\n  hair: [],\n  pagesNumber: 0,\n  favorites: [],\n  complains: [],\n  success: null\n};\n\nexport const appReducer = (state: any = initialState, action: any) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return { ...state, loading: true }\n\n    case SHOW_SUCCESS:\n      return { ...state, success: action.payload }\n\n    case HIDE_LOADER:\n      return { ...state, loading: false }\n\n    case SHOW_ALERT:\n      return { ...state, alert: action.payload }\n\n    case HIDE_ALERT:\n      return { ...state, alert: null }\n\n    case GET_ALL_POSTS:\n      return { ...state, posts: action.payload }\n\n    case SORT_POSTS:\n      let newPosts = state.posts;\n      if (action.payload === 'date/-') {\n        newPosts.sort((a: any, b: any) => {\n          const dateA = new Date(a.created_at.split('T')[0].split('-').join('/'));\n          const dateB = new Date(b.created_at.split('T')[0].split('-').join('/'));\n          if (dateA.getTime() < dateB.getTime()) {\n            return a - b;\n          } else if (dateA.getTime() > dateB.getTime()) {\n            return b - a;\n          } else return;\n        });\n      }\n      return { ...state, posts: newPosts }\n\n    case FILTER_POSTS:\n      return { ...state, posts: action.payload }\n\n    case GET_PAGES_NUMBER:\n      return { ...state, pagesNumber: action.payload }\n\n    case GET_NEW_POSTS:\n      return { ...state, newPosts: action.payload }\n\n    case GET_LOCAITONS_INFO:\n      return { ...state, states: action.payload }\n\n    case GET_CITIES:\n      return { ...state, cities: action.payload }\n\n    case GET_COMPLAINS:\n      return { ...state, complains: action.payload }\n\n    case GET_FAVORITES:\n      return { ...state, favorites: action.payload }\n\n    case CREATE_SUPPORT_TASK:\n      return { ...state, supportTasks: [...state.supportTasks, action.payload] }\n\n    case GET_ALL_USER_TASKS:\n      return { ...state, supportTasks: action.payload }\n\n    case GET_POST_COMMENTS:\n      return { ...state, postComments: action.payload }\n\n    case CREATE_POST_COMMENT:\n      return { ...state, postComments: [...state.postComments, action.payload] }\n\n    case GET_APP_INFO:\n      return {\n        ...state,\n        categories: action.payload.categories,\n        affiliation: action.payload.affiliation,\n        availability: action.payload.availability,\n        available_to: action.payload.available_to,\n        ethnicity: action.payload.ethnicity,\n        eyes: action.payload.eyes,\n        hair: action.payload.hair\n      }\n\n    default: return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport { TEST_REQUEST_POSTS, TEST_FETCH_POST } from '../actions/types';\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\nexport function* sagaWatcher() {\n  yield takeEvery(TEST_REQUEST_POSTS, sagaWorker);\n}\n\nfunction* sagaWorker() {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchPosts);\n    yield put({\n      type: TEST_FETCH_POST,\n      payload\n    });\n    yield put(hideLoader());\n  } catch (e) {\n    yield put(showAlert('Something going wrong'));\n    yield put(hideLoader());\n  }\n}\n\nasync function fetchPosts() {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  return await response.json();\n}","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/redux/sagas/testSagas.ts"],"names":["fetch","takeEvery","put","call","TEST_REQUEST_POSTS","TEST_FETCH_POST","showLoader","hideLoader","showAlert","sagaWatcher","sagaWorker","payload","fetchPosts","type","e","response","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,kBAApD;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,oBAAlD;AAGA,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMR,SAAS,CAACG,kBAAD,EAAqBM,UAArB,CAAf;AACD;;AAED,UAAUA,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMR,GAAG,CAACI,UAAU,EAAX,CAAT;AACA,UAAMK,OAAO,GAAG,MAAMR,IAAI,CAACS,UAAD,CAA1B;AACA,UAAMV,GAAG,CAAC;AAAEW,MAAAA,IAAI,EAAER,eAAR;AAAyBM,MAAAA;AAAzB,KAAD,CAAT;AACA,UAAMT,GAAG,CAACK,UAAU,EAAX,CAAT;AACD,GALD,CAKE,OAAOO,CAAP,EAAU;AACV,UAAMZ,GAAG,CAACM,SAAS,CAAC,uBAAD,CAAV,CAAT;AACA,UAAMN,GAAG,CAACK,UAAU,EAAX,CAAT;AACD;AACF;;AAED,eAAeK,UAAf,GAA4B;AAC1B,QAAMG,QAAQ,GAAG,MAAMf,KAAK,CAAC,4CAAD,CAA5B;AACA,SAAO,MAAMe,QAAQ,CAACC,IAAT,EAAb;AACD","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport { TEST_REQUEST_POSTS, TEST_FETCH_POST } from '../actions/types';\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\n\n\nexport function* sagaWatcher() {\n  yield takeEvery(TEST_REQUEST_POSTS, sagaWorker)\n}\n\nfunction* sagaWorker() {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchPosts);\n    yield put({ type: TEST_FETCH_POST, payload });\n    yield put(hideLoader());\n  } catch (e) {\n    yield put(showAlert('Something going wrong'));\n    yield put(hideLoader());\n  }\n}\n\nasync function fetchPosts() {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  return await response.json();\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport store from \"../redux/store\";\nimport { showAlert, showSuccess } from \"../redux/actions/actions\";\nvar currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nvar target = \"https://intim-vibe-api.padilo.pro/api\";\nexport var authenticationService = {\n  login: login,\n  logout: logout,\n  registrationAdmin: registrationAdmin,\n  registrationClient: registrationClient,\n  registrationProvider: registrationProvider,\n  registrationAgency: registrationAgency,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nfunction login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context.next = 3;\n            return fetch(\"\".concat(target, \"/login\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            });\n\n          case 3:\n            response = _context.sent;\n            promise = response.json();\n\n            if (!(response.status === 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", promise.then(function (data) {\n              Cookies.set(\"currentUser\", JSON.stringify(data), {\n                expires: 1\n              });\n              currentUserSubject = data;\n              return data;\n            }).then(function () {\n              return Router.push('/');\n            }).then(function () {\n              return window.location.reload();\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context.abrupt(\"return\", promise.then(function (data) {\n              return showAlert(data.message);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction registrationClient(_x3, _x4, _x5, _x6) {\n  return _registrationClient.apply(this, arguments);\n}\n\nfunction _registrationClient() {\n  _registrationClient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, password, email, password_confirmation) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context2.next = 3;\n            return fetch(\"https://intim-vibe-api.padilo.pro/api/client/register\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation\n              })\n            });\n\n          case 3:\n            response = _context2.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context2.abrupt(\"return\", promise.then(function (data) {\n              return showAlert(data.message);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _registrationClient.apply(this, arguments);\n}\n\nfunction registrationAdmin(_x7, _x8, _x9, _x10) {\n  return _registrationAdmin.apply(this, arguments);\n}\n\nfunction _registrationAdmin() {\n  _registrationAdmin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name, password, email, password_confirmation) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context3.next = 3;\n            return fetch(\"\".concat(target, \"/admin/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation\n              })\n            });\n\n          case 3:\n            response = _context3.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context3.next = 9;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context3.abrupt(\"return\", promise.then(function (data) {\n              return showAlert(data.message);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _registrationAdmin.apply(this, arguments);\n}\n\nfunction registrationProvider(_x11, _x12, _x13, _x14, _x15) {\n  return _registrationProvider.apply(this, arguments);\n}\n\nfunction _registrationProvider() {\n  _registrationProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(name, password, email, password_confirmation, phone) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context4.next = 3;\n            return fetch(\"\".concat(target, \"/individual/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation,\n                phone: phone\n              })\n            });\n\n          case 3:\n            response = _context4.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context4.next = 9;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context4.abrupt(\"return\", promise.then(function (data) {\n              return showAlert(data.message);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _registrationProvider.apply(this, arguments);\n}\n\nfunction registrationAgency(_x16, _x17, _x18, _x19, _x20, _x21) {\n  return _registrationAgency.apply(this, arguments);\n}\n\nfunction _registrationAgency() {\n  _registrationAgency = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name, password, email, password_confirmation, phone, agency_name) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context5.next = 3;\n            return fetch(\"\".concat(target, \"/agency/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation,\n                phone: phone,\n                agency_name: agency_name\n              })\n            });\n\n          case 3:\n            response = _context5.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context5.next = 9;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context5.abrupt(\"return\", promise.then(function (data) {\n              return showAlert(data.message);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _registrationAgency.apply(this, arguments);\n}\n\nfunction logout() {\n  return _logout.apply(this, arguments);\n}\n\nfunction _logout() {\n  _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context6.next = 3;\n            return fetch(\"\".concat(target, \"/logout\"), {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\"\n              }\n            }).then(function () {\n              return Router.push('/login');\n            }).then(function () {\n              return window.location.reload(true);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 3:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _logout.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","Router","store","showAlert","showSuccess","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","registrationAgency","currentUser","currentUserValue","email","password","remove","method","headers","body","JSON","stringify","response","promise","json","status","then","data","set","expires","push","window","location","reload","err","console","error","message","name","password_confirmation","dispatch","setTimeout","phone","agency_name"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport store from \"../redux/store\";\nimport {showAlert, showSuccess} from \"../redux/actions/actions\";\n\nlet currentUserSubject = Cookies.getJSON(\"currentUser\")\n    ? Cookies.getJSON(\"currentUser\")\n    : {};\n\nconst target = `https://intim-vibe-api.padilo.pro/api`;\n\nexport const authenticationService = {\n    login,\n    logout,\n    registrationAdmin,\n    registrationClient,\n    registrationProvider,\n    registrationAgency,\n    currentUser: currentUserSubject,\n    get currentUserValue() {\n        return currentUserSubject;\n    },\n};\n\nasync function login(email: string, password: string): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response = await fetch(`${target}/login`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({email, password}),\n    });\n    const promise = response.json();\n    if (response.status === 200) {\n        return promise.then(data => {\n            Cookies.set(\"currentUser\", JSON.stringify(data), {expires: 1});\n            currentUserSubject = data;\n            return data;\n        }).then(() => Router.push('/'))\n            .then(() => window.location.reload())\n            .catch((err) => console.error(\"Error:\", err));\n    } else {\n        return promise\n            .then(data => showAlert(data.message))\n            .catch((err) => console.error(\"Error:\", err));\n    }\n}\n\nasync function registrationClient(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n        }),\n    });\n    const promise = response.json();\n    if (response.status === 201) {\n        return promise.then((data: any) => {\n            store.dispatch(showSuccess(data.message))\n            setTimeout(() => window.location.reload(), 3000)\n        }).catch((err: any) => console.error(\"Error:\", err));\n    } else {\n        return promise\n            .then(data => showAlert(data.message))\n            .catch((err) => console.error(\"Error:\", err));\n    }\n}\n\nasync function registrationAdmin(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response = await fetch(`${target}/admin/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n        }),\n    });\n    const promise = response.json();\n    if (response.status === 201) {\n        return promise.then((data: any) => {\n            store.dispatch(showSuccess(data.message))\n            setTimeout(() => window.location.reload(), 3000)\n        }).catch((err: any) => console.error(\"Error:\", err));\n    } else {\n        return promise\n            .then(data => showAlert(data.message))\n            .catch((err) => console.error(\"Error:\", err));\n    }\n}\n\nasync function registrationProvider(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string,\n    phone: string | number\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response = await fetch(`${target}/individual/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n            phone\n        }),\n    });\n    const promise = response.json();\n    if (response.status === 201) {\n        return promise.then((data: any) => {\n            store.dispatch(showSuccess(data.message))\n            setTimeout(() => window.location.reload(), 3000)\n        }).catch((err: any) => console.error(\"Error:\", err));\n    } else {\n        return promise\n            .then(data => showAlert(data.message))\n            .catch((err) => console.error(\"Error:\", err));\n    }\n}\n\nasync function registrationAgency(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string,\n    phone: string | number,\n    agency_name: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response = await fetch(`${target}/agency/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n            phone,\n            agency_name\n        }),\n    });\n    const promise = response.json();\n    if (response.status === 201) {\n        return promise.then((data: any) => {\n            store.dispatch(showSuccess(data.message))\n            setTimeout(() => window.location.reload(), 3000)\n        }).catch((err: any) => console.error(\"Error:\", err));\n    } else {\n        return promise\n            .then(data => showAlert(data.message))\n            .catch((err) => console.error(\"Error:\", err));\n    }\n}\n\nasync function logout(): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/logout`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    })\n        .then(() => Router.push('/login'))\n        .then(() => window.location.reload(true))\n        .catch((err) => console.error(\"Error:\", err));\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { TEST_CREATE_POST, SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, TEST_REQUEST_POSTS, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\"; // T E S T \n\nexport function createPost(post) {\n  return {\n    type: TEST_CREATE_POST,\n    payload: post\n  };\n}\n;\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER\n  };\n}\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER\n  };\n}\nexport function showAlert(text) {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: text\n    });\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 3000);\n  };\n}\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT\n  };\n}\nexport function fetchPosts() {\n  return {\n    type: TEST_REQUEST_POSTS\n  };\n}\n;\nexport const getAllPosts = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts`);\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: GET_ALL_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getNewPosts = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/all/new`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_NEW_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getLocationsInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_LOCAITONS_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getAppInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/info`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_APP_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getCities = stateId => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location/cities/${stateId}`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_CITIES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const createSupportTask = task => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify(task)\n  });\n  const promise = response.json();\n  promise.then(res => console.log(res)).catch(err => console.error('Error: ', err));\n  return dispatch({\n    type: CREATE_SUPPORT_TASK,\n    payload: task\n  });\n};\nexport const getAllUsersTasks = () => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/${user.user.id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_USER_TASKS,\n      payload: res\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const selectPostsPage = page => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts?page=${page}`);\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: GET_ALL_POSTS,\n      payload: res.data\n    });\n  });\n};\nexport const getPostComments = postId => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_POST_COMMENTS,\n      payload: res.data\n    });\n  });\n};\nexport const createPostComment = (postId, comment) => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      comment\n    })\n  });\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: CREATE_POST_COMMENT,\n      payload: res.data\n    });\n  });\n};\nexport const filterPosts = (key, value) => async dispatch => {\n  // from, to, gender, ethnicity_id, hair_id, eye_id, category_id, affiliation_id, availability_ids(array), availableto_ids(array)\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/filter`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: JSON.stringify({\n      [key]: value\n    })\n  });\n  const promise = response.json();\n  promise.then(res => {\n    console.log(res.data);\n    dispatch({\n      type: FILTER_POSTS,\n      payload: res.data\n    });\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/actions.ts"],"names":["TEST_CREATE_POST","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","TEST_REQUEST_POSTS","GET_ALL_POSTS","GET_LOCAITONS_INFO","GET_CITIES","CREATE_SUPPORT_TASK","GET_ALL_USER_TASKS","GET_APP_INFO","GET_NEW_POSTS","GET_PAGES_NUMBER","GET_POST_COMMENTS","CREATE_POST_COMMENT","FILTER_POSTS","fetch","authenticationService","createPost","post","type","payload","showLoader","hideLoader","showAlert","text","dispatch","setTimeout","hideAlert","fetchPosts","getAllPosts","response","promise","json","then","res","last_page","data","catch","err","console","error","getNewPosts","getLocationsInfo","getAppInfo","getCities","stateId","createSupportTask","task","user","currentUserValue","method","headers","token_type","token","body","JSON","stringify","log","getAllUsersTasks","id","selectPostsPage","page","getPostComments","postId","createPostComment","comment","filterPosts","key","value"],"mappings":"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","sourcesContent":["import { TEST_CREATE_POST, SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, TEST_REQUEST_POSTS, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS } from \"./types\"\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { authenticationService } from \"../../_services\";\r\n\r\n// T E S T \r\nexport function createPost(post: any): any {\r\n    return {\r\n        type: TEST_CREATE_POST,\r\n        payload: post\r\n    }\r\n};\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOADER\r\n    }\r\n}\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER\r\n    }\r\n}\r\nexport function showAlert(text: string): any {\r\n    return (dispatch: Function) => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: text\r\n        })\r\n        setTimeout(() => {\r\n            dispatch(hideAlert())\r\n        }, 3000)\r\n    }\r\n}\r\nexport function hideAlert() {\r\n    return {\r\n        type: HIDE_ALERT\r\n    }\r\n}\r\nexport function fetchPosts(): any {\r\n    return {\r\n        type: TEST_REQUEST_POSTS\r\n    }\r\n};\r\nexport const getAllPosts = () => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        dispatch({ type: GET_PAGES_NUMBER, payload: res.last_page });\r\n        dispatch({ type: GET_ALL_POSTS, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getNewPosts = () => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/all/new`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_NEW_POSTS, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getLocationsInfo = () => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_LOCAITONS_INFO, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getAppInfo = () => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/info`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_APP_INFO, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getCities = (stateId: number | string) => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location/cities/${stateId}`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_CITIES, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const createSupportTask = (task: any) => async (dispatch: any) => {\r\n    const user = authenticationService.currentUserValue;\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': `${user.token_type} ${user.token}`\r\n        },\r\n        body: JSON.stringify(task)\r\n    });\r\n    const promise = response.json();\r\n    promise.then(res => console.log(res))\r\n        .catch(err => console.error('Error: ', err));\r\n    return dispatch({ type: CREATE_SUPPORT_TASK, payload: task })\r\n}\r\nexport const getAllUsersTasks = () => async (dispatch: any) => {\r\n    const user = await authenticationService.currentUserValue;\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/${user.user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': `${user.token_type} ${user.token}`\r\n        }\r\n    });\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_ALL_USER_TASKS, payload: res });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const selectPostsPage = (page: number | string) => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts?page=${page}`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        dispatch({ type: GET_PAGES_NUMBER, payload: res.last_page });\r\n        dispatch({ type: GET_ALL_POSTS, payload: res.data });\r\n    })\r\n\r\n}\r\nexport const getPostComments = (postId: number | string) => async (dispatch: any) => {\r\n    const user = await authenticationService.currentUserValue;\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': `${user.token_type} ${user.token}`\r\n        }\r\n    });\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        dispatch({ type: GET_POST_COMMENTS, payload: res.data });\r\n    });\r\n}\r\nexport const createPostComment = (postId: number | string, comment: string) => async (dispatch: any) => {\r\n    const user = await authenticationService.currentUserValue;\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': `${user.token_type} ${user.token}`\r\n        },\r\n        body: JSON.stringify({ comment })\r\n    });\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        dispatch({ type: CREATE_POST_COMMENT, payload: res.data });\r\n    });\r\n}\r\nexport const filterPosts = (key: string, value: any) => async (dispatch: any) => {\r\n    // from, to, gender, ethnicity_id, hair_id, eye_id, category_id, affiliation_id, availability_ids(array), availableto_ids(array)\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/filter`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        },\r\n        body: JSON.stringify({ [key]: value })\r\n    });\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        console.log(res.data);\r\n        \r\n        dispatch({ type: FILTER_POSTS, payload: res.data });\r\n        dispatch({ type: GET_PAGES_NUMBER, payload: res.last_page });\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport { handleResponse } from \"../_helpers\";\nimport Router from \"next/router\";\nlet currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nconst target = `https://intim-vibe-api.padilo.pro/api`;\nexport const authenticationService = {\n  login,\n  logout,\n  registrationAdmin,\n  registrationClient,\n  registrationProvider,\n  confirmEmail,\n  confirmSMS,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nasync function login(email, password) {\n  return await fetch(`${target}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleResponse).then(user => {\n    if (user.token) {\n      Cookies.set(\"currentUser\", JSON.stringify(user));\n      currentUserSubject = user;\n      console.log(user);\n      return user;\n    }\n  }).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationClient(name, password, email, password_confirmation) {\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(client => {\n    console.log(\"client:\", client);\n    Cookies.set(\"currentUser\", JSON.stringify(client));\n    currentUserSubject = client;\n    return client;\n  }).then(() => Router.push(\"/userCabinet\")).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationAdmin(name, password, email, password_confirmation) {\n  return await fetch(`${target}/admin/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(admin => {\n    Cookies.set(\"currentUser\", JSON.stringify(admin));\n    currentUserSubject = admin;\n    return admin;\n  }).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationProvider(name, password, email, password_confirmation, phone) {\n  return await fetch(`${target}/individual/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone\n    })\n  }).then(handleResponse).then(data => {\n    if (data.user) {\n      Cookies.set(\"currentUser\", JSON.stringify(data.user));\n      currentUserSubject = data.user;\n      return data.user;\n    }\n  }).then(() => Router.push(\"/modelCabinet\")).catch(err => console.error(\"Error:\", err));\n}\n\nasync function logout() {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/logout`, {\n    method: \"GET\",\n    mode: \"no-cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }).then(res => res).catch(err => console.error(\"Error:\", err));\n}\n\nfunction confirmEmail(token) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`/register/activate_email/${token}`, requestOptions).then(handleResponse).catch(err => console.error(\"Error:\", err));\n}\n\nfunction confirmSMS(token) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`/register/activate_sms/${token}`, requestOptions).then(handleResponse).catch(err => console.error(\"Error:\", err));\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","handleResponse","Router","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","confirmEmail","confirmSMS","currentUser","currentUserValue","email","password","method","headers","body","JSON","stringify","then","user","token","set","console","log","catch","err","error","name","password_confirmation","client","push","admin","phone","data","remove","mode","res","requestOptions"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { handleResponse } from \"../_helpers\";\r\nimport Router from \"next/router\";\r\n\r\nlet currentUserSubject = Cookies.getJSON(\"currentUser\")\r\n  ? Cookies.getJSON(\"currentUser\")\r\n  : {};\r\n\r\nconst target = `https://intim-vibe-api.padilo.pro/api`;\r\n\r\nexport const authenticationService = {\r\n  login,\r\n  logout,\r\n  registrationAdmin,\r\n  registrationClient,\r\n  registrationProvider,\r\n  confirmEmail,\r\n  confirmSMS,\r\n  currentUser: currentUserSubject,\r\n  get currentUserValue() {\r\n    return currentUserSubject;\r\n  },\r\n};\r\n\r\nasync function login(email: string, password: string): Promise<any> {\r\n  return await fetch(`${target}/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      if (user.token) {\r\n        Cookies.set(\"currentUser\", JSON.stringify(user));\r\n        currentUserSubject = user;\r\n        console.log(user);\r\n\r\n        return user;\r\n      }\r\n    })\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nasync function registrationClient(\r\n  name: string,\r\n  password: number | string,\r\n  email: string,\r\n  password_confirmation: number | string\r\n): Promise<any> {\r\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((client) => {\r\n      console.log(\"client:\", client);\r\n\r\n      Cookies.set(\"currentUser\", JSON.stringify(client));\r\n      currentUserSubject = client;\r\n      return client;\r\n    })\r\n    .then(() => Router.push(\"/userCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nasync function registrationAdmin(\r\n  name: string,\r\n  password: number | string,\r\n  email: string,\r\n  password_confirmation: number | string\r\n): Promise<any> {\r\n  return await fetch(`${target}/admin/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((admin) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(admin));\r\n      currentUserSubject = admin;\r\n      return admin;\r\n    })\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nasync function registrationProvider(\r\n  name: string,\r\n  password: number | string,\r\n  email: string,\r\n  password_confirmation: number | string,\r\n  phone: string | number\r\n): Promise<any> {\r\n  return await fetch(`${target}/individual/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n      phone,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      if (data.user) {\r\n        Cookies.set(\"currentUser\", JSON.stringify(data.user));\r\n        currentUserSubject = data.user;\r\n        return data.user;\r\n      }\r\n    })\r\n    .then(() => Router.push(\"/modelCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nasync function logout(): Promise<any> {\r\n  Cookies.remove(\"currentUser\");\r\n  return await fetch(`${target}/logout`, {\r\n    method: \"GET\",\r\n    mode: \"no-cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  })\r\n    .then((res) => res)\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nfunction confirmEmail(token: string): any {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return fetch(`/register/activate_email/${token}`, requestOptions)\r\n    .then(handleResponse)\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nfunction confirmSMS(token: string): any {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return fetch(`/register/activate_sms/${token}`, requestOptions)\r\n    .then(handleResponse)\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/dev-2/WebstormProjects/vibe/src/components/login-page/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nexport default function SignUp(_ref) {\n  _s();\n\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useState = useState(true),\n      formUser = _useState[0],\n      setFormUser = _useState[1];\n\n  var _useState2 = useState(false),\n      isAgency = _useState2[0],\n      setIsAgency = _useState2[1];\n\n  return __jsx(\"div\", {\n    className: s.login_page_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Registration\"), __jsx(Formik, {\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      phone: '',\n      agency: ''\n    },\n    validationSchema: Yup.object().shape(formUser ? {\n      username: Yup.string().required('Username is required'),\n      password: Yup.string().required('Password is required'),\n      email: Yup.string().required('Email is required'),\n      password_confirmation: Yup.string().required('Password is required')\n    } : !isAgency ? {\n      username: Yup.string().required('Username is required'),\n      password: Yup.string().required('Password is required'),\n      email: Yup.string().required('Email is required'),\n      password_confirmation: Yup.string().required('Password is required'),\n      phone: Yup.string().required('Phone is required and must contain 12 characters')\n    } : {\n      username: Yup.string().required('Username is required'),\n      password: Yup.string().required('Password is required'),\n      email: Yup.string().required('Email is required'),\n      password_confirmation: Yup.string().required('Password is required'),\n      phone: Yup.string().required('Phone is required and must contain 12 characters'),\n      agency: Yup.string().required('Agency is required')\n    }),\n    onSubmit: function onSubmit(_ref2, _ref3) {\n      var username = _ref2.username,\n          email = _ref2.email,\n          password = _ref2.password,\n          password_confirmation = _ref2.password_confirmation,\n          phone = _ref2.phone,\n          agency = _ref2.agency;\n      var setStatus = _ref3.setStatus,\n          setSubmitting = _ref3.setSubmitting;\n      setStatus();\n      phone.toString().length ? !isAgency ? authenticationService.registrationProvider(username, password, email, password_confirmation, phone) : authenticationService.registrationAgency(username, password, email, password_confirmation, phone, agency) : authenticationService.registrationClient(username, password, email, password_confirmation).then(function (user) {}, function (error) {\n        console.log('error:', error);\n        setSubmitting(false);\n        setStatus(error);\n      });\n    },\n    render: function render(_ref4) {\n      var errors = _ref4.errors,\n          status = _ref4.status,\n          touched = _ref4.touched,\n          isSubmitting = _ref4.isSubmitting;\n      return __jsx(Form, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"\".concat(s.role_toggler),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, formUser ? __jsx(\"span\", {\n        className: \"\".concat(s.user),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }\n      }, \"as User\") : __jsx(\"span\", {\n        className: \"\".concat(s.model),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 74\n        }\n      }, \"as Model\"), __jsx(\"label\", {\n        className: s[\"switch\"],\n        htmlFor: \"checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        onChange: function onChange() {\n          return setFormUser(!formUser);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"\".concat(s.slider, \" \").concat(s.round),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }))), __jsx(\"div\", {\n        className: \"form-group d-flex justify-content-end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, !formUser ? __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, __jsx(\"span\", {\n        className: \"h4 mr-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 26\n        }\n      }, \"as Agency\"), __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: function onChange() {\n          return setIsAgency(!isAgency);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      })) : null), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"username\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, \"Username\"), __jsx(Field, {\n        name: \"username\",\n        type: \"text\",\n        className: 'form-control' + (errors.username && touched.username ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"username\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, \"Email\"), __jsx(Field, {\n        name: \"email\",\n        type: \"email\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, \"Password\"), __jsx(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"password_confirmation\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Confirm password\"), __jsx(Field, {\n        name: \"password_confirmation\",\n        type: \"password\",\n        className: 'form-control' + (errors.password_confirmation && touched.password_confirmation ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"password_confirmation\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      })), !formUser && __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 27\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"phone\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, \"Phone\"), __jsx(Field, {\n        name: \"phone\",\n        type: \"number\",\n        className: 'form-control' + (errors.phone && touched.phone ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"phone\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      })), isAgency && __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 26\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"agency\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, \"Agency Name\"), __jsx(Field, {\n        name: \"agency\",\n        type: \"text\",\n        className: 'form-control' + (errors.agency && touched.agency ? ' is-invalid' : ''),\n        id: \"agency\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"agency\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn \".concat(s.submit_btn),\n        disabled: isSubmitting,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, \"Submit\"), isSubmitting && __jsx(\"div\", {\n        className: \"spinner-border spinner-border-sm text-primary ml-3\",\n        role: \"status\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"sr-only\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, \"Loading...\"))), status && __jsx(\"div\", {\n        className: 'alert alert-danger',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, status));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(SignUp, \"WJV9CR5eFZP9ITax6+9lm92xcXI=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/components/login-page/SignUp.jsx"],"names":["React","useState","s","Formik","Field","Form","ErrorMessage","Yup","useRouter","authenticationService","SignUp","router","formUser","setFormUser","isAgency","setIsAgency","login_page_form","username","email","password","password_confirmation","phone","agency","object","shape","string","required","setStatus","setSubmitting","toString","length","registrationProvider","registrationAgency","registrationClient","then","user","error","console","log","errors","status","touched","isSubmitting","role_toggler","model","slider","round","submit_btn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\n\nexport default function SignUp({ }) {\n  const router = useRouter();\n  const [formUser, setFormUser] = useState(true);\n  const [isAgency, setIsAgency] = useState(false);\n\n  return (\n    <div className={s.login_page_form}>\n      <h2>Registration</h2>\n      <Formik\n        initialValues={{\n          username: '',\n          email: '',\n          password: '',\n          password_confirmation: '',\n          phone: '',\n          agency: ''\n        }}\n        validationSchema={Yup.object().shape(\n          formUser\n            ? {\n              username: Yup.string().required('Username is required'),\n              password: Yup.string().required('Password is required'),\n              email: Yup.string().required('Email is required'),\n              password_confirmation: Yup.string().required('Password is required')\n            }\n            : (!isAgency)\n              ? {\n                username: Yup.string().required('Username is required'),\n                password: Yup.string().required('Password is required'),\n                email: Yup.string().required('Email is required'),\n                password_confirmation: Yup.string().required('Password is required'),\n                phone: Yup.string().required('Phone is required and must contain 12 characters')\n              }\n              : {\n                username: Yup.string().required('Username is required'),\n                password: Yup.string().required('Password is required'),\n                email: Yup.string().required('Email is required'),\n                password_confirmation: Yup.string().required('Password is required'),\n                phone: Yup.string().required('Phone is required and must contain 12 characters'),\n                agency: Yup.string().required('Agency is required')\n              })}\n        onSubmit={({ username, email, password, password_confirmation, phone, agency }, { setStatus, setSubmitting }) => {\n          setStatus();\n          (phone.toString().length)\n            ? (!isAgency)\n              ? authenticationService.registrationProvider(\n                username, password, email,\n                password_confirmation, phone\n              )\n              : authenticationService.registrationAgency(\n                username, password, email,\n                password_confirmation, phone, agency\n              )\n            : authenticationService.registrationClient(\n              username, password, email, password_confirmation\n            )\n              .then(\n                user => {\n\n                },\n                error => {\n                  console.log('error:', error);\n                  setSubmitting(false);\n                  setStatus(error);\n                }\n              );\n        }}\n        render={({ errors, status, touched, isSubmitting }) => (\n          <Form>\n            <div className={`${s.role_toggler}`}>\n              {formUser ? <span className={`${s.user}`}>as User</span> : <span className={`${s.model}`}>as Model</span>}\n              <label className={s.switch} htmlFor=\"checkbox\">\n                <input type=\"checkbox\" id=\"checkbox\" onChange={() => setFormUser(!formUser)} />\n                <div className={`${s.slider} ${s.round}`} />\n              </label>\n            </div>\n            <div className=\"form-group d-flex justify-content-end\">\n              {!formUser\n                ? <label><span className=\"h4 mr-2\">as Agency</span>\n                  <input type=\"checkbox\" onChange={() => setIsAgency(!isAgency)} />\n                </label>\n                : null}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Field name=\"username\" type=\"text\" className={'form-control' + (errors.username && touched.username ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"username\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <Field name=\"email\" type=\"email\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password_confirmation\">Confirm password</label>\n              <Field name=\"password_confirmation\" type=\"password\" className={'form-control' + (errors.password_confirmation && touched.password_confirmation ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"password_confirmation\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            {!formUser && <div className=\"form-group\">\n              <label htmlFor=\"phone\">Phone</label>\n              <Field name=\"phone\" type=\"number\" className={'form-control' + (errors.phone && touched.phone ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"phone\" component=\"div\" className=\"invalid-feedback\" />\n            </div>}\n            {isAgency && <div className=\"form-group\">\n              <label htmlFor=\"agency\">Agency Name</label>\n              <Field name=\"agency\" type=\"text\" className={'form-control' + (errors.agency && touched.agency ? ' is-invalid' : '')} id=\"agency\" />\n              <ErrorMessage name=\"agency\" component=\"div\" className=\"invalid-feedback\" />\n            </div>}\n            <div className=\"form-group\">\n              <button type=\"submit\" className={`btn ${s.submit_btn}`} disabled={isSubmitting}>Submit</button>\n              {isSubmitting &&\n                <div className=\"spinner-border spinner-border-sm text-primary ml-3\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              }\n            </div>\n            {status &&\n              <div className={'alert alert-danger'}>{status}</div>\n            }\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\login-page\\\\SignUp.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nexport default function SignUp() {\n  const router = useRouter();\n  const {\n    0: formUser,\n    1: setFormUser\n  } = useState(true);\n  const {\n    0: isAgency,\n    1: setIsAgency\n  } = useState(false);\n  return __jsx(\"div\", {\n    className: s.login_page_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Registration\"), __jsx(Formik, {\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      phone: ''\n    },\n    validationSchema: Yup.object().shape(formUser ? {\n      username: Yup.string().required('Username is required'),\n      password: Yup.string().required('Password is required'),\n      email: Yup.string().required('Email is required'),\n      password_confirmation: Yup.string().required('Password is required')\n    } : {\n      username: Yup.string().required('Username is required'),\n      password: Yup.string().required('Password is required'),\n      email: Yup.string().required('Email is required'),\n      password_confirmation: Yup.string().required('Password is required'),\n      phone: Yup.string().required('Phone is required and must contain 12 characters')\n    }),\n    onSubmit: ({\n      username,\n      email,\n      password,\n      password_confirmation,\n      phone\n    }, {\n      setStatus,\n      setSubmitting\n    }) => {\n      setStatus();\n      phone.toString().length ? authenticationService.registrationProvider(username, password, email, password_confirmation, phone) : authenticationService.registrationClient(username, password, email, password_confirmation).then(user => {\n        console.log('user:', user);\n        const {\n          from\n        } = // this.props.location.state ||\n        {\n          from: {\n            pathname: \"/\"\n          }\n        };\n        router.push(from);\n      }, error => {\n        console.log('error:', error);\n        setSubmitting(false);\n        setStatus(error);\n      });\n    },\n    render: ({\n      errors,\n      status,\n      touched,\n      isSubmitting\n    }) => __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: `${s.role_toggler}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, formUser ? __jsx(\"span\", {\n      className: `${s.user}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }\n    }, \"as User\") : __jsx(\"span\", {\n      className: `${s.model}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 74\n      }\n    }, \"as Model\"), __jsx(\"label\", {\n      className: s.switch,\n      htmlFor: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      onChange: () => setFormUser(!formUser),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: `${s.slider} ${s.round}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }))), __jsx(\"div\", {\n      className: \"form-group d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, !formUser ? __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }\n    }, \"as Agency\"), __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: () => setIsAgency(!isAgency),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })) : null), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Username\"), __jsx(Field, {\n      name: \"username\",\n      type: \"text\",\n      className: 'form-control' + (errors.username && touched.username ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"username\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Email\"), __jsx(Field, {\n      name: \"email\",\n      type: \"email\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Password\"), __jsx(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password_confirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Confirm password\"), __jsx(Field, {\n      name: \"password_confirmation\",\n      type: \"password\",\n      className: 'form-control' + (errors.password_confirmation && touched.password_confirmation ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"password_confirmation\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })), !formUser && __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Phone\"), __jsx(Field, {\n      name: \"phone\",\n      type: \"number\",\n      className: 'form-control' + (errors.phone && touched.phone ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"phone\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: `btn ${s.submit_btn}`,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"Submit\"), isSubmitting && __jsx(\"div\", {\n      className: \"spinner-border spinner-border-sm text-primary ml-3\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"Loading...\"))), status && __jsx(\"div\", {\n      className: 'alert alert-danger',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, JSON.stringify(status), console.log(status))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/login-page/SignUp.jsx"],"names":["React","useState","s","Formik","Field","Form","ErrorMessage","Yup","useRouter","authenticationService","SignUp","router","formUser","setFormUser","isAgency","setIsAgency","login_page_form","username","email","password","password_confirmation","phone","object","shape","string","required","setStatus","setSubmitting","toString","length","registrationProvider","registrationClient","then","user","console","log","from","pathname","push","error","errors","status","touched","isSubmitting","role_toggler","model","switch","slider","round","submit_btn","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport s from './login.module.scss';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useRouter } from 'next/router';\r\nimport { authenticationService } from '../../_services';\r\n\r\nexport default function SignUp() {\r\n  const router = useRouter();\r\n  const [formUser, setFormUser] = useState(true);\r\n  const [isAgency, setIsAgency] = useState(false);\r\n\r\n  return (\r\n    <div className={s.login_page_form}>\r\n      <h2>Registration</h2>\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n          password_confirmation: '',\r\n          phone: ''\r\n        }}\r\n        validationSchema={Yup.object().shape(\r\n          formUser\r\n            ? {\r\n              username: Yup.string().required('Username is required'),\r\n              password: Yup.string().required('Password is required'),\r\n              email: Yup.string().required('Email is required'),\r\n              password_confirmation: Yup.string().required('Password is required')\r\n            }\r\n            : {\r\n              username: Yup.string().required('Username is required'),\r\n              password: Yup.string().required('Password is required'),\r\n              email: Yup.string().required('Email is required'),\r\n              password_confirmation: Yup.string().required('Password is required'),\r\n              phone: Yup.string().required('Phone is required and must contain 12 characters')\r\n            })}\r\n        onSubmit={({ username, email, password, password_confirmation, phone }, { setStatus, setSubmitting }) => {\r\n          setStatus();\r\n          phone.toString().length\r\n            ? authenticationService.registrationProvider(username, password, email, password_confirmation, phone)\r\n            : authenticationService.registrationClient(username, password, email, password_confirmation)\r\n              .then(\r\n                user => {\r\n                  console.log('user:', user);\r\n                  const { from } =\r\n                    // this.props.location.state ||\r\n                    { from: { pathname: \"/\" } };\r\n                  router.push(from);\r\n                },\r\n                error => {\r\n                  console.log('error:', error);\r\n                  setSubmitting(false);\r\n                  setStatus(error);\r\n                }\r\n              );\r\n        }}\r\n        render={({ errors, status, touched, isSubmitting }) => (\r\n          <Form>\r\n            <div className={`${s.role_toggler}`}>\r\n              {formUser ? <span className={`${s.user}`}>as User</span> : <span className={`${s.model}`}>as Model</span>}\r\n              <label className={s.switch} htmlFor=\"checkbox\">\r\n                <input type=\"checkbox\" id=\"checkbox\" onChange={() => setFormUser(!formUser)} />\r\n                <div className={`${s.slider} ${s.round}`} />\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group d-flex justify-content-end\">\r\n              {!formUser\r\n                ? <label><span className=\"h5\">as Agency</span>\r\n                    <input type=\"checkbox\" onChange={() => setIsAgency(!isAgency)} />\r\n                </label>\r\n                : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Field name=\"username\" type=\"text\" className={'form-control' + (errors.username && touched.username ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"username\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field name=\"email\" type=\"email\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_confirmation\">Confirm password</label>\r\n              <Field name=\"password_confirmation\" type=\"password\" className={'form-control' + (errors.password_confirmation && touched.password_confirmation ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"password_confirmation\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            {!formUser && <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <Field name=\"phone\" type=\"number\" className={'form-control' + (errors.phone && touched.phone ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"phone\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>}\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className={`btn ${s.submit_btn}`} disabled={isSubmitting}>Submit</button>\r\n              {isSubmitting &&\r\n                <div className=\"spinner-border spinner-border-sm text-primary ml-3\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              }\r\n            </div>\r\n            {status &&\r\n              <div className={'alert alert-danger'}>{JSON.stringify(status)}{console.log(status)}</div>\r\n            }\r\n          </Form>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
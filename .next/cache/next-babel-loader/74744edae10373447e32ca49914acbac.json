{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\model-profile\\\\ReportWindow.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from \"./profile.module.scss\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap';\n\nconst ReportModalWindow = props => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: backdrop,\n    1: setBackdrop\n  } = useState(true);\n  const {\n    0: keyboard,\n    1: setKeyboard\n  } = useState(true);\n\n  const toggle = () => setModal(!modal);\n\n  const changeBackdrop = e => {\n    let value = e.target.value;\n\n    if (value !== 'static') {\n      value = JSON.parse(value);\n    }\n\n    setBackdrop(value);\n  };\n\n  const changeKeyboard = e => {\n    setKeyboard(e.currentTarget.checked);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2854574937\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    inline: true,\n    onSubmit: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    color: \"\",\n    className: `font-weight-bold text-white ${s.report_btn}`,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, buttonLabel)), __jsx(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    backdrop: backdrop,\n    keyboard: keyboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, buttonLabel), __jsx(ModalBody, {\n    className: \"pb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"jsx-2854574937\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Want to report fake photos on this ad? If so, use the box below to enter a link to the webpage that provides potential evidence of misuse, and VibeCity will investigate your claim. If you are owner of the photos in question, follow the DMCA link at the bottom of the page.\"), __jsx(\"p\", {\n    className: \"jsx-2854574937\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"small\", {\n    className: \"jsx-2854574937\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }\n  }, __jsx(\"strong\", {\n    className: \"jsx-2854574937\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"IMPORTANT\"), \": VibeCity takes the misuse of photographs seriously and will investigate any reasonable evidence of misuse provided to us. However, because it is not uncommon for well known models and adult stars to advertise on VibeCity, or for adult entertainers to advertise on numerous adult websites, often times under alternate names, the information you provide may or may not always result in the removal of the advertisement, or in any action at all. Please also be aware that the VibeCity Guide cannot and does not make any guarantees or warranties that either (a) the advertiser in the pictures on any particular ad will be the same individual who shows up for any date arranged between an advertiser and yourself, (b) that any of the text, including the name of the advertiser, or stats that appears on an advertisement is accurate or truthful.\"))), __jsx(Form, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    className: \"w-100 d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Link for Evidence of Misuse:\", __jsx(Input, {\n    type: \"text\",\n    onChange: () => {},\n    className: \"w-100 d-block\",\n    placeholder: \"http://...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })))), __jsx(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    color: \"info\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"SEND REPORT\"), ' ', __jsx(Button, {\n    color: \"light\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), __jsx(_JSXStyle, {\n    id: \"2854574937\",\n    __self: this\n  }, \".modal-content.jsx-2854574937{bacground-color:#999 !important;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\user\\\\\\\\projects\\\\\\\\vibe\\\\\\\\src\\\\\\\\components\\\\\\\\model-profile\\\\\\\\ReportWindow.jsx */\"));\n};\n\nexport default ReportModalWindow;\nModal.propTypes = {\n  // boolean to control the state of the popover\n  isOpen: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  // if modal should be centered vertically in viewport\n  centered: PropTypes.bool,\n  // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\n  size: PropTypes.string,\n  // callback for toggling isOpen in the controlling component\n  toggle: PropTypes.func,\n  role: PropTypes.string,\n  // defaults to \"dialog\"\n  // used to reference the ID of the title element in the modal\n  labelledBy: PropTypes.string,\n  keyboard: PropTypes.bool,\n  // control backdrop, see http://v4-alpha.getbootstrap.com/components/modal/#options\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n  // if body of modal should be scrollable when content is long\n  scrollable: PropTypes.bool,\n  // allows for a node/component to exist next to the modal (outside of it). Useful for external close buttons\n  // external: PropTypes.node,\n  // called on componentDidMount\n  onEnter: PropTypes.func,\n  // called on componentWillUnmount\n  onExit: PropTypes.func,\n  // called when done transitioning in\n  onOpened: PropTypes.func,\n  // called when done transitioning out\n  onClosed: PropTypes.func,\n  className: PropTypes.string,\n  wrapClassName: PropTypes.string,\n  modalClassName: PropTypes.string,\n  backdropClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  // boolean to control whether the fade transition occurs (default: true)\n  fade: PropTypes.bool,\n  cssModule: PropTypes.object,\n  // zIndex defaults to 1000.\n  zIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  // if modal should be destructed/removed from DOM after closing\n  unmountOnClose: PropTypes.bool,\n  // defaults to true\n  // if the element which triggered the modal to open should focused after the modal closes (see example somewhere below)\n  returnFocusAfterClose: PropTypes.bool // defaults to true\n\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/model-profile/ReportWindow.jsx"],"names":["React","useState","PropTypes","s","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Form","FormGroup","ReportModalWindow","props","buttonLabel","className","modal","setModal","backdrop","setBackdrop","keyboard","setKeyboard","toggle","changeBackdrop","e","value","target","JSON","parse","changeKeyboard","currentTarget","checked","preventDefault","report_btn","propTypes","isOpen","bool","autoFocus","centered","size","string","func","role","labelledBy","oneOfType","oneOf","scrollable","onEnter","onExit","onOpened","onClosed","wrapClassName","modalClassName","backdropClassName","contentClassName","fade","cssModule","object","zIndex","number","unmountOnClose","returnFocusAfterClose"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./profile.module.scss\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap';\r\n\r\nconst ReportModalWindow = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n  const [modal, setModal] = useState(false);\r\n  const [backdrop, setBackdrop] = useState(true);\r\n  const [keyboard, setKeyboard] = useState(true);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const changeBackdrop = e => {\r\n    let value = e.target.value;\r\n    if (value !== 'static') {\r\n      value = JSON.parse(value);\r\n    }\r\n    setBackdrop(value);\r\n  }\r\n\r\n  const changeKeyboard = e => {\r\n    setKeyboard(e.currentTarget.checked);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form inline onSubmit={(e) => e.preventDefault()}>\r\n        {/* <FormGroup>\r\n          <Label for=\"backdrop\">Backdrop value</Label>{' '}\r\n          <Input type=\"select\" name=\"backdrop\" id=\"backdrop\" onChange={changeBackdrop}>\r\n            <option value=\"true\">true</option>\r\n            <option value=\"false\">false</option>\r\n            <option value=\"static\">\"static\"</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup className=\"mx-2\" check>\r\n          <Label check>\r\n            <Input type=\"checkbox\" checked={keyboard} onChange={changeKeyboard} /> Keyboard\r\n          </Label>\r\n        </FormGroup> */}\r\n        <Button color=\"\" className={`font-weight-bold text-white ${s.report_btn}`} onClick={toggle}>{buttonLabel}</Button>\r\n      </Form>\r\n\r\n      <Modal isOpen={modal} toggle={toggle} className={className} backdrop={backdrop} keyboard={keyboard}>\r\n        <ModalHeader toggle={toggle} >{buttonLabel}</ModalHeader>\r\n        <ModalBody className=\"pb-0\">\r\n          <p>Want to report fake photos on this ad? If so, use the box below to enter a link to the webpage that provides potential evidence of misuse, and VibeCity will investigate your claim. If you are owner of the photos in question, follow the DMCA link at the bottom of the page.</p>\r\n          <p><small><strong>IMPORTANT</strong>: VibeCity takes the misuse of photographs seriously and will investigate any reasonable evidence of misuse provided to us. However, because it is not uncommon for well known models and adult stars to advertise on VibeCity, or for adult entertainers to advertise on numerous adult websites, often times under alternate names, the information you provide may or may not always result in the removal of the advertisement, or in any action at all. Please also be aware that the VibeCity Guide cannot and does not make any guarantees or warranties that either (a) the advertiser in the pictures on any particular ad will be the same individual who shows up for any date arranged between an advertiser and yourself, (b) that any of the text, including the name of the advertiser, or stats that appears on an advertisement is accurate or truthful.</small></p>\r\n        </ModalBody>\r\n        <Form className=\"container\">\r\n          <FormGroup>\r\n            <Label className=\"w-100 d-block\">\r\n              Link for Evidence of Misuse:\r\n              <Input type=\"text\" onChange={() => { }} className=\"w-100 d-block\" placeholder=\"http://...\" />\r\n            </Label>\r\n          </FormGroup>\r\n        </Form>\r\n        <ModalFooter>\r\n          <Button color=\"info\" onClick={toggle}>SEND REPORT</Button>{' '}\r\n          <Button color=\"light\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <style jsx>{`\r\n      .modal-content {\r\n        bacground-color: #999 !important;\r\n      }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportModalWindow;\r\n\r\n\r\nModal.propTypes = {\r\n  // boolean to control the state of the popover\r\n  isOpen: PropTypes.bool,\r\n  autoFocus: PropTypes.bool,\r\n  // if modal should be centered vertically in viewport\r\n  centered: PropTypes.bool,\r\n  // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\r\n  size: PropTypes.string,\r\n  // callback for toggling isOpen in the controlling component\r\n  toggle: PropTypes.func,\r\n  role: PropTypes.string, // defaults to \"dialog\"\r\n  // used to reference the ID of the title element in the modal\r\n  labelledBy: PropTypes.string,\r\n  keyboard: PropTypes.bool,\r\n  // control backdrop, see http://v4-alpha.getbootstrap.com/components/modal/#options\r\n  backdrop: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.oneOf(['static'])\r\n  ]),\r\n  // if body of modal should be scrollable when content is long\r\n  scrollable: PropTypes.bool,\r\n  // allows for a node/component to exist next to the modal (outside of it). Useful for external close buttons\r\n  // external: PropTypes.node,\r\n  // called on componentDidMount\r\n  onEnter: PropTypes.func,\r\n  // called on componentWillUnmount\r\n  onExit: PropTypes.func,\r\n  // called when done transitioning in\r\n  onOpened: PropTypes.func,\r\n  // called when done transitioning out\r\n  onClosed: PropTypes.func,\r\n  className: PropTypes.string,\r\n  wrapClassName: PropTypes.string,\r\n  modalClassName: PropTypes.string,\r\n  backdropClassName: PropTypes.string,\r\n  contentClassName: PropTypes.string,\r\n  // boolean to control whether the fade transition occurs (default: true)\r\n  fade: PropTypes.bool,\r\n  cssModule: PropTypes.object,\r\n  // zIndex defaults to 1000.\r\n  zIndex: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n  // if modal should be destructed/removed from DOM after closing\r\n  unmountOnClose: PropTypes.bool, // defaults to true\r\n  // if the element which triggered the modal to open should focused after the modal closes (see example somewhere below)\r\n  returnFocusAfterClose: PropTypes.bool // defaults to true\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
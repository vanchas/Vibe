{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SELECT_STATE, SELECT_CITY, SELECT_LIST_SORT, SELECT_LIST_FILTER, SELECT_CATEGORY, ALL_POSTS, GET_CATEGORIES } from \"../actions/types\";\nvar initialState = {\n  posts: [],\n  categories: []\n};\nexport var userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ALL_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case GET_CATEGORIES:\n      console.log(action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: action.payload\n      });\n\n    case SELECT_STATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case SELECT_CITY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case SELECT_LIST_SORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case SELECT_LIST_FILTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case SELECT_CATEGORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/reducers/userReducer.ts"],"names":["SELECT_STATE","SELECT_CITY","SELECT_LIST_SORT","SELECT_LIST_FILTER","SELECT_CATEGORY","ALL_POSTS","GET_CATEGORIES","initialState","posts","categories","userReducer","state","action","type","payload","console","log"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,gBAApC,EAAsDC,kBAAtD,EAA0EC,eAA1E,EAA2FC,SAA3F,EAAsGC,cAAtG,QAA4H,kBAA5H;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BJ,YAA8B;AAAA,MAAhBK,MAAgB;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,6CAAYM,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AAEF,SAAKR,cAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AAEA,6CAAYH,KAAZ;AAAmBF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAAtC;;AAEF,SAAKd,YAAL;AACE,6CAAYW,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AAEF,SAAKb,WAAL;AACE,6CAAYU,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AAEF,SAAKZ,gBAAL;AACE,6CAAYS,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AAEF,SAAKX,kBAAL;AACE,6CAAYQ,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AAEF,SAAKV,eAAL;AACE,6CAAYO,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AAEF;AACE,aAAOH,KAAP;AAzBJ;AA2BD,CA5BM","sourcesContent":["import { SELECT_STATE, SELECT_CITY, SELECT_LIST_SORT, SELECT_LIST_FILTER, SELECT_CATEGORY, ALL_POSTS, GET_CATEGORIES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  categories: []\r\n};\r\n\r\nexport const userReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ALL_POSTS:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case GET_CATEGORIES:\r\n      console.log(action.payload);\r\n      \r\n      return { ...state, categories: action.payload }\r\n\r\n    case SELECT_STATE:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case SELECT_CITY:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case SELECT_LIST_SORT:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case SELECT_LIST_FILTER:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case SELECT_CATEGORY:\r\n      return { ...state, posts: action.payload }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
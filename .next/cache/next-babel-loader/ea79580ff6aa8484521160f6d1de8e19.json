{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\_helpers\\\\PrivateRoute.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../_services';\nexport const PrivateRoute = (_ref) => {\n  let {\n    component: Component,\n    roles\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"roles\"]);\n\n  return __jsx(Route, _extends({}, rest, {\n    render: props => {\n      const currentUser = authenticationService.currentUserValue;\n\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return __jsx(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 14\n          }\n        });\n      } // check if route is restricted by role\n\n\n      if (roles && roles.indexOf(currentUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return __jsx(Redirect, {\n          to: {\n            pathname: '/'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 14\n          }\n        });\n      } // authorised so return component\n\n\n      return __jsx(Component, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 12\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_helpers/PrivateRoute.js"],"names":["React","Route","Redirect","authenticationService","PrivateRoute","component","Component","roles","rest","props","currentUser","currentUserValue","pathname","state","from","location","indexOf","role"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,qBAAT,QAAsC,cAAtC;AAEA,OAAO,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA;AAAxB,GAAD;AAAA,MAAmCC,IAAnC;;AAAA,SAC1B,MAAC,KAAD,eAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEC,KAAK,IAAI;AAChC,YAAMC,WAAW,GAAGP,qBAAqB,CAACQ,gBAA1C;;AACA,UAAI,CAACD,WAAL,EAAkB;AAChB;AACA,eAAO,MAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEE,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAA7B,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAL+B,CAOhC;;;AACA,UAAIR,KAAK,IAAIA,KAAK,CAACS,OAAN,CAAcN,WAAW,CAACO,IAA1B,MAAoC,CAAC,CAAlD,EAAqD;AACnD;AACA,eAAO,MAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEL,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAX+B,CAahC;;;AACA,aAAO,MAAC,SAAD,eAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0B;AAAA,CAArB","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../_services';\r\n\r\nexport const PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n  <Route {...rest} render={props => {\r\n    const currentUser = authenticationService.currentUserValue;\r\n    if (!currentUser) {\r\n      // not logged in so redirect to login page with the return url\r\n      return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    }\r\n\r\n    // check if route is restricted by role\r\n    if (roles && roles.indexOf(currentUser.role) === -1) {\r\n      // role not authorised so redirect to home page\r\n      return <Redirect to={{ pathname: '/' }} />\r\n    }\r\n\r\n    // authorised so return component\r\n    return <Component {...props} />\r\n  }} />\r\n)"]},"metadata":{},"sourceType":"module"}
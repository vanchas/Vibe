{"ast":null,"code":"import { takeEvery, put, call, fork } from 'redux-saga/effects';\nimport { REQUEST_POSTS, FETCH_POST } from '../actions/types';\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\nexport function* sagaWatcher() {\n  yield takeEvery(REQUEST_POSTS, sagaWorker);\n}\n\nfunction* sagaWorker() {\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchPosts);\n    yield put({\n      type: FETCH_POST,\n      payload\n    });\n    yield put(hideLoader());\n  } catch (e) {\n    yield put(showAlert('Something going wrong'));\n    yield put(hideLoader());\n  }\n}\n\nasync function fetchPosts() {\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=5');\n  // return await response.json();\n  const json = [{\n    \"userId\": 1,\n    \"id\": 1,\n    \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n  }, {\n    \"userId\": 1,\n    \"id\": 2,\n    \"title\": \"qui est esse\",\n    \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n  }, {\n    \"userId\": 1,\n    \"id\": 3,\n    \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n    \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n  }, {\n    \"userId\": 1,\n    \"id\": 4,\n    \"title\": \"eum et est occaecati\",\n    \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n  }, {\n    \"userId\": 1,\n    \"id\": 5,\n    \"title\": \"nesciunt quas odio\",\n    \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n  }];\n  return json;\n}\n\nexport function* rootSaga() {\n  yield [fork(sagaWorker) // saga1 can also yield [ fork(actionOne), fork(actionTwo) ]\n  ];\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/sagas/sagas.ts"],"names":["takeEvery","put","call","fork","REQUEST_POSTS","FETCH_POST","showLoader","hideLoader","showAlert","sagaWatcher","sagaWorker","payload","fetchPosts","type","e","json","rootSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,oBAAlD;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMT,SAAS,CAACI,aAAD,EAAgBM,UAAhB,CAAf;AACD;;AAED,UAAUA,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMT,GAAG,CAACK,UAAU,EAAX,CAAT;AACA,UAAMK,OAAO,GAAG,MAAMT,IAAI,CAACU,UAAD,CAA1B;AACA,UAAMX,GAAG,CAAC;AAAEY,MAAAA,IAAI,EAAER,UAAR;AAAoBM,MAAAA;AAApB,KAAD,CAAT;AACA,UAAMV,GAAG,CAACM,UAAU,EAAX,CAAT;AACD,GALD,CAKE,OAAOO,CAAP,EAAU;AACV,UAAMb,GAAG,CAACO,SAAS,CAAC,uBAAD,CAAV,CAAT;AACA,UAAMP,GAAG,CAACM,UAAU,EAAX,CAAT;AACD;AACF;;AAED,eAAeK,UAAf,GAA4B;AAC1B;AACA;AACA,QAAMG,IAAI,GAAG,CAAC;AACZ,cAAU,CADE;AAEZ,UAAM,CAFM;AAGZ,aAAS,4EAHG;AAIZ,YAAQ;AAJI,GAAD,EAMb;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,cAHX;AAIE,YAAQ;AAJV,GANa,EAYb;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,6DAHX;AAIE,YAAQ;AAJV,GAZa,EAkBb;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,sBAHX;AAIE,YAAQ;AAJV,GAlBa,EAwBb;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,oBAHX;AAIE,YAAQ;AAJV,GAxBa,CAAb;AA8BA,SAAOA,IAAP;AACD;;AAED,OAAO,UAAUC,QAAV,GAAsB;AAC3B,QAAM,CACFb,IAAI,CAACO,UAAD,CADF,CACgB;AADhB,GAAN;AAGD","sourcesContent":["import { takeEvery, put, call, fork } from 'redux-saga/effects';\r\nimport { REQUEST_POSTS, FETCH_POST } from '../actions/types';\r\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(REQUEST_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  try {\r\n    yield put(showLoader());\r\n    const payload = yield call(fetchPosts);\r\n    yield put({ type: FETCH_POST, payload });\r\n    yield put(hideLoader());\r\n  } catch (e) {\r\n    yield put(showAlert('Something going wrong'));\r\n    yield put(hideLoader());\r\n  }\r\n}\r\n\r\nasync function fetchPosts() {\r\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=5');\r\n  // return await response.json();\r\n  const json = [{\r\n    \"userId\": 1,\r\n    \"id\": 1,\r\n    \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n    \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 2,\r\n    \"title\": \"qui est esse\",\r\n    \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 3,\r\n    \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\r\n    \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 4,\r\n    \"title\": \"eum et est occaecati\",\r\n    \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 5,\r\n    \"title\": \"nesciunt quas odio\",\r\n    \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\r\n  }];\r\n  return json;\r\n}\r\n\r\nexport function* rootSaga () {\r\n  yield [\r\n      fork(sagaWorker), // saga1 can also yield [ fork(actionOne), fork(actionTwo) ]\r\n  ];\r\n}"]},"metadata":{},"sourceType":"module"}
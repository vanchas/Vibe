{"ast":null,"code":"import { TEST_CREATE_POST, SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, TEST_REQUEST_POSTS, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS, GET_FAVORITES, GET_COMPLAINS, SORT_POSTS, SHOW_SUCCESS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\"; // T E S T \n\nexport function createPost(post) {\n  return {\n    type: TEST_CREATE_POST,\n    payload: post\n  };\n}\n;\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER\n  };\n}\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER\n  };\n}\nexport function showAlert(text) {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: text\n    });\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 3000);\n  };\n}\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT\n  };\n}\nexport function fetchPosts() {\n  return {\n    type: TEST_REQUEST_POSTS\n  };\n}\n;\nexport const getAllPosts = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts`);\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: GET_ALL_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getNewPosts = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/all/new`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_NEW_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getLocationsInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_LOCAITONS_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getAppInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/info`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_APP_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getCities = stateId => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location/cities/${stateId}`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_CITIES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const createSupportTask = task => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify(task)\n  });\n  const promise = response.json();\n  promise.then(res => console.log(res)).catch(err => console.error('Error: ', err));\n  return dispatch({\n    type: CREATE_SUPPORT_TASK,\n    payload: task\n  });\n};\nexport const getAllUsersTasks = () => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/${user.user.id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_USER_TASKS,\n      payload: res\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const selectPostsPage = page => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts?page=${page}`);\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: GET_ALL_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getPostComments = postId => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_POST_COMMENTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n  ;\n};\nexport const createPostComment = (postId, comment) => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      comment\n    })\n  });\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: CREATE_POST_COMMENT,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n  ;\n};\nexport const filterPosts = filterItemsObject => async dispatch => {\n  // from, to, gender, ethnicity_id, hair_id, eye_id, category_id, affiliation_id, availability_ids(array), availableto_ids(array)\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/filter`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: JSON.stringify(filterItemsObject)\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: FILTER_POSTS,\n      payload: res.data.data\n    });\n  }).catch(err => console.error('Error: ', err));\n  ;\n};\nexport const reportPost = (postId, message) => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/${postId}/complaints/add`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      message,\n      status: 'In progress'\n    })\n  }); // const promise = response.json();\n  // return promise.then(res => {\n  //     dispatch({ type: REPORT_POST });\n  // });\n};\nexport const addToFavorites = postId => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/favorites/add`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      is_favorite: true\n    })\n  });\n};\nexport const addToFavoritesBusiness = postId => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/favorites_business/add`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n};\nexport const getFavoritesBusiness = () => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/favorites_business/my`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    return dispatch({\n      type: GET_FAVORITES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getFavoritesUser = () => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/favorites/my`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    return dispatch({\n      type: GET_FAVORITES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getComplains = userId => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/complaints/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    return dispatch({\n      type: GET_COMPLAINS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const sortPosts = sortType => async dispatch => {\n  return dispatch({\n    type: SORT_POSTS,\n    payload: sortType\n  });\n};\nexport const showSuccess = text => async dispatch => {\n  dispatch({\n    type: SHOW_SUCCESS,\n    payload: text\n  });\n  setTimeout(() => {\n    dispatch({\n      type: SHOW_SUCCESS,\n      payload: null\n    });\n  }, 3000);\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { incrementCounter, decrementCounter } from '../redux/actions/actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: {},\n      userFromApi: null\n    };\n  } // static async getInitialProps({ store }: { store: any }) {\n  // \treturn {};\n  // }\n\n\n  render() {\n    // console.log('index.props:', this.props);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"Main\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, this.props.counter), __jsx(\"button\", {\n      onClick: this.props.incrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"icrement\"), __jsx(\"button\", {\n      onClick: this.props.decrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, \"decrement\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  counter: state.counter.value\n});\n\nconst mapDispatchToProps = {\n  incrementCounter,\n  decrementCounter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/pages/index.tsx"],"names":["React","connect","incrementCounter","decrementCounter","App","Component","constructor","props","state","currentUser","userFromApi","render","counter","mapStateToProps","value","mapDispatchToProps"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,0BAAnD;;AAeA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkD;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACvB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,WAAW,EAAE;AAFD,KAAb;AAIA,GAPgD,CASjD;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACR;AAEA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWK,OAAhB,CAHD,EAIC;AAAQ,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWL,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,EAKC;AAAQ,MAAA,OAAO,EAAE,KAAKK,KAAL,CAAWJ,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALD,CADD;AASA;;AAzBgD;;AA4BlD,MAAMU,eAAe,GAAIL,KAAD,KAAiB;AACxCI,EAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,CAAcE;AADiB,CAAjB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AAC1Bb,EAAAA,gBAD0B;AAE1BC,EAAAA;AAF0B,CAA3B;AAKA,eAAeF,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,GAA7C,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { incrementCounter, decrementCounter } from '../redux/actions/actions';\r\n\r\ninterface IProps {\r\n\tscopes: any;\r\n\tcounter: number;\r\n\tincrementCounter(): void;\r\n\tdecrementCounter(): void;\r\n}\r\n\r\ninterface IState {\r\n\tscopes?: any;\r\n\tcurrentUser: any;\r\n\tuserFromApi: any;\r\n}\r\n\r\nclass App extends React.Component<IProps, IState> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentUser: {},\r\n\t\t\tuserFromApi: null\r\n\t\t};\r\n\t}\r\n\r\n\t// static async getInitialProps({ store }: { store: any }) {\r\n\t// \treturn {};\r\n\t// }\r\n\r\n\trender() {\r\n\t\t// console.log('index.props:', this.props);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Main</h1>\r\n\r\n\t\t\t\t<h2>{this.props.counter}</h2>\r\n\t\t\t\t<button onClick={this.props.incrementCounter}>icrement</button>\r\n\t\t\t\t<button onClick={this.props.decrementCounter}>decrement</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tcounter: state.counter.value\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tincrementCounter,\r\n\tdecrementCounter\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}
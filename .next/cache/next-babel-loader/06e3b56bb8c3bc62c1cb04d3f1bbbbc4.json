{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaWatcher),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(sagaWorker);\n\nimport fetch from 'isomorphic-unfetch';\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport { REQUEST_POSTS, FETCH_POST } from '../actions/types';\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\nexport function sagaWatcher() {\n  return _regeneratorRuntime.wrap(function sagaWatcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('sagaWatcher');\n          _context.next = 3;\n          return takeEvery(REQUEST_POSTS, sagaWorker);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction sagaWorker() {\n  var payload;\n  return _regeneratorRuntime.wrap(function sagaWorker$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('sagaWorker');\n          _context2.prev = 1;\n          _context2.next = 4;\n          return put(showLoader());\n\n        case 4:\n          _context2.next = 6;\n          return call(fetchPosts);\n\n        case 6:\n          payload = _context2.sent;\n          _context2.next = 9;\n          return put({\n            type: FETCH_POST,\n            payload: payload\n          });\n\n        case 9:\n          _context2.next = 11;\n          return put(hideLoader());\n\n        case 11:\n          _context2.next = 19;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 17;\n          return put(showAlert('Something going wrong'));\n\n        case 17:\n          _context2.next = 19;\n          return put(hideLoader());\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 13]]);\n}\n\nfunction fetchPosts() {\n  return _fetchPosts.apply(this, arguments);\n}\n\nfunction _fetchPosts() {\n  _fetchPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('fetchPosts');\n            _context3.next = 3;\n            return fetch('https://jsonplaceholder.typicode.com/posts');\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return response.json();\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchPosts.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/sagas/testSagas.ts"],"names":["sagaWatcher","sagaWorker","fetch","takeEvery","put","call","REQUEST_POSTS","FETCH_POST","showLoader","hideLoader","showAlert","console","log","fetchPosts","payload","type","response","json"],"mappings":";;;oDAMiBA,W;qDAMPC,U;;AAZV,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,oBAAlD;AAGA,OAAO,SAAUV,WAAV;AAAA;AAAA;AAAA;AAAA;AACLW,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AADK;AAGL,iBAAMT,SAAS,CAACG,aAAD,EAAgBL,UAAhB,CAAf;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMP,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACEU,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AADF;AAAA;AAII,iBAAMR,GAAG,CAACI,UAAU,EAAX,CAAT;;AAJJ;AAAA;AAKoB,iBAAMH,IAAI,CAACQ,UAAD,CAAV;;AALpB;AAKUC,UAAAA,OALV;AAAA;AAMI,iBAAMV,GAAG,CAAC;AAAEW,YAAAA,IAAI,EAAER,UAAR;AAAoBO,YAAAA,OAAO,EAAPA;AAApB,WAAD,CAAT;;AANJ;AAAA;AAOI,iBAAMV,GAAG,CAACK,UAAU,EAAX,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAML,GAAG,CAACM,SAAS,CAAC,uBAAD,CAAV,CAAT;;AATJ;AAAA;AAUI,iBAAMN,GAAG,CAACK,UAAU,EAAX,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;SAceI,U;;;;;yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEF,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AADF;AAAA,mBAGyBV,KAAK,CAAC,4CAAD,CAH9B;;AAAA;AAGQc,YAAAA,QAHR;AAAA;AAAA,mBAIeA,QAAQ,CAACC,IAAT,EAJf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { REQUEST_POSTS, FETCH_POST } from '../actions/types';\r\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\r\n\r\n\r\nexport function* sagaWatcher() {\r\n  console.log('sagaWatcher');\r\n\r\n  yield takeEvery(REQUEST_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  console.log('sagaWorker');\r\n  \r\n  try {\r\n    yield put(showLoader());\r\n    const payload = yield call(fetchPosts);\r\n    yield put({ type: FETCH_POST, payload });\r\n    yield put(hideLoader());\r\n  } catch (e) {\r\n    yield put(showAlert('Something going wrong'));\r\n    yield put(hideLoader());\r\n  }\r\n}\r\n\r\nasync function fetchPosts() {\r\n  console.log('fetchPosts');\r\n\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  return await response.json();\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\support\\\\Support.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport s from './support.module.scss';\nimport $ from 'jquery';\nexport default function Support(_ref) {\n  _s();\n\n  var _this = this;\n\n  var tasks = _ref.tasks,\n      createSupportTask = _ref.createSupportTask,\n      getAllUsersTasks = _ref.getAllUsersTasks;\n\n  var _useState = useState(false),\n      showText = _useState[0],\n      setShowText = _useState[1];\n\n  var _useState2 = useState(''),\n      subject = _useState2[0],\n      setSubject = _useState2[1];\n\n  var _useState3 = useState(''),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  useEffect(function () {\n    getAllUsersTasks();\n  }, []);\n\n  var openTaskText = function openTaskText(id) {\n    !showText ? $(\".show-\".concat(id)).css({\n      whiteSpace: 'normal',\n      overflow: 'visible'\n    }) : $(\".show-\".concat(id)).css({\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    });\n    setShowText(!showText);\n  };\n\n  var createTask = function createTask() {\n    if (subject.length > 2 && subject.length < 51 && message.length) {\n      createSupportTask({\n        subject: subject,\n        message: message\n      });\n      setSubject('');\n      setMessage('');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: s.support,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: s.create_task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: s.task_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"CREATE NEW TASK\"), __jsx(\"div\", {\n    className: s.task_body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Theme\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setSubject(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), __jsx(\"textarea\", {\n    className: \"form-control\",\n    rows: \"3\",\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    placeholder: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices gravida. Risus commodo viverra maecenas accumsan lacus vel facilisis.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: s.send_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    onClick: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"SEND\")))), __jsx(\"div\", {\n    className: s.history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"HISTORY\")), tasks && tasks.length ? tasks.map(function (task, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: s.history_item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }\n    }, __jsx(\"div\", {\n      className: \"\".concat(s.task_body),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, task.subject), __jsx(\"div\", {\n      className: \"text-white \".concat(s.text_of_support_message, \" show-\").concat(task.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, task.message), task.answer && __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }\n    }, task.answer)), __jsx(\"div\", {\n      className: s.send_btn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      onClick: function onClick(e) {\n        return openTaskText(task.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, !showText ? 'READ MORE' : 'HIDE'))));\n  }) : __jsx(\"div\", {\n    className: \"h1 text-info text-center py-5 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }\n  }, \"No tasks...\"));\n}\n\n_s(Support, \"dnewpyxy9hWr+xv2vbPm6dv2yI4=\");\n\n_c = Support;\n\nvar _c;\n\n$RefreshReg$(_c, \"Support\");","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/support/Support.jsx"],"names":["React","useState","useEffect","s","$","Support","tasks","createSupportTask","getAllUsersTasks","showText","setShowText","subject","setSubject","message","setMessage","openTaskText","id","css","whiteSpace","overflow","createTask","length","support","create_task","task_title","task_body","e","target","value","send_btn","history","map","task","i","history_item","text_of_support_message","answer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport s from './support.module.scss'\r\nimport $ from 'jquery'\r\n\r\nexport default function Support({ tasks, createSupportTask, getAllUsersTasks }) {\r\n    const [showText, setShowText] = useState(false);\r\n    const [subject, setSubject] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        getAllUsersTasks();\r\n    }, []);\r\n\r\n    const openTaskText = id => {\r\n        !showText ?\r\n            $(`.show-${id}`).css({\r\n                whiteSpace: 'normal',\r\n                overflow: 'visible',\r\n            }) : $(`.show-${id}`).css({\r\n                whiteSpace: 'nowrap',\r\n                overflow: 'hidden'\r\n            });\r\n        setShowText(!showText);\r\n    }\r\n\r\n    const createTask = () => {\r\n        if (subject.length > 2 && subject.length < 51 && message.length) {\r\n            createSupportTask({ subject, message });\r\n            setSubject('');\r\n            setMessage('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.support}>\r\n            <div className={s.create_task}>\r\n                <div className={s.task_title}>\r\n                    CREATE NEW TASK\r\n                </div>\r\n                <div className={s.task_body}>\r\n                    <input type=\"text\" placeholder=\"Theme\" className={`form-control`} onChange={e => setSubject(e.target.value)} />\r\n                    <textarea className={`form-control`} rows=\"3\" onChange={e => setMessage(e.target.value)} placeholder=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices gravida. Risus commodo viverra maecenas accumsan lacus vel facilisis.\"></textarea>\r\n                    <div className={s.send_btn}>\r\n                        <span onClick={createTask}>SEND</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.history}>\r\n                <span>HISTORY</span>\r\n            </div>\r\n\r\n            {tasks && tasks.length ? tasks.map((task, i) => {\r\n                return <div key={i} className={s.history_item}>\r\n                    <div className={`${s.task_body}`}>\r\n                        <div className={`text-white`}>{task.subject}</div>\r\n                        <div className={`text-white ${s.text_of_support_message} show-${task.id}`} >\r\n                            <p>{task.message}</p>\r\n                            {task.answer && <p>{task.answer}</p>}\r\n                        </div>\r\n                        <div className={s.send_btn}>\r\n                            <span onClick={e => openTaskText(task.id)}>{!showText ? 'READ MORE' : 'HIDE'}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }) : <div className=\"h1 text-info text-center py-5 \">No tasks...</div>}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
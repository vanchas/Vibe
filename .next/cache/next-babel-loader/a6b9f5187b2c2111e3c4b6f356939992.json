{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport s from \"./form.module.scss\";\nexport default function ModelsFilter({\n  availability,\n  available_to,\n  ethnicity,\n  affiliation,\n  eyes,\n  hair,\n  filterPosts,\n  slideFilter\n}) {\n  const {\n    0: sex,\n    1: setSex\n  } = useState(['gender', '']);\n  const {\n    0: ageFrom,\n    1: setAgeFrom\n  } = useState(['ageFrom', 0]);\n  const {\n    0: ageTo,\n    1: setAgeTo\n  } = useState(['ageTo', 0]);\n  const {\n    0: stateEthnicity,\n    1: setEthnicity\n  } = useState(['ethnicity_id', '']);\n  const {\n    0: stateHair,\n    1: setHair\n  } = useState(['hair_id', '']);\n  const {\n    0: stateEye,\n    1: setEye\n  } = useState(['eye_id', '']);\n  const {\n    0: stateAffiliation,\n    1: setAffiliation\n  } = useState(['affiliation_id', '']);\n  const {\n    0: stateAvailableTo,\n    1: setAvailableTo\n  } = useState(['availableto_ids', []]);\n  const {\n    0: stateAvailability,\n    1: setAvailability\n  } = useState(['availability_ids', []]);\n\n  const applyFilter = e => {\n    e.preventDefault();\n    const filterItems = {};\n    new Promise(res => {\n      [sex, stateEthnicity, stateHair, stateEye, stateAffiliation, stateAvailableTo, stateAvailability].forEach(item => {\n        if (item[1].toString().length) {\n          filterItems[item[0]] = item[1];\n        }\n      });\n      res();\n    }).then(() => {\n      filterPosts(filterItems);\n      slideFilter();\n    }).catch(err => console.error('Error: ', err));\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: applyFilter,\n    className: s.filter_form\n  }, __jsx(\"div\", {\n    className: s.sex_block\n  }, __jsx(\"legend\", null, \"Gender\"), __jsx(\"label\", {\n    className: s.label\n  }, __jsx(\"input\", {\n    className: \"mr-2\",\n    value: \"female\",\n    type: \"radio\",\n    name: \"sex\",\n    onChange: e => setSex(['gender', e.target.value])\n  }), __jsx(\"span\", {\n    className: s.checkmark\n  }), \"Female\"), __jsx(\"label\", {\n    className: s.label\n  }, __jsx(\"input\", {\n    className: \"mr-2\",\n    value: \"male\",\n    type: \"radio\",\n    name: \"sex\",\n    onChange: e => setSex(['gender', e.target.value])\n  }), __jsx(\"span\", {\n    className: s.checkmark\n  }), \"Male\")), __jsx(\"label\", {\n    className: `${s.age_block} form-group`\n  }, __jsx(\"legend\", null, \"Age\"), __jsx(\"input\", {\n    min: \"18\",\n    className: \"mr-2\",\n    className: \"form-control\",\n    type: \"number\",\n    placeholder: \"from\",\n    onClick: e => setAgeFrom(e.target.value)\n  }), __jsx(\"input\", {\n    className: \"mr-2\",\n    className: \"form-control\",\n    type: \"number\",\n    placeholder: \"to\",\n    onClick: e => setAgeTo(e.target.value)\n  })), __jsx(\"label\", {\n    className: `${s.ethnicity_block} form-group`\n  }, __jsx(\"legend\", null, \"Ethnicity:\"), __jsx(\"select\", {\n    className: \"form-control dropdown\",\n    onChange: e => setEthnicity(['ethnicity_id', e.target.value])\n  }, __jsx(\"option\", {\n    hidden: true,\n    value: \"default\"\n  }, \"-- select one --\"), ethnicity.length ? ethnicity.map(e => __jsx(\"option\", {\n    key: e.id,\n    value: e.id\n  }, e.value)) : null)), __jsx(\"div\", {\n    className: s.hair_block\n  }, __jsx(\"legend\", null, \"Hair\"), hair.length ? hair.map(h => __jsx(\"label\", {\n    key: h.id,\n    className: s.label\n  }, __jsx(\"input\", {\n    className: \"mr-2\",\n    value: h.id,\n    type: \"radio\",\n    name: \"hair\",\n    onClick: e => setHair(['hair_id', e.target.value])\n  }), __jsx(\"span\", {\n    className: s.checkmark\n  }), h.value)) : null), __jsx(\"div\", {\n    className: s.eye_block\n  }, __jsx(\"legend\", null, \"Eye\"), eyes.length ? eyes.map(e => __jsx(\"label\", {\n    key: e.id,\n    className: s.label\n  }, __jsx(\"input\", {\n    className: \"mr-2\",\n    value: e.id,\n    type: \"radio\",\n    name: \"eye\",\n    onClick: e => setEye(['eye_id', e.target.value])\n  }), __jsx(\"span\", {\n    className: s.checkmark\n  }), e.value)) : null), __jsx(\"div\", {\n    className: s.affiliation_block\n  }, __jsx(\"legend\", null, \"Affiliation\"), affiliation.length ? affiliation.map(a => __jsx(\"label\", {\n    key: a.id,\n    className: s.label\n  }, __jsx(\"input\", {\n    className: \"mr-2\",\n    value: a.id,\n    type: \"radio\",\n    name: \"affiliation\",\n    onClick: e => setAffiliation(['affiliation_id', e.target.value])\n  }), __jsx(\"span\", {\n    className: s.checkmark\n  }), a.value)) : null), __jsx(\"div\", {\n    className: s.availableTo_block\n  }, __jsx(\"legend\", null, \" Available To:\"), available_to.length ? available_to.map(a => __jsx(\"label\", {\n    key: a.id,\n    className: s.label\n  }, __jsx(\"input\", {\n    className: \"mr-2\",\n    type: \"checkbox\",\n    value: a.id,\n    onChange: e => {\n      if (e.target.checked) {\n        setAvailableTo(['availableto_ids', [...stateAvailableTo[1], e.target.value]]);\n      }\n    }\n  }), __jsx(\"span\", {\n    className: s.checksign\n  }), a.value)) : null), __jsx(\"div\", {\n    className: s.availability_block\n  }, __jsx(\"legend\", null, \"Availability:\"), availability.length ? availability.map(a => __jsx(\"label\", {\n    key: a.id,\n    className: s.label\n  }, __jsx(\"input\", {\n    className: \"mr-2\",\n    type: \"checkbox\",\n    value: a.id,\n    onChange: e => {\n      if (e.target.checked) {\n        setAvailability(['availability_ids', [...stateAvailability[1], e.target.value]]);\n      }\n    }\n  }), __jsx(\"span\", {\n    className: s.checksign\n  }), a.value)) : null), __jsx(\"button\", {\n    type: \"submit\",\n    className: `rounded border-0 ${s.btn_submit}`\n  }, \"Show\"));\n}","map":null,"metadata":{},"sourceType":"module"}
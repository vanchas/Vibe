{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\header\\\\Nav.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport s from './header.module.scss';\nimport PropTypes from 'prop-types';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nconst NavComponent = props => {\n  const {\n    0: activeLink,\n    1: setActiveLink\n  } = useState();\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return __jsx(\"div\", {\n    style: {\n      maxWidth: '1260px',\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    color: \"dark\",\n    dark: true,\n    expand: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(NavbarToggler, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), __jsx(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/modelCabinet\",\n    onClick: () => setActiveLink('model cabinet'),\n    className: activeLink === 'model cabinet' ? s.activeLink : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"Model Cabinet\")), __jsx(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/userCabinet\",\n    onClick: () => setActiveLink('user cabinet'),\n    className: activeLink === 'user cabinet' ? s.activeLink : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"User Cabinet\")), __jsx(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/addPost\",\n    onClick: () => setActiveLink('add post'),\n    className: activeLink === 'add post' ? s.activeLink : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Add Post\")), __jsx(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/test\",\n    onClick: () => setActiveLink('test'),\n    className: activeLink === 'test' ? s.activeLink : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"TEST\"))))));\n};\n\nNavComponent.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  return {};\n};\n\nNavComponent.propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  fixed: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\nexport default NavComponent;","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/header/Nav.jsx"],"names":["React","useState","useEffect","s","PropTypes","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","NavComponent","props","activeLink","setActiveLink","isOpen","setIsOpen","toggle","maxWidth","margin","getInitialProps","Component","ctx","propTypes","light","bool","dark","fixed","string","color","role","expand","oneOfType","tag","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport s from './header.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\n\r\nconst NavComponent = props => {\r\n  const [activeLink, setActiveLink] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div style={{\r\n      maxWidth: '1260px', margin: '0 auto'\r\n    }}>\r\n      <Navbar color=\"dark\" dark expand=\"lg\">\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/modelCabinet\" onClick={() => setActiveLink('model cabinet')} className={activeLink === 'model cabinet' ? s.activeLink : null}>Model Cabinet</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/userCabinet\" onClick={() => setActiveLink('user cabinet')} className={activeLink === 'user cabinet' ? s.activeLink : null}>User Cabinet</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/addPost\" onClick={() => setActiveLink('add post')} className={activeLink === 'add post' ? s.activeLink : null}>Add Post</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/test\" onClick={() => setActiveLink('test')} className={activeLink === 'test' ? s.activeLink : null}>TEST</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavComponent.getInitialProps = async ({ Component, ctx }) => {\r\n  return {}\r\n}\r\n\r\n\r\nNavComponent.propTypes = {\r\n  light: PropTypes.bool,\r\n  dark: PropTypes.bool,\r\n  fixed: PropTypes.string,\r\n  color: PropTypes.string,\r\n  role: PropTypes.string,\r\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n}\r\n\r\nexport default NavComponent;\r\n"]},"metadata":{},"sourceType":"module"}
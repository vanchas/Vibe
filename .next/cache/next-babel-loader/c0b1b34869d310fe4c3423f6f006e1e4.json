{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nexport default function SignIn({}) {\n  const router = useRouter();\n  return __jsx(\"div\", {\n    className: s.login_page_form\n  }, __jsx(\"h2\", null, \"Login\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().required('email is required'),\n      password: Yup.string().required('Password is required')\n    }),\n    onSubmit: ({\n      email,\n      password\n    }, {\n      setStatus,\n      setSubmitting\n    }) => {\n      setStatus();\n      authenticationService.login(email, password).then(data => {\n        setTimeout(() => {\n          setSubmitting(false);\n        }, 3000);\n      }, error => {\n        setSubmitting(false);\n        setStatus(error);\n      }).catch(err => console.error(\"Error:\", err));\n    },\n    render: ({\n      errors,\n      status,\n      touched,\n      isSubmitting\n    }) => __jsx(Form, null, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      htmlFor: \"email\"\n    }, \"Email\"), __jsx(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : '')\n    }), __jsx(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      htmlFor: \"password\"\n    }, \"Password\"), __jsx(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : '')\n    }), __jsx(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: `btn ${s.submit_btn}`,\n      disabled: isSubmitting\n    }, \"Submit\"), isSubmitting && __jsx(\"div\", {\n      className: \"spinner-border spinner-border-sm text-primary ml-3\",\n      role: \"status\"\n    }, __jsx(\"span\", {\n      className: \"sr-only\"\n    }, \"Loading...\"))), status && __jsx(\"div\", {\n      className: 'alert alert-danger'\n    }, JSON.stringify(status)))\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}
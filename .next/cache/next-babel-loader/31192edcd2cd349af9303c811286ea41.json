{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GET_ALL_SUPPORT_TASKS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\";\nexport var getAllSupportTasks = function getAllSupportTasks() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var user, response, promise;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = authenticationService.currentUserValue;\n              _context.next = 3;\n              return fetch(\"https://intim-vibe-api.padilo.pro/api/admin/support\", {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n                  'Authorization': \"\".concat(user.token_type, \" \").concat(user.token)\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              promise = response.json();\n              promise.then(function (res) {\n                return dispatch({\n                  type: GET_ALL_SUPPORT_TASKS,\n                  payload: res\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var editSupportTasks = function editSupportTasks(data) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var user, response, promise;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user = authenticationService.currentUserValue;\n              _context2.next = 3;\n              return fetch(\"https://intim-vibe-api.padilo.pro/api/admin/support\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n                  'Authorization': \"\".concat(user.token_type, \" \").concat(user.token)\n                },\n                body: JSON.stringify({\n                  subject: data.subject,\n                  message: data.message,\n                  answer: data.answer\n                })\n              });\n\n            case 3:\n              response = _context2.sent;\n              promise = response.json();\n              promise.then(function (res) {\n                return dispatch({\n                  type: GET_ALL_SUPPORT_TASKS,\n                  payload: res\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // admin/support/edit/{id} -  POST, поля (subject 3-50, message остаются, добавляется answer)","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/adminActions.ts"],"names":["GET_ALL_SUPPORT_TASKS","fetch","authenticationService","getAllSupportTasks","dispatch","user","currentUserValue","method","headers","token_type","token","response","promise","json","then","res","type","payload","editSupportTasks","data","body","JSON","stringify","subject","message","answer"],"mappings":";;AAAA,SAASA,qBAAT,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChCC,cAAAA,IADgC,GACzBH,qBAAqB,CAACI,gBADG;AAAA;AAAA,qBAEfL,KAAK,wDAAwD;AAClFM,gBAAAA,MAAM,EAAE,KAD0E;AAElFC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,iDAA+B,GAFxB;AAGP,6CAAoBH,IAAI,CAACI,UAAzB,cAAuCJ,IAAI,CAACK,KAA5C;AAHO;AAFyE,eAAxD,CAFU;;AAAA;AAEhCC,cAAAA,QAFgC;AAUhCC,cAAAA,OAVgC,GAUtBD,QAAQ,CAACE,IAAT,EAVsB;AAWtCD,cAAAA,OAAO,CAACE,IAAR,CAAa,UAAAC,GAAG,EAAI;AAClB,uBAAOX,QAAQ,CAAC;AAAEY,kBAAAA,IAAI,EAAEhB,qBAAR;AAA+BiB,kBAAAA,OAAO,EAAEF;AAAxC,iBAAD,CAAf;AACD,eAFD;;AAXsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAeP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA;AAAA,yEAAe,kBAAOf,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvCC,cAAAA,IADuC,GAChCH,qBAAqB,CAACI,gBADU;AAAA;AAAA,qBAEtBL,KAAK,wDAAwD;AAClFM,gBAAAA,MAAM,EAAE,MAD0E;AAElFC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,iDAA+B,GAFxB;AAGP,6CAAoBH,IAAI,CAACI,UAAzB,cAAuCJ,IAAI,CAACK,KAA5C;AAHO,iBAFyE;AAOlFU,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,kBAAAA,OAAO,EAAEJ,IAAI,CAACI,OAAhB;AAAyBC,kBAAAA,OAAO,EAAEL,IAAI,CAACK,OAAvC;AAAgDC,kBAAAA,MAAM,EAAEN,IAAI,CAACM;AAA7D,iBAAf;AAP4E,eAAxD,CAFiB;;AAAA;AAEvCd,cAAAA,QAFuC;AAWvCC,cAAAA,OAXuC,GAW7BD,QAAQ,CAACE,IAAT,EAX6B;AAY7CD,cAAAA,OAAO,CAACE,IAAR,CAAa,UAAAC,GAAG,EAAI;AAClB,uBAAOX,QAAQ,CAAC;AAAEY,kBAAAA,IAAI,EAAEhB,qBAAR;AAA+BiB,kBAAAA,OAAO,EAAEF;AAAxC,iBAAD,CAAf;AACD,eAFD;;AAZ6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAf;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB,C,CAiBP","sourcesContent":["import { GET_ALL_SUPPORT_TASKS } from \"./types\"\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { authenticationService } from \"../../_services\"\r\n\r\nexport const getAllSupportTasks = () => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    }\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: GET_ALL_SUPPORT_TASKS, payload: res })\r\n  });\r\n}\r\nexport const editSupportTasks = (data: any) => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    },\r\n    body: JSON.stringify({ subject: data.subject, message: data.message, answer: data.answer })\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: GET_ALL_SUPPORT_TASKS, payload: res })\r\n  });\r\n}\r\n\r\n// admin/support/edit/{id} -  POST, поля (subject 3-50, message остаются, добавляется answer)"]},"metadata":{},"sourceType":"module"}
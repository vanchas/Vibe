{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport Link from \"next/link\";\nimport s from \"./favorites.module.scss\";\nimport m1 from \"../../assets/images/main/model-cabinet/model-1.png\";\nimport m2 from \"../../assets/images/main/model-cabinet/model-2.png\";\nimport m3 from \"../../assets/images/main/model-cabinet/model-3.png\";\nimport m4 from \"../../assets/images/main/model-cabinet/model-4.png\";\nexport default function Favorites() {\n  var settings = {\n    infinite: true,\n    speed: 1500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    arrows: true,\n    dots: false,\n    autoplay: true,\n    autoplaySpeed: 10000,\n    draggable: false,\n    responsive: [{\n      breakpoint: 1025,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3\n      }\n    }, {\n      breakpoint: 769,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return __jsx(\"div\", {\n    className: \"pb-5\"\n  }, __jsx(Slider, _extends({}, settings, {\n    style: {\n      maxWidth: \"1260px\",\n      margin: \"0 auto\"\n    }\n  }), [m1, m2, m3, m4, m1, m2].map((m, i) => __jsx(\"div\", {\n    key: i\n  }, __jsx(\"div\", {\n    className: s.slide\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: m,\n    alt: \"user\",\n    className: \"w-100\"\n  })), __jsx(\"div\", {\n    className: s.user_info\n  }, __jsx(\"span\", null, \"User Name\"), __jsx(\"span\", null, \"Online\"), __jsx(\"span\", null, \"Location\"), __jsx(\"span\", null, __jsx(Link, {\n    href: \"/userProfile\"\n  }, __jsx(\"a\", null, \"VIEW PROFILE\"))), __jsx(\"span\", null, \"OTHER VIP\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\login-page\\\\SignIn.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nimport Cookies from 'js-cookie';\nexport default function SignIn(_ref) {\n  _s();\n\n  var _this = this;\n\n  var registeredPassword = _ref.registeredPassword,\n      registeredEmail = _ref.registeredEmail;\n  var router = useRouter();\n  return __jsx(\"div\", {\n    className: s.login_page_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Login\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().required('email is required'),\n      password: Yup.string().required('Password is required')\n    }),\n    onSubmit: function onSubmit(_ref2, _ref3) {\n      var email = _ref2.email,\n          password = _ref2.password;\n      var setStatus = _ref3.setStatus,\n          setSubmitting = _ref3.setSubmitting;\n      setStatus();\n      authenticationService.login(email, password).then(function (data) {// console.log('data:', data);\n        // if (data.token) {\n        //   Cookies.set(\"currentUser\", JSON.stringify(user), { expires: 1 });\n        //   if (data.user.role === 'client') {\n        //     console.log('client');\n        //     router.push('/userCabinet');\n        //   } else if (data.user.role = 'individual') {\n        //     console.log('individual');\n        //     router.push('/modelCabinet');\n        //   } else if (data.user.role === 'admin') {\n        //     console.log('admin');\n        //     router.push('/admin');\n        //   } else if (data.user.role === 'agency') {\n        //     console.log('agency');\n        //     router.push('/modelCabinet');\n        //   }\n        // }\n      }, function (error) {\n        setSubmitting(false);\n        setStatus(error);\n      }) // .then(() => window.location.reload(true))\n      [\"catch\"](function (err) {\n        return console.error(\"Error:\", err);\n      });\n    },\n    render: function render(_ref4) {\n      var errors = _ref4.errors,\n          status = _ref4.status,\n          touched = _ref4.touched,\n          isSubmitting = _ref4.isSubmitting;\n      return __jsx(Form, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"Email\"), __jsx(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, \"Password\"), __jsx(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn \".concat(s.submit_btn),\n        disabled: isSubmitting,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"Submit\"), isSubmitting && __jsx(\"div\", {\n        className: \"spinner-border spinner-border-sm text-primary ml-3\",\n        role: \"status\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"sr-only\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, \"Loading...\"))), status && __jsx(\"div\", {\n        className: 'alert alert-danger',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, status));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(SignIn, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/login-page/SignIn.jsx"],"names":["React","s","Formik","Field","Form","ErrorMessage","Yup","useRouter","authenticationService","Cookies","SignIn","registeredPassword","registeredEmail","router","login_page_form","email","password","object","shape","string","required","setStatus","setSubmitting","login","then","data","error","err","console","errors","status","touched","isSubmitting","submit_btn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './login.module.scss';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useRouter } from 'next/router';\r\nimport { authenticationService } from '../../_services';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function SignIn({ registeredPassword, registeredEmail }) {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className={s.login_page_form}>\r\n      <h2>Login</h2>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: ''\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().required('email is required'),\r\n          password: Yup.string().required('Password is required')\r\n        })}\r\n        onSubmit={({ email, password }, { setStatus, setSubmitting }) => {\r\n          setStatus();\r\n          authenticationService.login(email, password)\r\n            .then(\r\n              data => {\r\n                // console.log('data:', data);\r\n\r\n                // if (data.token) {\r\n                //   Cookies.set(\"currentUser\", JSON.stringify(user), { expires: 1 });\r\n                //   if (data.user.role === 'client') {\r\n                //     console.log('client');\r\n                //     router.push('/userCabinet');\r\n                //   } else if (data.user.role = 'individual') {\r\n                //     console.log('individual');\r\n                //     router.push('/modelCabinet');\r\n                //   } else if (data.user.role === 'admin') {\r\n                //     console.log('admin');\r\n                //     router.push('/admin');\r\n                //   } else if (data.user.role === 'agency') {\r\n                //     console.log('agency');\r\n                //     router.push('/modelCabinet');\r\n                //   }\r\n                // }\r\n              },\r\n              error => {\r\n                setSubmitting(false);\r\n                setStatus(error);\r\n              }\r\n            )\r\n            // .then(() => window.location.reload(true))\r\n            .catch((err) => console.error(\"Error:\", err));\r\n        }}\r\n        render={({ errors, status, touched, isSubmitting }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className={`btn ${s.submit_btn}`} disabled={isSubmitting}>Submit</button>\r\n              {isSubmitting &&\r\n                <div className=\"spinner-border spinner-border-sm text-primary ml-3\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              }\r\n            </div>\r\n            {status &&\r\n              <div className={'alert alert-danger'}>{status}</div>\r\n            }\r\n          </Form>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\test\\\\FetchedPosts.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Post from './Post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../../redux/actions/actions';\nexport default (() => {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.fetchedPosts);\n  const loading = useSelector(state => state.app.loading);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: \"spinner-border text-danger\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (!posts.length) {\n    return __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => dispatch(fetchPosts()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, \"Upload\");\n  }\n\n  return posts.map(post => __jsx(Post, {\n    post: post,\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/test/FetchedPosts.jsx"],"names":["React","Post","useDispatch","useSelector","fetchPosts","dispatch","posts","state","fetchedPosts","loading","app","length","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,gBAAe,MAAM;AACnB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYE,YAAtB,CAAzB;AACA,QAAMC,OAAO,GAAGN,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACG,GAAN,CAAUD,OAApB,CAA3B;;AAEA,MAAIA,OAAJ,EAAa;AACX,WACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAA4C,MAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,MAAI,CAACH,KAAK,CAACK,MAAX,EAAmB;AACjB,WAAO;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAACD,UAAU,EAAX,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAOE,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAAP;AACD,CAjBD","sourcesContent":["import React from 'react'\r\nimport Post from './Post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../../redux/actions/actions'\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector(state => state.posts.fetchedPosts);\r\n  const loading = useSelector(state => state.app.loading);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"spinner-border text-danger\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!posts.length) {\r\n    return <button className=\"btn btn-primary\" onClick={() => dispatch(fetchPosts())}>Upload</button>\r\n  }\r\n  return posts.map(post => <Post post={post} key={post.id} />)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
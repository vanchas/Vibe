{"ast":null,"code":"var _jsxFileName = \"/home/dev-2/WebstormProjects/vibe/src/pages/addPost.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AddPostForm from '../components/add-post/AddPostForm';\nimport { connect } from 'react-redux';\nimport { addProviderPost } from '../redux/actions/providerActions';\nimport { getAllPosts, getLocationsInfo, getCities, getAppInfo } from '../redux/actions/actions';\nimport Success from \"../components/helpers/Success\";\nimport Alert from \"../components/helpers/Alert\";\n\nfunction AddPost(_ref) {\n  _s();\n\n  var getAppInfo = _ref.getAppInfo,\n      getCities = _ref.getCities,\n      addProviderPost = _ref.addProviderPost,\n      getLocationsInfo = _ref.getLocationsInfo,\n      posts = _ref.posts,\n      getAllPosts = _ref.getAllPosts,\n      affiliation = _ref.affiliation,\n      availability = _ref.availability,\n      available_to = _ref.available_to,\n      ethnicity = _ref.ethnicity,\n      eyes = _ref.eyes,\n      hair = _ref.hair,\n      states = _ref.states,\n      cities = _ref.cities,\n      categories = _ref.categories,\n      success = _ref.success,\n      alert = _ref.alert;\n  useEffect(function () {\n    getAllPosts();\n    getLocationsInfo();\n    getAppInfo();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, success && __jsx(Success, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }), alert && __jsx(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }), __jsx(AddPostForm, {\n    addProviderPost: addProviderPost,\n    affiliation: affiliation,\n    availability: availability,\n    available_to: available_to,\n    ethnicity: ethnicity,\n    eyes: eyes,\n    hair: hair,\n    states: states,\n    cities: cities,\n    getCities: getCities,\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(AddPost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AddPost;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    affiliation: state.app.affiliation,\n    availability: state.app.availability,\n    available_to: state.app.available_to,\n    ethnicity: state.app.ethnicity,\n    eyes: state.app.eyes,\n    hair: state.app.hair,\n    posts: state.app.posts,\n    states: state.app.states,\n    cities: state.app.cities,\n    categories: state.app.categories,\n    success: state.app.success,\n    alert: state.app.alert\n  };\n};\n\nvar mapDispatchToProps = {\n  addProviderPost: addProviderPost,\n  getAllPosts: getAllPosts,\n  getLocationsInfo: getLocationsInfo,\n  getCities: getCities,\n  getAppInfo: getAppInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/pages/addPost.jsx"],"names":["React","useEffect","AddPostForm","connect","addProviderPost","getAllPosts","getLocationsInfo","getCities","getAppInfo","Success","Alert","AddPost","posts","affiliation","availability","available_to","ethnicity","eyes","hair","states","cities","categories","success","alert","mapStateToProps","state","app","mapDispatchToProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,kCAA9B;AACA,SAAQC,WAAR,EAAqBC,gBAArB,EAAuCC,SAAvC,EAAkDC,UAAlD,QAAmE,0BAAnE;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;;AAEA,SAASC,OAAT,OAkBoB;AAAA;;AAAA,MAjBCH,UAiBD,QAjBCA,UAiBD;AAAA,MAhBCD,SAgBD,QAhBCA,SAgBD;AAAA,MAfCH,eAeD,QAfCA,eAeD;AAAA,MAdCE,gBAcD,QAdCA,gBAcD;AAAA,MAbCM,KAaD,QAbCA,KAaD;AAAA,MAZCP,WAYD,QAZCA,WAYD;AAAA,MAXCQ,WAWD,QAXCA,WAWD;AAAA,MAVCC,YAUD,QAVCA,YAUD;AAAA,MATCC,YASD,QATCA,YASD;AAAA,MARCC,SAQD,QARCA,SAQD;AAAA,MAPCC,IAOD,QAPCA,IAOD;AAAA,MANCC,IAMD,QANCA,IAMD;AAAA,MALCC,MAKD,QALCA,MAKD;AAAA,MAJCC,MAID,QAJCA,MAID;AAAA,MAHCC,UAGD,QAHCA,UAGD;AAAA,MAFCC,OAED,QAFCA,OAED;AAAA,MADCC,KACD,QADCA,KACD;AAEhBtB,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,WAAW;AACXC,IAAAA,gBAAgB;AAChBE,IAAAA,UAAU;AACb,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKc,OAAO,IAAI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEKC,KAAK,IAAI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,EAGI,MAAC,WAAD;AACI,IAAA,eAAe,EAAEnB,eADrB;AAEI,IAAA,WAAW,EAAES,WAFjB;AAGI,IAAA,YAAY,EAAEC,YAHlB;AAII,IAAA,YAAY,EAAEC,YAJlB;AAKI,IAAA,SAAS,EAAEC,SALf;AAMI,IAAA,IAAI,EAAEC,IANV;AAOI,IAAA,IAAI,EAAEC,IAPV;AAQI,IAAA,MAAM,EAAEC,MARZ;AASI,IAAA,MAAM,EAAEC,MATZ;AAUI,IAAA,SAAS,EAAEb,SAVf;AAWI,IAAA,UAAU,EAAEc,UAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAmBH;;GA7CQV,O;;KAAAA,O;;AA+CT,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHZ,IAAAA,WAAW,EAAEY,KAAK,CAACC,GAAN,CAAUb,WADpB;AAEHC,IAAAA,YAAY,EAAEW,KAAK,CAACC,GAAN,CAAUZ,YAFrB;AAGHC,IAAAA,YAAY,EAAEU,KAAK,CAACC,GAAN,CAAUX,YAHrB;AAIHC,IAAAA,SAAS,EAAES,KAAK,CAACC,GAAN,CAAUV,SAJlB;AAKHC,IAAAA,IAAI,EAAEQ,KAAK,CAACC,GAAN,CAAUT,IALb;AAMHC,IAAAA,IAAI,EAAEO,KAAK,CAACC,GAAN,CAAUR,IANb;AAOHN,IAAAA,KAAK,EAAEa,KAAK,CAACC,GAAN,CAAUd,KAPd;AAQHO,IAAAA,MAAM,EAAEM,KAAK,CAACC,GAAN,CAAUP,MARf;AASHC,IAAAA,MAAM,EAAEK,KAAK,CAACC,GAAN,CAAUN,MATf;AAUHC,IAAAA,UAAU,EAAEI,KAAK,CAACC,GAAN,CAAUL,UAVnB;AAWHC,IAAAA,OAAO,EAAEG,KAAK,CAACC,GAAN,CAAUJ,OAXhB;AAYHC,IAAAA,KAAK,EAAEE,KAAK,CAACC,GAAN,CAAUH;AAZd,GAAP;AAcH,CAfD;;AAiBA,IAAMI,kBAAkB,GAAG;AACvBvB,EAAAA,eAAe,EAAfA,eADuB;AACNC,EAAAA,WAAW,EAAXA,WADM;AACOC,EAAAA,gBAAgB,EAAhBA,gBADP;AACyBC,EAAAA,SAAS,EAATA,SADzB;AACoCC,EAAAA,UAAU,EAAVA;AADpC,CAA3B;AAKA,eAAeL,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,OAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport AddPostForm from '../components/add-post/AddPostForm'\nimport {connect} from 'react-redux'\nimport {addProviderPost} from '../redux/actions/providerActions'\nimport {getAllPosts, getLocationsInfo, getCities, getAppInfo} from '../redux/actions/actions'\nimport Success from \"../components/helpers/Success\";\nimport Alert from \"../components/helpers/Alert\";\n\nfunction AddPost({\n                     getAppInfo,\n                     getCities,\n                     addProviderPost,\n                     getLocationsInfo,\n                     posts,\n                     getAllPosts,\n                     affiliation,\n                     availability,\n                     available_to,\n                     ethnicity,\n                     eyes,\n                     hair,\n                     states,\n                     cities,\n                     categories,\n                     success,\n                     alert\n                 }) {\n\n    useEffect(() => {\n        getAllPosts();\n        getLocationsInfo();\n        getAppInfo();\n    }, []);\n\n    return (\n        <div>\n            {success && <Success/>}\n            {alert && <Alert/>}\n            <AddPostForm\n                addProviderPost={addProviderPost}\n                affiliation={affiliation}\n                availability={availability}\n                available_to={available_to}\n                ethnicity={ethnicity}\n                eyes={eyes}\n                hair={hair}\n                states={states}\n                cities={cities}\n                getCities={getCities}\n                categories={categories}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        affiliation: state.app.affiliation,\n        availability: state.app.availability,\n        available_to: state.app.available_to,\n        ethnicity: state.app.ethnicity,\n        eyes: state.app.eyes,\n        hair: state.app.hair,\n        posts: state.app.posts,\n        states: state.app.states,\n        cities: state.app.cities,\n        categories: state.app.categories,\n        success: state.app.success,\n        alert: state.app.alert\n    }\n}\n\nconst mapDispatchToProps = {\n    addProviderPost, getAllPosts, getLocationsInfo, getCities, getAppInfo\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n"]},"metadata":{},"sourceType":"module"}
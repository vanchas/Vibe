{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk'; // import { forbiddenWordsMiddlwware } from './middleware';\n\nimport createSagasMiddleware from 'redux-saga';\nimport { rootSaga } from './sagas/sagas';\nimport { getAppInfo } from './actions/actions';\nconst preloadedState = {};\nconst saga = createSagasMiddleware();\nconst store = createStore(rootReducer, preloadedState, applyMiddleware(thunk, // forbiddenWordsMiddlwware,\nsaga));\nstore.dispatch(getAppInfo);\nsaga.run(rootSaga);\nstore.subscribe(() => {\n  console.log('updated state: ', store.getState());\n});\nexport default store;","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/redux/store.ts"],"names":["createStore","applyMiddleware","rootReducer","thunk","createSagasMiddleware","rootSaga","getAppInfo","preloadedState","saga","store","dispatch","run","subscribe","console","log","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,qBAAP,MAAkC,YAAlC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,IAAI,GAAGJ,qBAAqB,EAAlC;AAEA,MAAMK,KAAU,GAAGT,WAAW,CAC5BE,WAD4B,EAE5BK,cAF4B,EAG5BN,eAAe,CACbE,KADa,EAEb;AACAK,IAHa,CAHa,CAA9B;AAUAC,KAAK,CAACC,QAAN,CAAeJ,UAAf;AAEAE,IAAI,CAACG,GAAL,CAASN,QAAT;AAEAI,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,KAAK,CAACM,QAAN,EAA/B;AACD,CAFD;AAIA,eAAeN,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\n// import { forbiddenWordsMiddlwware } from './middleware';\nimport createSagasMiddleware from 'redux-saga';\nimport { rootSaga } from './sagas/sagas';\nimport { getAppInfo } from './actions/actions';\n\nconst preloadedState = {};\nconst saga = createSagasMiddleware();\n\nconst store: any = createStore(\n  rootReducer,\n  preloadedState,\n  applyMiddleware(\n    thunk,\n    // forbiddenWordsMiddlwware,\n    saga\n  )\n);\n\nstore.dispatch(getAppInfo);\n\nsaga.run(rootSaga);\n\nstore.subscribe(() => {\n  console.log('updated state: ', store.getState());\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport { handleResponse } from \"../_helpers\";\nimport Router from \"next/router\";\nlet currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nconst target = `https://intim-vibe-api.padilo.pro/api`;\nexport const authenticationService = {\n  login,\n  logout,\n  registrationAdmin,\n  registrationClient,\n  registrationProvider,\n  registrationAgency,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nasync function login(email, password) {\n  return await fetch(`${target}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleResponse).then(user => {\n    if (user.token) {\n      Cookies.set(\"currentUser\", JSON.stringify(user), {\n        expires: 1\n      });\n      currentUserSubject = user;\n      return user;\n    }\n  }).then(() => window.location.reload(true)).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationClient(name, password, email, password_confirmation) {\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(client => {\n    Cookies.set(\"currentUser\", JSON.stringify(client));\n    currentUserSubject = client;\n    return client;\n  }).then(() => {\n    login(email, password);\n  }) // .then(() => Router.push(\"/userCabinet\"))\n  .catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationAdmin(name, password, email, password_confirmation) {\n  return await fetch(`${target}/admin/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(admin => {\n    Cookies.set(\"currentUser\", JSON.stringify(admin));\n    currentUserSubject = admin;\n    return admin;\n  }).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationProvider(name, password, email, password_confirmation, phone) {\n  return await fetch(`${target}/individual/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone\n    })\n  }).then(handleResponse).then(provider => {\n    Cookies.set(\"currentUser\", JSON.stringify(provider.user));\n    currentUserSubject = provider;\n    return provider;\n  }).then(() => Router.push(\"/modelCabinet\")).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationAgency(name, password, email, password_confirmation, phone, agency) {\n  return await fetch(`${target}/agency/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone,\n      agency\n    })\n  }).then(handleResponse).then(provider => {\n    Cookies.set(\"currentUser\", JSON.stringify(provider.user));\n    currentUserSubject = provider;\n    return provider;\n  }).then(() => Router.push(\"/modelCabinet\")).catch(err => console.error(\"Error:\", err));\n}\n\nasync function logout() {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/logout`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }).then(() => Router.push('/')).then(() => window.location.reload(true)).catch(err => console.error(\"Error:\", err));\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","handleResponse","Router","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","registrationAgency","currentUser","currentUserValue","email","password","method","headers","body","JSON","stringify","then","user","token","set","expires","window","location","reload","catch","err","console","error","name","password_confirmation","client","admin","phone","provider","push","agency","remove"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { handleResponse } from \"../_helpers\";\r\nimport Router from \"next/router\";\r\n\r\nlet currentUserSubject = Cookies.getJSON(\"currentUser\")\r\n  ? Cookies.getJSON(\"currentUser\")\r\n  : {};\r\n\r\nconst target = `https://intim-vibe-api.padilo.pro/api`;\r\n\r\nexport const authenticationService = {\r\n  login,\r\n  logout,\r\n  registrationAdmin,\r\n  registrationClient,\r\n  registrationProvider,\r\n  registrationAgency,\r\n  currentUser: currentUserSubject,\r\n  get currentUserValue() {\r\n    return currentUserSubject;\r\n  },\r\n};\r\n\r\nasync function login(email: string, password: string): Promise<any> {\r\n  return await fetch(`${target}/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      if (user.token) {\r\n        Cookies.set(\"currentUser\", JSON.stringify(user), { expires: 1 });\r\n        currentUserSubject = user;\r\n        return user;\r\n      }\r\n    })\r\n    .then(() => window.location.reload(true))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationClient(\r\n  name: string,\r\n  password: string,\r\n  email: string,\r\n  password_confirmation: string\r\n): Promise<any> {\r\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((client) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(client));\r\n      currentUserSubject = client;\r\n      return client;\r\n    })\r\n    .then(() => {\r\n      login(email, password);\r\n    })\r\n    // .then(() => Router.push(\"/userCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationAdmin(\r\n  name: string,\r\n  password: number | string,\r\n  email: string,\r\n  password_confirmation: number | string\r\n): Promise<any> {\r\n  return await fetch(`${target}/admin/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((admin) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(admin));\r\n      currentUserSubject = admin;\r\n      return admin;\r\n    })\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationProvider(\r\n  name: string,\r\n  password: number | string,\r\n  email: string,\r\n  password_confirmation: number | string,\r\n  phone: string | number\r\n): Promise<any> {\r\n  return await fetch(`${target}/individual/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n      phone\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((provider) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(provider.user));\r\n      currentUserSubject = provider;\r\n      return provider;\r\n    })\r\n    .then(() => Router.push(\"/modelCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationAgency(\r\n  name: string,\r\n  password: number | string,\r\n  email: string,\r\n  password_confirmation: number | string,\r\n  phone: string | number,\r\n  agency: string\r\n): Promise<any> {\r\n  return await fetch(`${target}/agency/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n      phone,\r\n      agency\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((provider) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(provider.user));\r\n      currentUserSubject = provider;\r\n      return provider;\r\n    })\r\n    .then(() => Router.push(\"/modelCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function logout(): Promise<any> {\r\n  Cookies.remove(\"currentUser\");\r\n  return await fetch(`${target}/logout`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  })\r\n    .then(() => Router.push('/'))\r\n    .then(() => window.location.reload(true))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Cookies from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\nimport { handleResponse } from '../_helpers';\nimport Router from 'next/router';\nlet currentUserSubject = Cookies.getJSON('currentUser') ? Cookies.getJSON('currentUser') : {};\nconst target = `https://intim-vibe-api.padilo.pro/api`;\nexport const authenticationService = {\n  login,\n  logout,\n  registrationAdmin,\n  registrationClient,\n  registrationProvider,\n  confirmEmail,\n  confirmSMS,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nasync function login(email, password) {\n  return await fetch(`${target}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleResponse).then(user => {\n    // if (user.token) {\n    Cookies.set('currentUser', JSON.stringify(user));\n    currentUserSubject = user;\n    console.log(user);\n    return user; // }\n  }).catch(err => console.error('Error:', err)); // .then(() => window.location.reload(true));\n}\n\nasync function registrationClient(name, password, email, password_confirmation) {\n  // https://intim-vibe-api.padilo.pro/api/client/register\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(client => {\n    console.log('client:', client);\n    Cookies.set('currentUser', JSON.stringify(client));\n    currentUserSubject = client;\n    return client;\n  }).catch(err => console.error('Error:', err));\n}\n\nasync function registrationAdmin(name, password, email, password_confirmation) {\n  return await fetch(`${target}/admin/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(admin => {\n    Cookies.set('currentUser', JSON.stringify(admin));\n    currentUserSubject = admin;\n    return admin;\n  }).catch(err => console.error('Error:', err));\n}\n\nasync function registrationProvider(name, password, email, password_confirmation, phone) {\n  return await fetch(`${target}/individual/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone\n    })\n  }).then(handleResponse).then(provider => {\n    console.log(provider);\n    Cookies.set('currentUser', JSON.stringify(provider));\n    currentUserSubject = provider;\n    return provider;\n  }).then(() => Router.push('/')).catch(err => console.error('Error:', err));\n}\n\nasync function logout() {\n  Cookies.remove('currentUser');\n  return await fetch(`${target}/logout`, {\n    method: 'GET',\n    mode: 'no-cors',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  }).then(res => res).catch(err => console.error('Error:', err));\n}\n\nfunction confirmEmail(token) {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(`/register/activate_email/${token}`, requestOptions).then(handleResponse).catch(err => console.error('Error:', err));\n}\n\nfunction confirmSMS(token) {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(`/register/activate_sms/${token}`, requestOptions).then(handleResponse).catch(err => console.error('Error:', err));\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","handleResponse","Router","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","confirmEmail","confirmSMS","currentUser","currentUserValue","email","password","method","headers","body","JSON","stringify","then","user","set","console","log","catch","err","error","name","password_confirmation","client","admin","phone","provider","push","remove","mode","res","token","requestOptions"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { handleResponse } from '../_helpers';\r\nimport Router from 'next/router';\r\n\r\nlet currentUserSubject = (Cookies.getJSON('currentUser')) ? Cookies.getJSON('currentUser') : {};\r\n\r\nconst target = `https://intim-vibe-api.padilo.pro/api`;\r\n\r\nexport const authenticationService = {\r\n  login,\r\n  logout,\r\n  registrationAdmin,\r\n  registrationClient,\r\n  registrationProvider,\r\n  confirmEmail,\r\n  confirmSMS,\r\n  currentUser: currentUserSubject,\r\n  get currentUserValue() { return currentUserSubject }\r\n};\r\n\r\nasync function login(email: string, password: string): Promise<any> {\r\n  return await fetch(`${target}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ email, password })\r\n  }).then(handleResponse)\r\n    .then(user => {\r\n      // if (user.token) {\r\n      Cookies.set('currentUser', JSON.stringify(user));\r\n      currentUserSubject = user;\r\n      console.log(user);\r\n      \r\n      return user;\r\n      // }\r\n    }).catch(err => console.error('Error:', err))\r\n  // .then(() => window.location.reload(true));\r\n}\r\n\r\nasync function registrationClient(name: string, password: number | string, email: string, password_confirmation: number | string): Promise<any> {\r\n  // https://intim-vibe-api.padilo.pro/api/client/register\r\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .then(client => {\r\n      console.log('client:', client);\r\n\r\n      Cookies.set('currentUser', JSON.stringify(client));\r\n      currentUserSubject = client;\r\n      return client;\r\n    }).catch(err => console.error('Error:', err))\r\n}\r\n\r\nasync function registrationAdmin(name: string, password: number | string, email: string, password_confirmation: number | string): Promise<any> {\r\n  return await fetch(`${target}/admin/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation\r\n    })\r\n  }).then(handleResponse)\r\n    .then(admin => {\r\n      Cookies.set('currentUser', JSON.stringify(admin));\r\n      currentUserSubject = admin;\r\n      return admin;\r\n    })\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n\r\nasync function registrationProvider(name: string, password: number | string, email: string, password_confirmation: number | string, phone: string | number): Promise<any> {\r\n  return await fetch(`${target}/individual/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n      phone\r\n    })\r\n  }).then(handleResponse)\r\n    .then(provider => {\r\n      console.log(provider);\r\n      \r\n      Cookies.set('currentUser', JSON.stringify(provider));\r\n      currentUserSubject = provider;\r\n      return provider;\r\n    }).then(() => Router.push('/'))\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n\r\nasync function logout(): Promise<any> {\r\n  Cookies.remove('currentUser');\r\n  return await fetch(`${target}/logout`, {\r\n    method: 'GET',\r\n    mode: 'no-cors',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    }\r\n  }).then(res => res)\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n\r\nfunction confirmEmail(token: string): any {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  return fetch(`/register/activate_email/${token}`, requestOptions)\r\n    .then(handleResponse)\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n\r\nfunction confirmSMS(token: string): any {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  return fetch(`/register/activate_sms/${token}`, requestOptions)\r\n    .then(handleResponse)\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { TEST_CREATE_POST, SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, TEST_REQUEST_POSTS, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS, GET_FAVORITES, GET_COMPLAINS, SORT_POSTS, SHOW_SUCCESS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\"; // T E S T \n\nexport function createPost(post) {\n  return {\n    type: TEST_CREATE_POST,\n    payload: post\n  };\n}\n;\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER\n  };\n}\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER\n  };\n}\nexport function showAlert(text) {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: text\n    });\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 3000);\n  };\n}\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT\n  };\n}\nexport function fetchPosts() {\n  return {\n    type: TEST_REQUEST_POSTS\n  };\n}\n;\nexport const getAllPosts = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts`);\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: GET_ALL_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getNewPosts = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/all/new`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_NEW_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getLocationsInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_LOCAITONS_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getAppInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/info`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_APP_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getCities = stateId => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location/cities/${stateId}`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_CITIES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const createSupportTask = task => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify(task)\n  });\n  const promise = response.json();\n  promise.then(res => console.log(res)).catch(err => console.error('Error: ', err));\n  return dispatch({\n    type: CREATE_SUPPORT_TASK,\n    payload: task\n  });\n};\nexport const getAllUsersTasks = () => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/${user.user.id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_USER_TASKS,\n      payload: res\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const selectPostsPage = page => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts?page=${page}`);\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: GET_ALL_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getPostComments = postId => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: GET_POST_COMMENTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n  ;\n};\nexport const createPostComment = (postId, comment) => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      comment\n    })\n  });\n  const promise = response.json();\n  promise.then(res => {\n    dispatch({\n      type: CREATE_POST_COMMENT,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n  ;\n};\nexport const filterPosts = filterItemsObject => async dispatch => {\n  // from, to, gender, ethnicity_id, hair_id, eye_id, category_id, affiliation_id, availability_ids(array), availableto_ids(array)\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/filter`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: JSON.stringify(filterItemsObject)\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    dispatch({\n      type: GET_PAGES_NUMBER,\n      payload: res.last_page\n    });\n    dispatch({\n      type: FILTER_POSTS,\n      payload: res.data.data\n    });\n  }).catch(err => console.error('Error: ', err));\n  ;\n};\nexport const reportPost = (postId, message) => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/${postId}/complaints/add`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      message,\n      status: 'In progress'\n    })\n  }); // const promise = response.json();\n  // return promise.then(res => {\n  //     dispatch({ type: REPORT_POST });\n  // });\n};\nexport const addToFavorites = postId => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/favorites/add`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      is_favorite: true\n    })\n  });\n};\nexport const addToFavoritesBusiness = postId => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/favorites_business/add`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n};\nexport const getFavoritesBusiness = () => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/favorites_business/my`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    return dispatch({\n      type: GET_FAVORITES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getFavoritesUser = () => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/favorites/my`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    return dispatch({\n      type: GET_FAVORITES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getComplains = userId => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/complaints/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  return promise.then(res => {\n    return dispatch({\n      type: GET_COMPLAINS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const sortPosts = sortType => async dispatch => {\n  return dispatch({\n    type: SORT_POSTS,\n    payload: sortType\n  });\n};\nexport const showSuccess = text => async dispatch => {\n  dispatch({\n    type: SHOW_SUCCESS,\n    payload: text\n  });\n  setTimeout(() => {\n    dispatch({\n      type: SHOW_SUCCESS,\n      payload: null\n    });\n  }, 3000);\n};","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/redux/actions/actions.ts"],"names":["TEST_CREATE_POST","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","TEST_REQUEST_POSTS","GET_ALL_POSTS","GET_LOCAITONS_INFO","GET_CITIES","CREATE_SUPPORT_TASK","GET_ALL_USER_TASKS","GET_APP_INFO","GET_NEW_POSTS","GET_PAGES_NUMBER","GET_POST_COMMENTS","CREATE_POST_COMMENT","FILTER_POSTS","GET_FAVORITES","GET_COMPLAINS","SORT_POSTS","SHOW_SUCCESS","fetch","authenticationService","createPost","post","type","payload","showLoader","hideLoader","showAlert","text","dispatch","setTimeout","hideAlert","fetchPosts","getAllPosts","response","promise","json","then","res","last_page","data","catch","err","console","error","getNewPosts","getLocationsInfo","getAppInfo","getCities","stateId","createSupportTask","task","user","currentUserValue","method","headers","token_type","token","body","JSON","stringify","log","getAllUsersTasks","id","selectPostsPage","page","getPostComments","postId","createPostComment","comment","filterPosts","filterItemsObject","reportPost","message","status","addToFavorites","is_favorite","addToFavoritesBusiness","getFavoritesBusiness","getFavoritesUser","getComplains","userId","sortPosts","sortType","showSuccess"],"mappings":"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","sourcesContent":["import {\n    TEST_CREATE_POST,\n    SHOW_LOADER,\n    HIDE_LOADER,\n    SHOW_ALERT,\n    HIDE_ALERT,\n    TEST_REQUEST_POSTS,\n    GET_ALL_POSTS,\n    GET_LOCAITONS_INFO,\n    GET_CITIES,\n    CREATE_SUPPORT_TASK,\n    GET_ALL_USER_TASKS,\n    GET_APP_INFO,\n    GET_NEW_POSTS,\n    GET_PAGES_NUMBER,\n    GET_POST_COMMENTS,\n    CREATE_POST_COMMENT,\n    FILTER_POSTS,\n    GET_FAVORITES,\n    GET_COMPLAINS,\n    SORT_POSTS,\n    SHOW_SUCCESS\n} from \"./types\"\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\";\n\n// T E S T \nexport function createPost(post: any): any {\n    return {\n        type: TEST_CREATE_POST,\n        payload: post\n    }\n};\nexport function showLoader() {\n    return {\n        type: SHOW_LOADER\n    }\n}\nexport function hideLoader() {\n    return {\n        type: HIDE_LOADER\n    }\n}\nexport function showAlert(text: string): any {\n    return (dispatch: Function) => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: text\n        })\n        setTimeout(() => {\n            dispatch(hideAlert())\n        }, 3000)\n    }\n}\nexport function hideAlert() {\n    return {\n        type: HIDE_ALERT\n    }\n}\nexport function fetchPosts(): any {\n    return {\n        type: TEST_REQUEST_POSTS\n    }\n};\nexport const getAllPosts = () => async (dispatch: Function) => {\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts`);\n    const promise = response.json();\n    promise.then(res => {\n        dispatch({ type: GET_PAGES_NUMBER, payload: res.last_page });\n        dispatch({ type: GET_ALL_POSTS, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const getNewPosts = () => async (dispatch: Function) => {\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/all/new`);\n    const promise = response.json();\n    promise.then(res => {\n        return dispatch({ type: GET_NEW_POSTS, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const getLocationsInfo = () => async (dispatch: Function) => {\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location`);\n    const promise = response.json();\n    promise.then(res => {\n        return dispatch({ type: GET_LOCAITONS_INFO, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const getAppInfo = () => async (dispatch: Function) => {\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/info`);\n    const promise = response.json();\n    promise.then(res => {\n        return dispatch({ type: GET_APP_INFO, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const getCities = (stateId: number | string) => async (dispatch: any) => {\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location/cities/${stateId}`);\n    const promise = response.json();\n    promise.then(res => {\n        return dispatch({ type: GET_CITIES, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const createSupportTask = (task: any) => async (dispatch: Function) => {\n    const user = authenticationService.currentUserValue;\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/create`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        },\n        body: JSON.stringify(task)\n    });\n    const promise = response.json();\n    promise.then(res => console.log(res))\n        .catch(err => console.error('Error: ', err));\n    return dispatch({ type: CREATE_SUPPORT_TASK, payload: task })\n}\nexport const getAllUsersTasks = () => async (dispatch: Function) => {\n    const user = await authenticationService.currentUserValue;\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/${user.user.id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        }\n    });\n    const promise = response.json();\n    promise.then(res => {\n        return dispatch({ type: GET_ALL_USER_TASKS, payload: res });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const selectPostsPage = (page: number | string) => async (dispatch: Function) => {\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts?page=${page}`);\n    const promise = response.json();\n    promise.then(res => {\n        dispatch({ type: GET_PAGES_NUMBER, payload: res.last_page });\n        dispatch({ type: GET_ALL_POSTS, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const getPostComments = (postId: number | string) => async (dispatch: Function) => {\n    const user = await authenticationService.currentUserValue;\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        }\n    });\n    const promise = response.json();\n    promise.then(res => {\n        dispatch({ type: GET_POST_COMMENTS, payload: res.data });\n    }).catch(err => console.error('Error: ', err));;\n}\nexport const createPostComment = (postId: number | string, comment: string) => async (dispatch: Function) => {\n    const user = await authenticationService.currentUserValue;\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/comments/create`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        },\n        body: JSON.stringify({ comment })\n    });\n    const promise = response.json();\n    promise.then(res => {\n        dispatch({ type: CREATE_POST_COMMENT, payload: res.data });\n    }).catch(err => console.error('Error: ', err));;\n}\nexport const filterPosts = (filterItemsObject: any) => async (dispatch: Function) => {\n    // from, to, gender, ethnicity_id, hair_id, eye_id, category_id, affiliation_id, availability_ids(array), availableto_ids(array)\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/filter`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify(filterItemsObject)\n    });\n    const promise = response.json();\n    return promise.then(res => {\n        dispatch({ type: GET_PAGES_NUMBER, payload: res.last_page });\n        dispatch({ type: FILTER_POSTS, payload: res.data.data });\n    }).catch(err => console.error('Error: ', err));;\n}\nexport const reportPost = (postId: number | string, message: string) => async (dispatch: Function) => {\n    const user = authenticationService.currentUserValue;\n    return await fetch(`https://intim-vibe-api.padilo.pro/api/${postId}/complaints/add`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        },\n        body: JSON.stringify({\n            message, status: 'In progress'\n        })\n    });\n    // const promise = response.json();\n    // return promise.then(res => {\n    //     dispatch({ type: REPORT_POST });\n    // });\n}\nexport const addToFavorites = (postId: number | string) => async (dispatch: Function) => {\n    const user = authenticationService.currentUserValue;\n    return await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/favorites/add`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        },\n        body: JSON.stringify({\n            is_favorite: true\n        })\n    });\n}\nexport const addToFavoritesBusiness = (postId: number | string) => async (dispatch: Function) => {\n    const user = authenticationService.currentUserValue;\n    return await fetch(`https://intim-vibe-api.padilo.pro/api/posts/${postId}/favorites_business/add`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        }\n    });\n}\nexport const getFavoritesBusiness = () => async (dispatch: Function) => {\n    const user = authenticationService.currentUserValue;\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/favorites_business/my`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        }\n    });\n    const promise = response.json();\n    return promise.then(res => {\n        return dispatch({ type: GET_FAVORITES, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const getFavoritesUser = () => async (dispatch: Function) => {\n    const user = authenticationService.currentUserValue;\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/favorites/my`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        }\n    });\n    const promise = response.json();\n    return promise.then(res => {\n        return dispatch({ type: GET_FAVORITES, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const getComplains = (userId: number | string) => async (dispatch: Function) => {\n    const user = authenticationService.currentUserValue;\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts/complaints/user/${userId}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `${user.token_type} ${user.token}`\n        }\n    });\n    const promise = response.json();\n    return promise.then(res => {\n        return dispatch({ type: GET_COMPLAINS, payload: res.data });\n    }).catch(err => console.error('Error: ', err));\n}\nexport const sortPosts = (sortType: string) => async (dispatch: Function) => {\n    return dispatch({ type: SORT_POSTS, payload: sortType })\n}\n\nexport const showSuccess = (text: string) => async (dispatch: Function) => {\n    dispatch({ type: SHOW_SUCCESS, payload: text })\n    setTimeout(() => {\n        dispatch({ type: SHOW_SUCCESS, payload: null })\n    }, 3000)\n}\n"]},"metadata":{},"sourceType":"module"}
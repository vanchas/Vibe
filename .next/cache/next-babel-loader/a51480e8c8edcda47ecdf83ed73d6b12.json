{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_POST, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\"; // import { useRouter } from \"next/router\"\n\nexport function getAllProviderPost() {\n  return {\n    type: GET_ALL_POSTS\n  };\n}\n;\nexport var addProviderPost = function addProviderPost(post) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var user, formData, response, promise;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = authenticationService.currentUserValue;\n              formData = new FormData();\n              formData.append('gender', post.gender);\n              formData.append('age', post.age);\n              formData.append('ethnicity_id', post.ethnicity_id);\n              formData.append('hair_id', post.hair_id);\n              formData.append('eye_id', post.eye_id);\n              formData.append('height', post.height);\n              formData.append('affiliation_id', post.affiliation_id);\n              formData.append('availability_ids', post.availability_ids);\n              formData.append('availableto_ids', post.availableto_ids);\n              formData.append('number', post.number);\n              formData.append('email', post.email);\n              formData.append('model_name', post.model_name);\n              post.photo.forEach(function (p) {\n                return formData.append('photo', p);\n              });\n              formData.append('video_link', post.video_link);\n              formData.append('about', post.about);\n              formData.append('summary', post.summary);\n              formData.append('category_id', post.category_id);\n              formData.append('state_id', post.state_id);\n              formData.append('city_id', post.city_id);\n              formData.append('second_name', post.second_name);\n              formData.append('account_name', post.account_name);\n              formData.append('photo_vertical', post.photo_vertical);\n              formData.append('photo_horizontal', post.photo_horizontal);\n              _context.next = 27;\n              return fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n                method: 'POST',\n                headers: {\n                  'Access-Control-Allow-Origin': '*',\n                  'Accept': 'application/json',\n                  'Authorization': \"\".concat(user.token_type, \" \").concat(user.token)\n                },\n                body: formData\n              });\n\n            case 27:\n              response = _context.sent;\n              promise = response.json();\n              promise.then(function (res) {\n                return dispatch({\n                  type: ADD_POST,\n                  payload: post\n                });\n              })[\"catch\"](function (err) {\n                return console.error('Error:', err);\n              });\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport function updateProviderPost(post) {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  };\n}\n;\nexport function removeProviderPost(id) {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  };\n}\n; // export function showAlert(text: string): any {\n//     return (dispatch: Function) => {\n//         dispatch({\n//             type: SHOW_ALERT,\n//             payload: text\n//         })\n//         setTimeout(() => {\n//             dispatch(hideAlert())\n//         }, 3000)\n//     }\n// }","map":null,"metadata":{},"sourceType":"module"}
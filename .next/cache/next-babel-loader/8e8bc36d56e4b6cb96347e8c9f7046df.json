{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\login-page\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nexport default function SignUp() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(''),\n      password_confirmation = _useState4[0],\n      setPassword_confirmation = _useState4[1];\n\n  var submitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              authenticationService.registrationClient(name, password, email, password_confirmation);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: s.login_page_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Registration\"), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return submitHandler(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"name\", __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"email\", __jsx(\"input\", {\n    type: \"email\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"password\", __jsx(\"input\", {\n    type: \"password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"confirm password\", __jsx(\"input\", {\n    type: \"password\",\n    onChange: function onChange(e) {\n      return setPassword_confirmation(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"submit\")));\n}\n\n_s(SignUp, \"7b2hZillBevph48e+qSTVQxhfyQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/login-page/SignUp.jsx"],"names":["React","useState","s","Formik","Field","Form","ErrorMessage","Yup","useRouter","authenticationService","SignUp","router","name","setName","email","setEmail","password","setPassword","password_confirmation","setPassword_confirmation","submitHandler","e","preventDefault","registrationClient","login_page_form","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport s from './login.module.scss';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useRouter } from 'next/router';\r\nimport { authenticationService } from '../../_services';\r\n\r\nexport default function SignUp() {\r\n  const router = useRouter();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password_confirmation, setPassword_confirmation] = useState('');\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    authenticationService.registrationClient(name, password, email, password_confirmation);\r\n  }\r\n\r\n  return (\r\n    <div className={s.login_page_form}>\r\n      <h2>Registration</h2>\r\n      <form onSubmit={e => submitHandler(e)}>\r\n        <label>name\r\n          <input type=\"text\" onChange={e => setName(e.target.value)} />\r\n        </label>\r\n        <label>email\r\n          <input type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n        </label>\r\n        <label>password\r\n          <input type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        </label>\r\n        <label>confirm password\r\n          <input type=\"password\" onChange={e => setPassword_confirmation(e.target.value)} />\r\n        </label>\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n      {/* <Formik\r\n        initialValues={{\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n          password_confirmation: ''\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          username: Yup.string().required('Username is required'),\r\n          password: Yup.string().required('Password is required'),\r\n          email: Yup.string().required('Email is required'),\r\n          password_confirmation: Yup.string().required('Password is required')\r\n        })}\r\n        onSubmit={({ username, email, password, password_confirmation }, { setStatus, setSubmitting }) => {\r\n          setStatus();\r\n          authenticationService.registrationClient(username, password, email, password_confirmation)\r\n            .then(\r\n              user => {\r\n                console.log('user:',user);\r\n                const { from } =\r\n                  // this.props.location.state ||\r\n                  { from: { pathname: \"/\" } };\r\n                router.push(from);\r\n              },\r\n              error => {\r\n                console.log('error:',error);\r\n                setSubmitting(false);\r\n                setStatus(error);\r\n              }\r\n            );\r\n        }}\r\n        render={({ errors, status, touched, isSubmitting }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Field name=\"username\" type=\"text\" className={'form-control' + (errors.username && touched.username ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"username\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field name=\"email\" type=\"email\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_confirmation\">Confirm password</label>\r\n              <Field name=\"password_confirmation\" type=\"password\" className={'form-control' + (errors.password_confirmation && touched.password_confirmation ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"password_confirmation\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className={`btn ${s.submit_btn}`} disabled={isSubmitting}>Submit</button>\r\n              {isSubmitting &&\r\n                <div className=\"spinner-border spinner-border-sm text-primary ml-3\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              }\r\n            </div>\r\n            {status &&\r\n              <div className={'alert alert-danger'}>{JSON.stringify(status)}{console.log(status)}</div>\r\n            }\r\n          </Form>\r\n        )}\r\n      /> */}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
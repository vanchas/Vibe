{"ast":null,"code":"import { ADD_POST, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\"; // import { useRouter } from \"next/router\"\n\nexport function getAllProviderPost() {\n  return {\n    type: GET_ALL_POSTS\n  };\n}\n;\nexport const addProviderPost = post => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify(post)\n  });\n  console.log('response:', response); // ?????????????????????????????????????????????????????????????????????????\n\n  const promise = response.json();\n  console.log('promise:', promise);\n  promise.then(res => {\n    console.log(res);\n    return dispatch({\n      type: ADD_POST,\n      payload: post\n    });\n  }).catch(err => console.error('Error:', err));\n};\nexport function updateProviderPost(post) {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  };\n}\n;\nexport function removeProviderPost(id) {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  };\n}\n; // export function showAlert(text: string): any {\n//     return (dispatch: Function) => {\n//         dispatch({\n//             type: SHOW_ALERT,\n//             payload: text\n//         })\n//         setTimeout(() => {\n//             dispatch(hideAlert())\n//         }, 3000)\n//     }\n// }","map":null,"metadata":{},"sourceType":"module"}
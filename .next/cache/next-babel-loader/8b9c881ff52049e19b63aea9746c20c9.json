{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(userSagaWatcher),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(sagaWorker);\n\nimport fetch from 'isomorphic-unfetch';\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport { REQUEST_POSTS, FETCH_POST, ALL_POSTS } from '../actions/types';\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\nexport function userSagaWatcher() {\n  return _regeneratorRuntime.wrap(function userSagaWatcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(ALL_POSTS, sagaWorker);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction sagaWorker() {\n  var payload;\n  return _regeneratorRuntime.wrap(function sagaWorker$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put(showLoader());\n\n        case 3:\n          _context2.next = 5;\n          return call(fetchPosts);\n\n        case 5:\n          payload = _context2.sent;\n          _context2.next = 8;\n          return put({\n            type: ALL_POSTS,\n            payload: payload\n          });\n\n        case 8:\n          _context2.next = 10;\n          return put(hideLoader());\n\n        case 10:\n          _context2.next = 18;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 16;\n          return put(showAlert('Something going wrong'));\n\n        case 16:\n          _context2.next = 18;\n          return put(hideLoader());\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 12]]);\n}\n\nfunction fetchPosts() {\n  return _fetchPosts.apply(this, arguments);\n}\n\nfunction _fetchPosts() {\n  _fetchPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch('https://intim-vibe-api.padilo.pro/api/posts');\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return console.log(response.json());\n\n          case 5:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchPosts.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/sagas/userSagas.js"],"names":["userSagaWatcher","sagaWorker","fetch","takeEvery","put","call","REQUEST_POSTS","FETCH_POST","ALL_POSTS","showLoader","hideLoader","showAlert","fetchPosts","payload","type","response","console","log","json"],"mappings":";;;oDAKiBA,e;qDAMPC,U;;AAXV,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,kBAArD;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,oBAAlD;AAEA,OAAO,SAAUX,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAGL,iBAAMG,SAAS,CAACK,SAAD,EAAYP,UAAZ,CAAf;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMP,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAII,iBAAMG,GAAG,CAACK,UAAU,EAAX,CAAT;;AAJJ;AAAA;AAKoB,iBAAMJ,IAAI,CAACO,UAAD,CAAV;;AALpB;AAKUC,UAAAA,OALV;AAAA;AAMI,iBAAMT,GAAG,CAAC;AAAEU,YAAAA,IAAI,EAAEN,SAAR;AAAmBK,YAAAA,OAAO,EAAPA;AAAnB,WAAD,CAAT;;AANJ;AAAA;AAOI,iBAAMT,GAAG,CAACM,UAAU,EAAX,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMN,GAAG,CAACO,SAAS,CAAC,uBAAD,CAAV,CAAT;;AATJ;AAAA;AAUI,iBAAMP,GAAG,CAACM,UAAU,EAAX,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;SAceE,U;;;;;yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGyBV,KAAK,CAAC,6CAAD,CAH9B;;AAAA;AAGQa,YAAAA,QAHR;AAAA;AAAA,mBAIeC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,EAAZ,CAJf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { REQUEST_POSTS, FETCH_POST, ALL_POSTS } from '../actions/types';\r\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\r\n\r\nexport function* userSagaWatcher() {\r\n  // console.log('userSagaWatcher');\r\n  \r\n  yield takeEvery(ALL_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  // console.log('sagaWorker');\r\n\r\n  try {\r\n    yield put(showLoader());\r\n    const payload = yield call(fetchPosts);\r\n    yield put({ type: ALL_POSTS, payload });\r\n    yield put(hideLoader());\r\n  } catch (e) {\r\n    yield put(showAlert('Something going wrong'));\r\n    yield put(hideLoader());\r\n  }\r\n}\r\n\r\nasync function fetchPosts() {\r\n  // console.log('fetchPosts');\r\n\r\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts');\r\n  return await console.log(response.json());\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\Nav.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { authenticationService } from '../_services';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nvar NavComponent = function NavComponent(props) {\n  _s();\n\n  var _useState = useState({}),\n      currentUser = _useState[0],\n      setCurrentUser = _useState[1];\n\n  var _useState2 = useState(false),\n      isAdmin = _useState2[0],\n      setIsAdmin = _useState2[1];\n\n  var _useState3 = useState(false),\n      isOpen = _useState3[0],\n      setIsOpen = _useState3[1];\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  useEffect(function () {\n    setCurrentUser(props.currentUser);\n    setIsAdmin(props.currentUser === 'Admin' ? true : false);\n  }, []);\n\n  var logout = function logout() {\n    toggle();\n    authenticationService.logout();\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    color: \"light\",\n    light: true,\n    expand: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(NavbarBrand, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"EGOLIST\"), __jsx(NavbarToggler, {\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Home\")), __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Login\")), currentUser.role && __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, __jsx(NavLink, {\n    href: \"/user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, \"Profile\")), __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(NavLink, {\n    href: \"/messages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, \"Messages\")), isAdmin && __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, __jsx(NavLink, {\n    href: \"/admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Admin page\")), __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(NavLink, {\n    href: \"/login\",\n    onClick: logout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"Logout\")))))));\n};\n\n_s(NavComponent, \"rKa/9zroP5GAytD+/a0QCgl7l54=\");\n\n_c = NavComponent;\n\nNavComponent.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var Component, ctx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref.Component, ctx = _ref.ctx;\n            return _context.abrupt(\"return\", {});\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nNavComponent.propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  fixed: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\nexport default NavComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavComponent\");","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/Nav.jsx"],"names":["React","useState","useEffect","PropTypes","authenticationService","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","NavComponent","props","currentUser","setCurrentUser","isAdmin","setIsAdmin","isOpen","setIsOpen","toggle","logout","role","getInitialProps","Component","ctx","propTypes","light","bool","dark","fixed","string","color","expand","oneOfType","tag","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { authenticationService } from '../_services';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\n\r\nconst NavComponent = props => {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  useEffect(() => {\r\n    setCurrentUser(props.currentUser);\r\n    setIsAdmin(props.currentUser === 'Admin' ? true : false);\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    toggle();\r\n    authenticationService.logout();\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"lg\">\r\n        <NavbarBrand href=\"/\">EGOLIST</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/login\">Login</NavLink>\r\n            </NavItem>\r\n            {currentUser.role &&\r\n              <React.Fragment>\r\n                <NavItem>\r\n                  <NavLink href=\"/user\" >\r\n                    Profile\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"/messages\" >\r\n                    Messages\r\n                  </NavLink>\r\n                </NavItem>\r\n                {isAdmin &&\r\n                  <NavItem>\r\n                    <NavLink href=\"/admin\" >\r\n                      Admin page\r\n                  </NavLink>\r\n                  </NavItem>}\r\n                <NavItem>\r\n                  <NavLink href=\"/login\" onClick={logout} >\r\n                    Logout\r\n                </NavLink>\r\n                </NavItem>\r\n              </React.Fragment>}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavComponent.getInitialProps = async ({ Component, ctx }) => {\r\n  return {}\r\n}\r\n\r\n\r\nNavComponent.propTypes = {\r\n  light: PropTypes.bool,\r\n  dark: PropTypes.bool,\r\n  fixed: PropTypes.string,\r\n  color: PropTypes.string,\r\n  role: PropTypes.string,\r\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n}\r\n\r\nexport default NavComponent;\r\n"]},"metadata":{},"sourceType":"module"}
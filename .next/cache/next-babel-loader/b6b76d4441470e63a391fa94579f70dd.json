{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\login-page\\\\SignIn.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nimport Cookies from 'js-cookie';\nexport default function SignIn({\n  registeredPassword,\n  registeredEmail\n}) {\n  const router = useRouter();\n  return __jsx(\"div\", {\n    className: s.login_page_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Login\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().required('email is required'),\n      password: Yup.string().required('Password is required')\n    }),\n    onSubmit: ({\n      email,\n      password\n    }, {\n      setStatus,\n      setSubmitting\n    }) => {\n      setStatus();\n      authenticationService.login(email, password).then(data => {\n        console.log('data:', data);\n\n        if (data.token) {\n          Cookies.set(\"currentUser\", JSON.stringify(user), {\n            expires: 1\n          });\n\n          if (data.user.role === 'client') {\n            console.log('client');\n            router.push('/userCabinet');\n          } else if (data.user.role = 'individual') {\n            console.log('individual');\n            router.push('/modelCabinet');\n          } else if (data.user.role === 'admin') {\n            console.log('admin');\n            router.push('/admin');\n          } else if (data.user.role === 'agency') {\n            console.log('agency');\n            router.push('/modelCabinet');\n          }\n        }\n      }, error => {\n        setSubmitting(false);\n        setStatus(error);\n      }) // .then(() => window.location.reload(true))\n      .catch(err => console.error(\"Error:\", err));\n    },\n    render: ({\n      errors,\n      status,\n      touched,\n      isSubmitting\n    }) => __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Email\"), __jsx(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Password\"), __jsx(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: `btn ${s.submit_btn}`,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Submit\"), isSubmitting && __jsx(\"div\", {\n      className: \"spinner-border spinner-border-sm text-primary ml-3\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, \"Loading...\"))), status && __jsx(\"div\", {\n      className: 'alert alert-danger',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, status)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/login-page/SignIn.jsx"],"names":["React","s","Formik","Field","Form","ErrorMessage","Yup","useRouter","authenticationService","Cookies","SignIn","registeredPassword","registeredEmail","router","login_page_form","email","password","object","shape","string","required","setStatus","setSubmitting","login","then","data","console","log","token","set","JSON","stringify","user","expires","role","push","error","catch","err","errors","status","touched","isSubmitting","submit_btn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './login.module.scss';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useRouter } from 'next/router';\r\nimport { authenticationService } from '../../_services';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function SignIn({ registeredPassword, registeredEmail }) {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className={s.login_page_form}>\r\n      <h2>Login</h2>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: ''\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().required('email is required'),\r\n          password: Yup.string().required('Password is required')\r\n        })}\r\n        onSubmit={({ email, password }, { setStatus, setSubmitting }) => {\r\n          setStatus();\r\n          authenticationService.login(email, password)\r\n            .then(\r\n              data => {\r\n                console.log('data:', data);\r\n\r\n                if (data.token) {\r\n                  Cookies.set(\"currentUser\", JSON.stringify(user), { expires: 1 });\r\n                  if (data.user.role === 'client') {\r\n                    console.log('client');\r\n                    router.push('/userCabinet');\r\n                  } else if (data.user.role = 'individual') {\r\n                    console.log('individual');\r\n                    router.push('/modelCabinet');\r\n                  } else if (data.user.role === 'admin') {\r\n                    console.log('admin');\r\n                    router.push('/admin');\r\n                  } else if (data.user.role === 'agency') {\r\n                    console.log('agency');\r\n                    router.push('/modelCabinet');\r\n                  }\r\n                }\r\n              },\r\n              error => {\r\n                setSubmitting(false);\r\n                setStatus(error);\r\n              }\r\n            )\r\n            // .then(() => window.location.reload(true))\r\n            .catch((err) => console.error(\"Error:\", err));\r\n        }}\r\n        render={({ errors, status, touched, isSubmitting }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className={`btn ${s.submit_btn}`} disabled={isSubmitting}>Submit</button>\r\n              {isSubmitting &&\r\n                <div className=\"spinner-border spinner-border-sm text-primary ml-3\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              }\r\n            </div>\r\n            {status &&\r\n              <div className={'alert alert-danger'}>{status}</div>\r\n            }\r\n          </Form>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
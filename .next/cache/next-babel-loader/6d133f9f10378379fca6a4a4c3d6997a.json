{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport { handleResponse } from \"../_helpers\";\nvar currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nvar target = \"https://intim-vibe-api.padilo.pro/api\";\nexport var authenticationService = {\n  login: login,\n  logout: logout,\n  registrationAdmin: registrationAdmin,\n  registrationClient: registrationClient,\n  registrationProvider: registrationProvider,\n  registrationAgency: registrationAgency,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nfunction login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(target, \"/login\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }).then(handleResponse).then(function (user) {\n              if (user.token) {\n                Cookies.set(\"currentUser\", JSON.stringify(user), {\n                  expires: 1\n                });\n                currentUserSubject = user;\n                return user;\n              }\n            }) // .then(() => window.location.reload(true))\n            [\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction registrationClient(_x3, _x4, _x5, _x6) {\n  return _registrationClient.apply(this, arguments);\n}\n\nfunction _registrationClient() {\n  _registrationClient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, password, email, password_confirmation) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"https://intim-vibe-api.padilo.pro/api/client/register\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation\n              })\n            }).then(handleResponse).then(function (client) {\n              Cookies.set(\"currentUser\", JSON.stringify(client));\n              currentUserSubject = client;\n              return client;\n            }).then(function () {\n              login(email, password);\n            }) // .then(() => Router.push(\"/userCabinet\"))\n            [\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _registrationClient.apply(this, arguments);\n}\n\nfunction registrationAdmin(_x7, _x8, _x9, _x10) {\n  return _registrationAdmin.apply(this, arguments);\n}\n\nfunction _registrationAdmin() {\n  _registrationAdmin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name, password, email, password_confirmation) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(target, \"/admin/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation\n              })\n            }).then(handleResponse).then(function (admin) {\n              Cookies.set(\"currentUser\", JSON.stringify(admin));\n              currentUserSubject = admin;\n              return admin;\n            }).then(function () {\n              login(email, password);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _registrationAdmin.apply(this, arguments);\n}\n\nfunction registrationProvider(_x11, _x12, _x13, _x14, _x15) {\n  return _registrationProvider.apply(this, arguments);\n}\n\nfunction _registrationProvider() {\n  _registrationProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(name, password, email, password_confirmation, phone) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(target, \"/individual/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation,\n                phone: phone\n              })\n            }).then(handleResponse).then(function (provider) {\n              Cookies.set(\"currentUser\", JSON.stringify(provider.user));\n              currentUserSubject = provider;\n              return provider;\n            }).then(function () {\n              login(email, password);\n            }) // .then(() => Router.push(\"/modelCabinet\"))\n            [\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _registrationProvider.apply(this, arguments);\n}\n\nfunction registrationAgency(_x16, _x17, _x18, _x19, _x20, _x21) {\n  return _registrationAgency.apply(this, arguments);\n}\n\nfunction _registrationAgency() {\n  _registrationAgency = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name, password, email, password_confirmation, phone, agency_name) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(target, \"/agency/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation,\n                phone: phone,\n                agency_name: agency_name\n              })\n            });\n\n          case 2:\n            response = _context5.sent;\n            promise = response.json();\n            promise.then(function (provider) {\n              Cookies.set(\"currentUser\", JSON.stringify(provider));\n              currentUserSubject = provider;\n              return provider;\n            }).then(function () {\n              return login(email, password);\n            }) // .then(() => Router.push(\"/modelCabinet\"))\n            [\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _registrationAgency.apply(this, arguments);\n}\n\nfunction logout() {\n  return _logout.apply(this, arguments);\n}\n\nfunction _logout() {\n  _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context6.next = 3;\n            return fetch(\"\".concat(target, \"/logout\"), {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\"\n              }\n            }) // .then(() => Router.push('/'))\n            .then(function () {\n              return window.location.reload(true);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 3:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _logout.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","handleResponse","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","registrationAgency","currentUser","currentUserValue","email","password","method","headers","body","JSON","stringify","then","user","token","set","expires","err","console","error","name","password_confirmation","client","admin","phone","provider","agency_name","response","promise","json","remove","window","location","reload"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { handleResponse } from \"../_helpers\";\r\nimport Router from \"next/router\";\r\n\r\nlet currentUserSubject = Cookies.getJSON(\"currentUser\")\r\n  ? Cookies.getJSON(\"currentUser\")\r\n  : {};\r\n\r\nconst target = `https://intim-vibe-api.padilo.pro/api`;\r\n\r\nexport const authenticationService = {\r\n  login,\r\n  logout,\r\n  registrationAdmin,\r\n  registrationClient,\r\n  registrationProvider,\r\n  registrationAgency,\r\n  currentUser: currentUserSubject,\r\n  get currentUserValue() {\r\n    return currentUserSubject;\r\n  },\r\n};\r\n\r\nasync function login(email: string, password: string): Promise<any> {\r\n  return await fetch(`${target}/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      if (user.token) {\r\n        Cookies.set(\"currentUser\", JSON.stringify(user), { expires: 1 });\r\n        currentUserSubject = user;\r\n        return user;\r\n      }\r\n    })\r\n    // .then(() => window.location.reload(true))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationClient(\r\n  name: string,\r\n  password: string,\r\n  email: string,\r\n  password_confirmation: string\r\n): Promise<any> {\r\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", 'Accept': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((client) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(client));\r\n      currentUserSubject = client;\r\n      return client;\r\n    })\r\n    .then(() => {\r\n      login(email, password);\r\n    })\r\n    // .then(() => Router.push(\"/userCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationAdmin(\r\n  name: string,\r\n  password: string,\r\n  email: string,\r\n  password_confirmation: string\r\n): Promise<any> {\r\n  return await fetch(`${target}/admin/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", 'Accept': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((admin) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(admin));\r\n      currentUserSubject = admin;\r\n      return admin;\r\n    }).then(() => {\r\n      login(email, password);\r\n    })\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationProvider(\r\n  name: string,\r\n  password: string,\r\n  email: string,\r\n  password_confirmation: string,\r\n  phone: string | number\r\n): Promise<any> {\r\n  return await fetch(`${target}/individual/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", 'Accept': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n      phone\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .then((provider) => {\r\n      Cookies.set(\"currentUser\", JSON.stringify(provider.user));\r\n      currentUserSubject = provider;\r\n      return provider;\r\n    }).then(() => {\r\n      login(email, password);\r\n    })\r\n    // .then(() => Router.push(\"/modelCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function registrationAgency(\r\n  name: string,\r\n  password: string,\r\n  email: string,\r\n  password_confirmation: string,\r\n  phone: string | number,\r\n  agency_name: string\r\n): Promise<any> {\r\n  const response = await fetch(`${target}/agency/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", 'Accept': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation,\r\n      phone,\r\n      agency_name\r\n    }),\r\n  });\r\n  const promise = response.json();\r\n  promise.then(provider => {\r\n    Cookies.set(\"currentUser\", JSON.stringify(provider));\r\n    currentUserSubject = provider;\r\n    return provider;\r\n  }).then(() => login(email, password))\r\n    // .then(() => Router.push(\"/modelCabinet\"))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\nasync function logout(): Promise<any> {\r\n  Cookies.remove(\"currentUser\");\r\n  return await fetch(`${target}/logout`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  })\r\n    // .then(() => Router.push('/'))\r\n    .then(() => window.location.reload(true))\r\n    .catch((err) => console.error(\"Error:\", err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS, GET_FAVORITES } from \"../actions/types\";\nvar initialState = {\n  postComments: [],\n  loading: false,\n  alert: null,\n  categories: [],\n  posts: [],\n  newPosts: [],\n  states: [],\n  cities: [],\n  supportTasks: [],\n  affiliation: [],\n  availability: [],\n  available_to: [],\n  ethnicity: [],\n  eyes: [],\n  hair: [],\n  pagesNumber: 0,\n  favorites: []\n};\nexport var appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case HIDE_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case SHOW_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: action.payload\n      });\n\n    case HIDE_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: null\n      });\n\n    case GET_ALL_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case FILTER_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case GET_PAGES_NUMBER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagesNumber: action.payload\n      });\n\n    case GET_NEW_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newPosts: action.payload\n      });\n\n    case GET_LOCAITONS_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        states: action.payload\n      });\n\n    case GET_CITIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cities: action.payload\n      });\n\n    case GET_FAVORITES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favorites: action.payload\n      });\n\n    case CREATE_SUPPORT_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        supportTasks: [].concat(_toConsumableArray(state.supportTasks), [action.payload])\n      });\n\n    case GET_ALL_USER_TASKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        supportTasks: action.payload\n      });\n\n    case GET_POST_COMMENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postComments: action.payload\n      });\n\n    case CREATE_POST_COMMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postComments: [].concat(_toConsumableArray(state.postComments), [action.payload])\n      });\n\n    case GET_APP_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: action.payload.categories,\n        affiliation: action.payload.affiliation,\n        availability: action.payload.availability,\n        available_to: action.payload.available_to,\n        ethnicity: action.payload.ethnicity,\n        eyes: action.payload.eyes,\n        hair: action.payload.hair\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/reducers/appReducer.ts"],"names":["SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","GET_ALL_POSTS","GET_LOCAITONS_INFO","GET_CITIES","CREATE_SUPPORT_TASK","GET_ALL_USER_TASKS","GET_APP_INFO","GET_NEW_POSTS","GET_PAGES_NUMBER","GET_POST_COMMENTS","CREATE_POST_COMMENT","FILTER_POSTS","GET_FAVORITES","initialState","postComments","loading","alert","categories","posts","newPosts","states","cities","supportTasks","affiliation","availability","available_to","ethnicity","eyes","hair","pagesNumber","favorites","appReducer","state","action","type","payload"],"mappings":"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","sourcesContent":["import { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS, GET_FAVORITES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  postComments: [],\r\n  loading: false,\r\n  alert: null,\r\n  categories: [],\r\n  posts: [],\r\n  newPosts: [],\r\n  states: [],\r\n  cities: [],\r\n  supportTasks: [],\r\n  affiliation: [],\r\n  availability: [],\r\n  available_to: [],\r\n  ethnicity: [],\r\n  eyes: [],\r\n  hair: [],\r\n  pagesNumber: 0,\r\n  favorites: []\r\n};\r\n\r\nexport const appReducer = (state: any = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true }\r\n\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false }\r\n\r\n    case SHOW_ALERT:\r\n      return { ...state, alert: action.payload }\r\n\r\n    case HIDE_ALERT:\r\n      return { ...state, alert: null }\r\n\r\n    case GET_ALL_POSTS:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case FILTER_POSTS:\r\n      return { ...state, posts: action.payload }\r\n\r\n    case GET_PAGES_NUMBER:\r\n      return { ...state, pagesNumber: action.payload }\r\n\r\n    case GET_NEW_POSTS:\r\n      return { ...state, newPosts: action.payload }\r\n\r\n    case GET_LOCAITONS_INFO:\r\n      return { ...state, states: action.payload }\r\n\r\n    case GET_CITIES:\r\n      return { ...state, cities: action.payload }\r\n\r\n    case GET_FAVORITES:\r\n      return { ...state, favorites: action.payload }\r\n\r\n    case CREATE_SUPPORT_TASK:\r\n      return { ...state, supportTasks: [...state.supportTasks, action.payload] }\r\n\r\n    case GET_ALL_USER_TASKS:\r\n      return { ...state, supportTasks: action.payload }\r\n\r\n    case GET_POST_COMMENTS:\r\n      return { ...state, postComments: action.payload }\r\n\r\n    case CREATE_POST_COMMENT:\r\n      return { ...state, postComments: [...state.postComments, action.payload] }\r\n\r\n    case GET_APP_INFO:\r\n      return {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n        affiliation: action.payload.affiliation,\r\n        availability: action.payload.availability,\r\n        available_to: action.payload.available_to,\r\n        ethnicity: action.payload.ethnicity,\r\n        eyes: action.payload.eyes,\r\n        hair: action.payload.hair\r\n      }\r\n\r\n    default: return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from \"react\";\nimport s from \"./cabinet.module.scss\";\nimport $ from 'jquery';\nexport default function ModelCabinetControl(props) {\n  var _useState = useState('ads'),\n      activeBtn = _useState[0],\n      setActiveBtn = _useState[1];\n\n  var activateBtn = function activateBtn(e) {\n    var _iterator = _createForOfIteratorHelper($('.cabinet_control_btn')),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var btn = _step.value;\n\n        if ($(btn).not($(e.target)).hasClass('cabinet_control_btn')) {\n          $(btn).removeClass('active_btn_blue');\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    $(e.target).addClass('active_btn_blue');\n  };\n\n  return __jsx(\"div\", {\n    className: \"py-4\"\n  }, __jsx(\"div\", {\n    className: s.cab_control_name\n  }, __jsx(\"span\", null, \"USERNAME\"), __jsx(\"span\", null, \"EXIT\")), __jsx(\"div\", {\n    className: s.cab_control_title\n  }, __jsx(\"h5\", {\n    className: \"text-white\"\n  }, \"BUSINESS CABINET\")), __jsx(\"div\", {\n    className: s.cab_control_buttons\n  }, __jsx(\"span\", {\n    className: \"cabinet_control_btn active_btn_blue\",\n    onClick: function onClick(e) {\n      props.setComponent(\"ads\");\n      activateBtn(e);\n    }\n  }, \"My ads\"), __jsx(\"span\", {\n    className: \"cabinet_control_btn\",\n    onClick: function onClick(e) {\n      props.setComponent(\"reviews\");\n      activateBtn(e);\n    }\n  }, \"Reviews\"), __jsx(\"span\", {\n    className: \"cabinet_control_btn\",\n    onClick: function onClick(e) {\n      props.setComponent(\"favorites\");\n      activateBtn(e);\n    }\n  }, \"Favorites\"), __jsx(\"span\", {\n    className: \"cabinet_control_btn\",\n    onClick: function onClick(e) {\n      props.setComponent(\"prices\");\n      activateBtn(e);\n    }\n  }, \"Prices\"), __jsx(\"span\", {\n    className: \"cabinet_control_btn\",\n    onClick: function onClick(e) {\n      props.setComponent(\"balance\");\n      activateBtn(e);\n    }\n  }, \"Balance\"), __jsx(\"span\", {\n    className: \"cabinet_control_btn\",\n    onClick: function onClick(e) {\n      props.setComponent(\"customize\");\n      activateBtn(e);\n    }\n  }, \"Customize\"), __jsx(\"span\", {\n    className: \"cabinet_control_btn\",\n    onClick: function onClick(e) {\n      props.setComponent(\"support\");\n      activateBtn(e);\n    }\n  }, \"Technical support\")));\n}","map":null,"metadata":{},"sourceType":"module"}
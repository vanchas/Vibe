{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_POST, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nexport function getAllProviderPost() {\n  return {\n    type: GET_ALL_POSTS\n  };\n}\n;\nexport function addProviderPost(_x) {\n  return _addProviderPost.apply(this, arguments);\n}\n\nfunction _addProviderPost() {\n  _addProviderPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(post) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n              },\n              body: JSON.stringify({\n                post: post\n              })\n            }).then(function (res) {\n              return console.log(res);\n            })[\"catch\"](function (err) {\n              return console.log('Error:', err);\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", {\n              type: ADD_POST\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _addProviderPost.apply(this, arguments);\n}\n\n;\nexport function updateProviderPost(post) {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  };\n}\n;\nexport function removeProviderPost(id) {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  };\n}\n; // export function showAlert(text: string): any {\n//     return (dispatch: Function) => {\n//         dispatch({\n//             type: SHOW_ALERT,\n//             payload: text\n//         })\n//         setTimeout(() => {\n//             dispatch(hideAlert())\n//         }, 3000)\n//     }\n// }","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/providerActions.ts"],"names":["ADD_POST","UPDATE_POST","REMOVE_POST","GET_ALL_POSTS","fetch","getAllProviderPost","type","addProviderPost","post","method","headers","body","JSON","stringify","then","res","console","log","err","updateProviderPost","payload","removeProviderPost","id"],"mappings":";;AAAA,SAASA,QAAT,EAAiCC,WAAjC,EAA8CC,WAA9C,EAA2DC,aAA3D,QAAgF,SAAhF;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,SAASC,kBAAT,GAAmC;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD;AAAA;AACD,gBAAsBI,eAAtB;AAAA;AAAA;;;8EAAO,iBAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCJ,KAAK,CAAC,oDAAD,EAAuD;AAChEK,cAAAA,MAAM,EAAE,MADwD;AAEhEC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,+CAA+B;AAFxB,eAFuD;AAMhEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEL,gBAAAA,IAAI,EAAJA;AAAF,eAAf;AAN0D,aAAvD,CAAL,CAQHM,IARG,CAQE,UAAAC,GAAG;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,aARL,WASG,UAAAG,GAAG;AAAA,qBAAIF,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,GAAtB,CAAJ;AAAA,aATN,CADD;;AAAA;AAAA,6CAYE;AACLZ,cAAAA,IAAI,EAAEN;AADD,aAZF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeN;AACD,OAAO,SAASmB,kBAAT,CAA4BX,IAA5B,EAAqD;AAC1D,SAAO;AACLF,IAAAA,IAAI,EAAEL,WADD;AAELmB,IAAAA,OAAO,EAAEZ;AAFJ,GAAP;AAID;AAAA;AACD,OAAO,SAASa,kBAAT,CAA4BC,EAA5B,EAAsD;AAC3D,SAAO;AACLhB,IAAAA,IAAI,EAAEJ,WADD;AAELkB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AAAA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ADD_POST, ProviderPost, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\"\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nexport function getAllProviderPost(): any {\r\n  return {\r\n    type: GET_ALL_POSTS\r\n  }\r\n};\r\nexport async function addProviderPost(post: any): Promise<any> {\r\n  await fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    },\r\n    body: JSON.stringify({ post })\r\n  })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log('Error:', err))\r\n\r\n  return {\r\n    type: ADD_POST\r\n  }\r\n};\r\nexport function updateProviderPost(post: ProviderPost): any {\r\n  return {\r\n    type: UPDATE_POST,\r\n    payload: post\r\n  }\r\n};\r\nexport function removeProviderPost(id: number | string): any {\r\n  return {\r\n    type: REMOVE_POST,\r\n    payload: id\r\n  }\r\n};\r\n\r\n// export function showAlert(text: string): any {\r\n//     return (dispatch: Function) => {\r\n//         dispatch({\r\n//             type: SHOW_ALERT,\r\n//             payload: text\r\n//         })\r\n//         setTimeout(() => {\r\n//             dispatch(hideAlert())\r\n//         }, 3000)\r\n//     }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}
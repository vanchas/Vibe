{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/dev-2/WebstormProjects/vibe/src/components/login-page/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nexport default function SignIn(_ref) {\n  _s();\n\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  return __jsx(\"div\", {\n    className: s.login_page_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Login\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().required('email is required'),\n      password: Yup.string().required('Password is required')\n    }),\n    onSubmit: function onSubmit(_ref2, _ref3) {\n      var email = _ref2.email,\n          password = _ref2.password;\n      var setStatus = _ref3.setStatus,\n          setSubmitting = _ref3.setSubmitting;\n      setStatus();\n      authenticationService.login(email, password).then(function (data) {\n        setTimeout(function () {\n          setSubmitting(false);\n        }, 3000);\n      }, function (error) {\n        setSubmitting(false);\n        setStatus(error);\n      })[\"catch\"](function (err) {\n        return console.error(\"Error:\", err);\n      });\n    },\n    render: function render(_ref4) {\n      var errors = _ref4.errors,\n          status = _ref4.status,\n          touched = _ref4.touched,\n          isSubmitting = _ref4.isSubmitting;\n      return __jsx(Form, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, \"Email\"), __jsx(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, \"Password\"), __jsx(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn \".concat(s.submit_btn),\n        disabled: isSubmitting,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, \"Submit\"), isSubmitting && __jsx(\"div\", {\n        className: \"spinner-border spinner-border-sm text-primary ml-3\",\n        role: \"status\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"sr-only\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"Loading...\"))), status && __jsx(\"div\", {\n        className: 'alert alert-danger',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, JSON.stringify(status)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(SignIn, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/components/login-page/SignIn.jsx"],"names":["React","s","Formik","Field","Form","ErrorMessage","Yup","useRouter","authenticationService","SignIn","router","login_page_form","email","password","object","shape","string","required","setStatus","setSubmitting","login","then","data","setTimeout","error","err","console","errors","status","touched","isSubmitting","submit_btn","JSON","stringify"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AAEA,eAAe,SAASC,MAAT,OAAsB;AAAA;;AAAA;;AAAA;;AACnC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACU,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,gBAAgB,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,MAAAA,KAAK,EAAEN,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD4B;AAEnCJ,MAAAA,QAAQ,EAAEP,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAFyB,KAAnB,CALpB;AASE,IAAA,QAAQ,EAAE,gCAAuD;AAAA,UAApDL,KAAoD,SAApDA,KAAoD;AAAA,UAA7CC,QAA6C,SAA7CA,QAA6C;AAAA,UAA/BK,SAA+B,SAA/BA,SAA+B;AAAA,UAApBC,aAAoB,SAApBA,aAAoB;AAC/DD,MAAAA,SAAS;AACTV,MAAAA,qBAAqB,CAACY,KAAtB,CAA4BR,KAA5B,EAAmCC,QAAnC,EACGQ,IADH,CAEI,UAAAC,IAAI,EAAI;AACNC,QAAAA,UAAU,CAAC,YAAM;AACbJ,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH,SAFS,EAEP,IAFO,CAAV;AAGD,OANL,EAOI,UAAAK,KAAK,EAAI;AACPL,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,QAAAA,SAAS,CAACM,KAAD,CAAT;AACD,OAVL,WAYS,UAACC,GAAD;AAAA,eAASC,OAAO,CAACF,KAAR,CAAc,QAAd,EAAwBC,GAAxB,CAAT;AAAA,OAZT;AAaD,KAxBH;AAyBE,IAAA,MAAM,EAAE;AAAA,UAAGE,MAAH,SAAGA,MAAH;AAAA,UAAWC,MAAX,SAAWA,MAAX;AAAA,UAAmBC,OAAnB,SAAmBA,OAAnB;AAAA,UAA4BC,YAA5B,SAA4BA,YAA5B;AAAA,aACN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,SAAS,EAAE,kBAAkBH,MAAM,CAACf,KAAP,IAAgBiB,OAAO,CAACjB,KAAxB,GAAgC,aAAhC,GAAgD,EAAlE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAC,KAArC;AAA2C,QAAA,SAAS,EAAC,kBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,SAAS,EAAE,kBAAkBe,MAAM,CAACd,QAAP,IAAmBgB,OAAO,CAAChB,QAA3B,GAAsC,aAAtC,GAAsD,EAAxE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAC,KAAxC;AAA8C,QAAA,SAAS,EAAC,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CANF,EAWE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,gBAASZ,CAAC,CAAC8B,UAAX,CAA/B;AAAwD,QAAA,QAAQ,EAAED,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGA,YAAY,IACX;AAAK,QAAA,SAAS,EAAC,oDAAf;AAAoE,QAAA,IAAI,EAAC,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAHJ,CAXF,EAmBGF,MAAM,IACL;AAAK,QAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCI,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAvC,CApBJ,CADM;AAAA,KAzBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAwDD;;GA3DuBnB,M;UACPF,S;;;KADOE,M","sourcesContent":["import React from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\n\nexport default function SignIn({  }) {\n  const router = useRouter();\n\n  return (\n    <div className={s.login_page_form}>\n      <h2>Login</h2>\n      <Formik\n        initialValues={{\n          email: '',\n          password: ''\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().required('email is required'),\n          password: Yup.string().required('Password is required')\n        })}\n        onSubmit={({ email, password }, { setStatus, setSubmitting }) => {\n          setStatus();\n          authenticationService.login(email, password)\n            .then(\n              data => {\n                setTimeout(() => {\n                    setSubmitting(false)\n                }, 3000)\n              },\n              error => {\n                setSubmitting(false)\n                setStatus(error)\n              }\n            )\n            .catch((err) => console.error(\"Error:\", err));\n        }}\n        render={({ errors, status, touched, isSubmitting }) => (\n          <Form>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className={`btn ${s.submit_btn}`} disabled={isSubmitting}>Submit</button>\n              {isSubmitting &&\n                <div className=\"spinner-border spinner-border-sm text-primary ml-3\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              }\n            </div>\n            {status &&\n              <div className={'alert alert-danger'}>{JSON.stringify(status)}</div>\n            }\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
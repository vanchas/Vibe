{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport store from \"../redux/store\";\nimport { showAlert, showSuccess } from \"../redux/actions/actions\";\nvar currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nvar target = \"https://intim-vibe-api.padilo.pro/api\";\nexport var authenticationService = {\n  login: login,\n  logout: logout,\n  registrationAdmin: registrationAdmin,\n  registrationClient: registrationClient,\n  registrationProvider: registrationProvider,\n  registrationAgency: registrationAgency,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nfunction login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context.next = 3;\n            return fetch(\"\".concat(target, \"/login\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            });\n\n          case 3:\n            response = _context.sent;\n            promise = response.json();\n\n            if (!(response.status === 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", promise.then(function (data) {\n              Cookies.set(\"currentUser\", JSON.stringify(data), {\n                expires: 1\n              });\n              currentUserSubject = data;\n              return data;\n            }).then(function () {\n              return Router.push('/');\n            }).then(function () {\n              return window.location.reload();\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context.abrupt(\"return\", promise.then(function (data) {\n              return store.dispatch(showAlert(data.message));\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction registrationClient(_x3, _x4, _x5, _x6) {\n  return _registrationClient.apply(this, arguments);\n}\n\nfunction _registrationClient() {\n  _registrationClient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, password, email, password_confirmation) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context2.next = 3;\n            return fetch(\"https://intim-vibe-api.padilo.pro/api/client/register\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation\n              })\n            });\n\n          case 3:\n            response = _context2.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context2.abrupt(\"return\", promise.then(function (data) {\n              return store.dispatch(showAlert(data.message));\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _registrationClient.apply(this, arguments);\n}\n\nfunction registrationAdmin(_x7, _x8, _x9, _x10) {\n  return _registrationAdmin.apply(this, arguments);\n}\n\nfunction _registrationAdmin() {\n  _registrationAdmin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name, password, email, password_confirmation) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context3.next = 3;\n            return fetch(\"\".concat(target, \"/admin/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation\n              })\n            });\n\n          case 3:\n            response = _context3.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context3.next = 9;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context3.abrupt(\"return\", promise.then(function (data) {\n              return store.dispatch(showAlert(data.message));\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _registrationAdmin.apply(this, arguments);\n}\n\nfunction registrationProvider(_x11, _x12, _x13, _x14, _x15) {\n  return _registrationProvider.apply(this, arguments);\n}\n\nfunction _registrationProvider() {\n  _registrationProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(name, password, email, password_confirmation, phone) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context4.next = 3;\n            return fetch(\"\".concat(target, \"/individual/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation,\n                phone: phone\n              })\n            });\n\n          case 3:\n            response = _context4.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context4.next = 9;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context4.abrupt(\"return\", promise.then(function (data) {\n              return store.dispatch(showAlert(data.message));\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _registrationProvider.apply(this, arguments);\n}\n\nfunction registrationAgency(_x16, _x17, _x18, _x19, _x20, _x21) {\n  return _registrationAgency.apply(this, arguments);\n}\n\nfunction _registrationAgency() {\n  _registrationAgency = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name, password, email, password_confirmation, phone, agency_name) {\n    var response, promise;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context5.next = 3;\n            return fetch(\"\".concat(target, \"/agency/register\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                password: password,\n                email: email,\n                password_confirmation: password_confirmation,\n                phone: phone,\n                agency_name: agency_name\n              })\n            });\n\n          case 3:\n            response = _context5.sent;\n            promise = response.json();\n\n            if (!(response.status === 201)) {\n              _context5.next = 9;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", promise.then(function (data) {\n              store.dispatch(showSuccess(data.message));\n              setTimeout(function () {\n                return window.location.reload();\n              }, 3000);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 9:\n            return _context5.abrupt(\"return\", promise.then(function (data) {\n              return store.dispatch(showAlert(data.message));\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            }));\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _registrationAgency.apply(this, arguments);\n}\n\nfunction logout() {\n  return _logout.apply(this, arguments);\n}\n\nfunction _logout() {\n  _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            Cookies.remove(\"currentUser\");\n            _context6.next = 3;\n            return fetch(\"\".concat(target, \"/logout\"), {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\"\n              }\n            }).then(function () {\n              return Router.push('/login');\n            }).then(function () {\n              return window.location.reload(true);\n            })[\"catch\"](function (err) {\n              return console.error(\"Error:\", err);\n            });\n\n          case 3:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _logout.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}
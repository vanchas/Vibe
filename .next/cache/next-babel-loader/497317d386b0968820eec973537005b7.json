{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\pages\\\\_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport './styles/app.scss';\nimport Layout from '../components/layout/Layout';\nimport withRedux from \"next-redux-wrapper\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from '../redux/store';\nimport { configureFakeBackend } from '../_helpers';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nclass CustomApp extends App {\n  static async getInitialProps(props) {\n    const pageProps = props.Component.getInitialProps ? await props.Component.getInitialProps(props.ctx) : {};\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  componentDidMount() {\n    configureFakeBackend();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store;\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n}); //withRedux wrapper that passes the store to the App Component\n\nexport default wrapper.withRedux(makeStore)(CustomApp);","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/pages/_app.jsx"],"names":["App","Provider","React","Layout","withRedux","store","configureFakeBackend","CustomApp","getInitialProps","props","pageProps","Component","ctx","componentDidMount","render","makeStore","wrapper","createWrapper","debug"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,oBAAT,QAAqC,aAArC;AAEA,OAAO,gCAAP;AACA,OAAO,sCAAP;;AAGA,MAAMC,SAAN,SAAwBP,GAAxB,CAA4B;AAC1B,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,SAAS,GAAGD,KAAK,CAACE,SAAN,CAAgBH,eAAhB,GAAkC,MAAMC,KAAK,CAACE,SAAN,CAAgBH,eAAhB,CAAgCC,KAAK,CAACG,GAAtC,CAAxC,GAAqF,EAAvG;AACA,WAAO;AACLF,MAAAA,SAAS,EAAEA;AADN,KAAP;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,oBAAoB;AACrB;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaD,MAAAA,SAAb;AAAwBL,MAAAA;AAAxB,QAAkC,KAAKI,KAA7C;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAtByB,C,CAyB5B;;;AACA,MAAMK,SAAS,GAAG,MAAMV,KAAxB;;AAEA,OAAO,MAAMW,OAAO,GAAGC,aAAa,CAACF,SAAD,EAAY;AAACG,EAAAA,KAAK,EAAE;AAAR,CAAZ,CAA7B,C,CAEP;;AACA,eAAeF,OAAO,CAACZ,SAAR,CAAkBW,SAAlB,EAA6BR,SAA7B,CAAf","sourcesContent":["import App from 'next/app';\r\nimport { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport './styles/app.scss';\r\nimport Layout from '../components/layout/Layout';\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from '../redux/store';\r\nimport { configureFakeBackend } from '../_helpers';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nclass CustomApp extends App {\r\n  static async getInitialProps(props) {\r\n    const pageProps = props.Component.getInitialProps ? await props.Component.getInitialProps(props.ctx) : {};\r\n    return {\r\n      pageProps: pageProps\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    configureFakeBackend();\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n//makeStore function that returns a new store for every request\r\nconst makeStore = () => store;\r\n\r\nexport const wrapper = createWrapper(makeStore, {debug: true});\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default wrapper.withRedux(makeStore)(CustomApp);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
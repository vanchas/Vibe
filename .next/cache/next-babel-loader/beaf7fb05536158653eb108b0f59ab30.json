{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\pages\\\\_app.jsx\";\nvar __jsx = React.createElement;\nimport App from 'next/app'; // import { Provider } from 'react-redux';\n\nimport React from 'react';\nimport './styles/app.scss'; // import Layout from '../components/layout/Layout';\n\nimport withRedux from \"next-redux-wrapper\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from '../redux/store';\nimport { configureFakeBackend } from '../_helpers';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { ReduxContainer } from '../components/redux-container/ReduxContainer';\n\nclass CustomApp extends App {\n  static async getInitialProps(props) {\n    const pageProps = props.Component.getInitialProps ? await props.Component.getInitialProps(props.ctx) : {};\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  componentDidMount() {\n    configureFakeBackend();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(ReduxContainer, {\n      Component: Component,\n      pageProps: pageProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }) // <Provider store={store}>\n    //   <Layout>\n    //     <Component {...pageProps} />\n    //   </Layout>\n    // </Provider>\n    ;\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(CustomApp);","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/pages/_app.jsx"],"names":["App","React","withRedux","store","configureFakeBackend","ReduxContainer","CustomApp","getInitialProps","props","pageProps","Component","ctx","componentDidMount","render","makeStore"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,oBAAT,QAAqC,aAArC;AAEA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,SAASC,cAAT,QAA+B,8CAA/B;;AAGA,MAAMC,SAAN,SAAwBN,GAAxB,CAA4B;AAC1B,eAAaO,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,SAAS,GAAGD,KAAK,CAACE,SAAN,CAAgBH,eAAhB,GAAkC,MAAMC,KAAK,CAACE,SAAN,CAAgBH,eAAhB,CAAgCC,KAAK,CAACG,GAAtC,CAAxC,GAAqF,EAAvG;AACA,WAAO;AACLF,MAAAA,SAAS,EAAEA;AADN,KAAP;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,oBAAoB;AACrB;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaD,MAAAA,SAAb;AAAwBN,MAAAA;AAAxB,QAAkC,KAAKK,KAA7C;AAEA,WACE,MAAC,cAAD;AAAgB,MAAA,SAAS,EAAEE,SAA3B;AAAsC,MAAA,SAAS,EAAED,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAEE;AACA;AACA;AACA;AACA;AANF;AAQD;;AAvByB,C,CA0B5B;;;AACA,MAAMK,SAAS,GAAG,MAAMX,KAAxB,C,CAEA;;;AACA,eAAeD,SAAS,CAACY,SAAD,CAAT,CAAqBR,SAArB,CAAf","sourcesContent":["import App from 'next/app';\r\n// import { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport './styles/app.scss';\r\n// import Layout from '../components/layout/Layout';\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from '../redux/store';\r\nimport { configureFakeBackend } from '../_helpers';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { ReduxContainer } from '../components/redux-container/ReduxContainer';\r\n\r\n\r\nclass CustomApp extends App {\r\n  static async getInitialProps(props) {\r\n    const pageProps = props.Component.getInitialProps ? await props.Component.getInitialProps(props.ctx) : {};\r\n    return {\r\n      pageProps: pageProps\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    configureFakeBackend();\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n\r\n    return (\r\n      <ReduxContainer Component={Component} pageProps={pageProps} />\r\n      // <Provider store={store}>\r\n      //   <Layout>\r\n      //     <Component {...pageProps} />\r\n      //   </Layout>\r\n      // </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n//makeStore function that returns a new store for every request\r\nconst makeStore = () => store;\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default withRedux(makeStore)(CustomApp);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
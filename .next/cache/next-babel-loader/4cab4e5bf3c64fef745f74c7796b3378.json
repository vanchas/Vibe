{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\header\\\\Nav.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport s from './header.module.scss';\nimport PropTypes from 'prop-types';\nimport { authenticationService } from '../../_services';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nvar NavComponent = function NavComponent(props) {\n  _s();\n\n  var _useState = useState(),\n      activeLink = _useState[0],\n      setActiveLink = _useState[1];\n\n  var _useState2 = useState(false),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      role = _useState3[0],\n      setRole = _useState3[1];\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  useEffect(function () {\n    if (authenticationService.currentUserValue.user) {\n      setRole(authenticationService.currentUserValue.user.role);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      maxWidth: '1260px',\n      margin: '0 auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    color: \"dark\",\n    dark: true,\n    expand: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(NavbarToggler, {\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, role === 'individual' ? __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }, __jsx(NavLink, {\n    href: \"/modelCabinet\",\n    onClick: function onClick() {\n      return setActiveLink('model cabinet');\n    },\n    className: activeLink === 'model cabinet' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Model Cabinet\")) : null, role === 'client' ? __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }\n  }, __jsx(NavLink, {\n    href: \"/userCabinet\",\n    onClick: function onClick() {\n      return setActiveLink('user cabinet');\n    },\n    className: activeLink === 'user cabinet' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"User Cabinet\")) : null, role === 'individual' ? __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }\n  }, __jsx(NavLink, {\n    href: \"/addPost\",\n    onClick: function onClick() {\n      return setActiveLink('add post');\n    },\n    className: activeLink === 'add post' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Add Post\")) : null, __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/login\",\n    onClick: function onClick() {\n      return setActiveLink('login');\n    },\n    className: activeLink === 'login' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Login\")), role === 'admin' || role === 'individual' || role === 'client' ? __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 81\n    }\n  }, __jsx(NavLink, {\n    onClick: function onClick() {\n      return authenticationService.logout();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Logout\")) : null, role === 'admin' ? __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, __jsx(NavLink, {\n    href: \"/admin\",\n    onClick: function onClick() {\n      return setActiveLink('admin');\n    },\n    className: activeLink === 'admin' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Admin\")) : null, __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/test\",\n    onClick: function onClick() {\n      return setActiveLink('test');\n    },\n    className: activeLink === 'test' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"TEST\"))))));\n};\n\n_s(NavComponent, \"qYJLCT8QOcH+dE6G4ROmMiKWp6c=\");\n\n_c = NavComponent;\n\nNavComponent.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var Component, ctx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref.Component, ctx = _ref.ctx;\n            return _context.abrupt(\"return\", {});\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nNavComponent.propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  fixed: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\nexport default NavComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavComponent\");","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/header/Nav.jsx"],"names":["React","useState","useEffect","s","PropTypes","authenticationService","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","NavComponent","props","activeLink","setActiveLink","isOpen","setIsOpen","role","setRole","toggle","currentUserValue","user","maxWidth","margin","logout","getInitialProps","Component","ctx","propTypes","light","bool","dark","fixed","string","color","expand","oneOfType","tag","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport s from './header.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { authenticationService } from '../../_services';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\n\r\nconst NavComponent = props => {\r\n  const [activeLink, setActiveLink] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [role, setRole] = useState('');\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  useEffect(() => {\r\n    if (authenticationService.currentUserValue.user) {\r\n      setRole(authenticationService.currentUserValue.user.role);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      maxWidth: '1260px', margin: '0 auto'\r\n    }}>\r\n      <Navbar color=\"dark\" dark expand=\"lg\">\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {role === 'individual' ? <NavItem>\r\n              <NavLink href=\"/modelCabinet\" onClick={() => setActiveLink('model cabinet')} className={activeLink === 'model cabinet' ? s.activeLink : null}>Model Cabinet</NavLink>\r\n            </NavItem> : null}\r\n            {role === 'client' ? <NavItem>\r\n              <NavLink href=\"/userCabinet\" onClick={() => setActiveLink('user cabinet')} className={activeLink === 'user cabinet' ? s.activeLink : null}>User Cabinet</NavLink>\r\n            </NavItem> : null}\r\n            {role === 'individual' ? <NavItem>\r\n              <NavLink href=\"/addPost\" onClick={() => setActiveLink('add post')} className={activeLink === 'add post' ? s.activeLink : null}>Add Post</NavLink>\r\n            </NavItem> : null}\r\n            <NavItem>\r\n              <NavLink href=\"/login\" onClick={() => setActiveLink('login')} className={activeLink === 'login' ? s.activeLink : null}>Login</NavLink>\r\n            </NavItem>\r\n            {(role === 'admin' || role === 'individual' || role === 'client') ? <NavItem>\r\n              <NavLink onClick={() => authenticationService.logout()} >Logout</NavLink>\r\n            </NavItem> : null}\r\n            {role === 'admin' ? <NavItem>\r\n              <NavLink href=\"/admin\" onClick={() => setActiveLink('admin')} className={activeLink === 'admin' ? s.activeLink : null}>Admin</NavLink>\r\n            </NavItem> : null}\r\n            <NavItem>\r\n              <NavLink href=\"/test\" onClick={() => setActiveLink('test')} className={activeLink === 'test' ? s.activeLink : null}>TEST</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavComponent.getInitialProps = async ({ Component, ctx }) => {\r\n  return {}\r\n}\r\n\r\n\r\nNavComponent.propTypes = {\r\n  light: PropTypes.bool,\r\n  dark: PropTypes.bool,\r\n  fixed: PropTypes.string,\r\n  color: PropTypes.string,\r\n  role: PropTypes.string,\r\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n}\r\n\r\nexport default NavComponent;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\header\\\\Nav.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nvar NavComponent = function NavComponent(props) {\n  _s();\n\n  var _useState = useState(),\n      activeLink = _useState[0],\n      setActiveLink = _useState[1];\n\n  var _useState2 = useState(false),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    color: \"\",\n    dark: true,\n    expand: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(NavbarToggler, {\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/modelCabinet\",\n    onClick: function onClick() {\n      return setActiveLink('model cabinet');\n    },\n    className: activeLink === 'model cabinet' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, \"Model Cabinet\")), __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/userCabinet\",\n    onClick: function onClick() {\n      return setActiveLink('user cabinet');\n    },\n    className: activeLink === 'user cabinet' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"User Cabinet\")), __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    href: \"/addPost\",\n    onClick: function onClick() {\n      return setActiveLink('add post');\n    },\n    className: activeLink === 'add post' ? s.activeLink : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Add Post\"))))));\n};\n\n_s(NavComponent, \"KdPuiNbdFDBGoHR6Nf1vykry4X8=\");\n\n_c = NavComponent;\n\nNavComponent.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var Component, ctx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref.Component, ctx = _ref.ctx;\n            return _context.abrupt(\"return\", {});\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nNavComponent.propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  fixed: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\nexport default NavComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavComponent\");","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/header/Nav.jsx"],"names":["React","useState","useEffect","PropTypes","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","NavComponent","props","activeLink","setActiveLink","isOpen","setIsOpen","toggle","s","getInitialProps","Component","ctx","propTypes","light","bool","dark","fixed","string","color","role","expand","oneOfType","tag","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\n\r\nconst NavComponent = props => {\r\n  const [activeLink, setActiveLink] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"\" dark expand=\"lg\">\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/modelCabinet\" onClick={() => setActiveLink('model cabinet')} className={activeLink === 'model cabinet' ? s.activeLink : null}>Model Cabinet</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/userCabinet\" onClick={() => setActiveLink('user cabinet')} className={activeLink === 'user cabinet' ? s.activeLink : null}>User Cabinet</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/addPost\" onClick={() => setActiveLink('add post')} className={activeLink === 'add post' ? s.activeLink : null}>Add Post</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavComponent.getInitialProps = async ({ Component, ctx }) => {\r\n  return {}\r\n}\r\n\r\n\r\nNavComponent.propTypes = {\r\n  light: PropTypes.bool,\r\n  dark: PropTypes.bool,\r\n  fixed: PropTypes.string,\r\n  color: PropTypes.string,\r\n  role: PropTypes.string,\r\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n}\r\n\r\nexport default NavComponent;\r\n"]},"metadata":{},"sourceType":"module"}
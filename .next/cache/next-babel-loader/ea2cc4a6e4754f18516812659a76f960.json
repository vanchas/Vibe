{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../_services';\nexport var PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      roles = _ref.roles,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"roles\"]);\n\n  return __jsx(Route, _extends({}, rest, {\n    render: function render(props) {\n      var currentUser = authenticationService.currentUserValue;\n\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return __jsx(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          }\n        });\n      } // check if route is restricted by role\n\n\n      if (roles && roles.indexOf(currentUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return __jsx(Redirect, {\n          to: {\n            pathname: '/'\n          }\n        });\n      } // authorised so return component\n\n\n      return __jsx(Component, props);\n    }\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}
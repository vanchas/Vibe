{"ast":null,"code":"import { ADD_POST, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\"; // import { useRouter } from \"next/router\"\n\nexport function getAllProviderPost() {\n  return {\n    type: GET_ALL_POSTS\n  };\n}\n;\nexport const addProviderPost = post => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const formData = new FormData();\n  formData.append('gender', post.gender);\n  formData.append('age', post.age);\n  formData.append('ethnicity_id', post.ethnicity_id);\n  formData.append('hair_id', post.hair_id);\n  formData.append('eye_id', post.eye_id);\n  formData.append('height', post.height);\n  formData.append('affiliation_id', post.affiliation_id);\n  formData.append('availability_ids', post.availability_ids);\n  formData.append('avaliableto_ids', post.avaliableto_ids);\n  formData.append('number', post.number);\n  formData.append('email', post.email);\n  formData.append('model_name', post.model_name);\n  formData.append('photo', post.photo);\n  formData.append('video_link', post.video_link);\n  formData.append('about', post.about);\n  formData.append('summary', post.summary);\n  formData.append('category_id', post.category_id);\n  formData.append('state_id', post.state_id);\n  formData.append('city_id', post.city_id);\n  formData.append('second_name', post.second_name);\n  formData.append('account_name', post.account_name);\n  formData.append('photo_vertical', post.photo_vertical);\n  formData.append('photo_horizontal', post.photo_horizontal);\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify(formData)\n  });\n  console.log('response:', response); // ?????????????????????????????????????????????????????????????????????????\n\n  const promise = response.json();\n  console.log('promise:', promise);\n  promise.then(res => {\n    console.log(res);\n    return dispatch({\n      type: ADD_POST,\n      payload: post\n    });\n  }).catch(err => console.error('Error:', err));\n};\nexport function updateProviderPost(post) {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  };\n}\n;\nexport function removeProviderPost(id) {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  };\n}\n; // export function showAlert(text: string): any {\n//     return (dispatch: Function) => {\n//         dispatch({\n//             type: SHOW_ALERT,\n//             payload: text\n//         })\n//         setTimeout(() => {\n//             dispatch(hideAlert())\n//         }, 3000)\n//     }\n// }","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/providerActions.ts"],"names":["ADD_POST","UPDATE_POST","REMOVE_POST","GET_ALL_POSTS","fetch","authenticationService","getAllProviderPost","type","addProviderPost","post","dispatch","user","currentUserValue","formData","FormData","append","gender","age","ethnicity_id","hair_id","eye_id","height","affiliation_id","availability_ids","avaliableto_ids","number","email","model_name","photo","video_link","about","summary","category_id","state_id","city_id","second_name","account_name","photo_vertical","photo_horizontal","response","method","headers","token_type","token","body","JSON","stringify","console","log","promise","json","then","res","payload","catch","err","error","updateProviderPost","removeProviderPost","id"],"mappings":"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","sourcesContent":["import { ADD_POST, ProviderPost, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\"\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { authenticationService } from \"../../_services\";\r\n// import { useRouter } from \"next/router\"\r\n\r\nexport function getAllProviderPost(): any {\r\n  return {\r\n    type: GET_ALL_POSTS\r\n  }\r\n};\r\n\r\nexport const addProviderPost = (post: any) => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const formData = new FormData();\r\n  \r\n  formData.append('gender', post.gender);\r\n  formData.append('age', post.age);\r\n  formData.append('ethnicity_id', post.ethnicity_id);\r\n  formData.append('hair_id', post.hair_id);\r\n  formData.append('eye_id', post.eye_id);\r\n  formData.append('height', post.height);\r\n  formData.append('affiliation_id', post.affiliation_id);\r\n  formData.append('availability_ids', post.availability_ids);\r\n  formData.append('avaliableto_ids', post.avaliableto_ids);\r\n  formData.append('number', post.number);\r\n  formData.append('email', post.email);\r\n  formData.append('model_name', post.model_name);\r\n  formData.append('photo', post.photo);\r\n  formData.append('video_link', post.video_link);\r\n  formData.append('about', post.about);\r\n  formData.append('summary', post.summary);\r\n  formData.append('category_id', post.category_id);\r\n  formData.append('state_id', post.state_id);\r\n  formData.append('city_id', post.city_id);\r\n  formData.append('second_name', post.second_name);\r\n  formData.append('account_name', post.account_name);\r\n  formData.append('photo_vertical', post.photo_vertical);\r\n  formData.append('photo_horizontal', post.photo_horizontal);\r\n\r\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    },\r\n    body: JSON.stringify(formData)\r\n  });\r\n  console.log('response:', response);\r\n  // ?????????????????????????????????????????????????????????????????????????\r\n  const promise = response.json();\r\n\r\n  console.log('promise:', promise);\r\n  promise.then(res => {\r\n    console.log(res);\r\n    return dispatch({ type: ADD_POST, payload: post });\r\n  }).catch(err => console.error('Error:', err))\r\n};\r\nexport function updateProviderPost(post: ProviderPost): any {\r\n  return {\r\n    type: UPDATE_POST,\r\n    payload: post\r\n  }\r\n};\r\nexport function removeProviderPost(id: number | string): any {\r\n  return {\r\n    type: REMOVE_POST,\r\n    payload: id\r\n  }\r\n};\r\n\r\n// export function showAlert(text: string): any {\r\n//     return (dispatch: Function) => {\r\n//         dispatch({\r\n//             type: SHOW_ALERT,\r\n//             payload: text\r\n//         })\r\n//         setTimeout(() => {\r\n//             dispatch(hideAlert())\r\n//         }, 3000)\r\n//     }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}
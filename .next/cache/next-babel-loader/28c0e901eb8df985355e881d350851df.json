{"ast":null,"code":"import { GET_ALL_SUPPORT_TASKS, DELETE_SUPPORT_TASK } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\";\nexport const getAllSupportTasks = () => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_SUPPORT_TASKS,\n      payload: res\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const editSupportTasks = data => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/edit/${data.id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      subject: data.subject,\n      message: data.message,\n      answer: data.answer\n    })\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_SUPPORT_TASKS,\n      payload: res\n    });\n  });\n};\nexport const deleteSupportTask = id => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: DELETE_SUPPORT_TASK,\n      payload: res\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/adminActions.ts"],"names":["GET_ALL_SUPPORT_TASKS","DELETE_SUPPORT_TASK","fetch","authenticationService","getAllSupportTasks","dispatch","user","currentUserValue","response","method","headers","token_type","token","promise","json","then","res","type","payload","catch","err","console","error","editSupportTasks","data","id","body","JSON","stringify","subject","message","answer","deleteSupportTask"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,mBAAhC,QAA2D,SAA3D;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAyB;AAC/D,QAAMC,IAAI,GAAGH,qBAAqB,CAACI,gBAAnC;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAE,qDAAF,EAAwD;AAClFO,IAAAA,MAAM,EAAE,KAD0E;AAElFC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,qCAA+B,GAFxB;AAGP,uBAAkB,GAAEJ,IAAI,CAACK,UAAW,IAAGL,IAAI,CAACM,KAAM;AAH3C;AAFyE,GAAxD,CAA5B;AAQA,QAAMC,OAAO,GAAGL,QAAQ,CAACM,IAAT,EAAhB;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAaC,GAAG,IAAI;AAClB,WAAOX,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEjB,qBAAR;AAA+BkB,MAAAA,OAAO,EAAEF;AAAxC,KAAD,CAAf;AACD,GAFD,EAEGG,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBF,GAAzB,CAFhB;AAGD,CAdM;AAeP,OAAO,MAAMG,gBAAgB,GAAIC,IAAD,IAAe,MAAOnB,QAAP,IAAyB;AACtE,QAAMC,IAAI,GAAGH,qBAAqB,CAACI,gBAAnC;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAE,4DAA2DsB,IAAI,CAACC,EAAG,EAArE,EAAwE;AAClGhB,IAAAA,MAAM,EAAE,MAD0F;AAElGC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,qCAA+B,GAFxB;AAGP,uBAAkB,GAAEJ,IAAI,CAACK,UAAW,IAAGL,IAAI,CAACM,KAAM;AAH3C,KAFyF;AAOlGc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,OAAO,EAAEL,IAAI,CAACK,OADK;AAEnBC,MAAAA,OAAO,EAAEN,IAAI,CAACM,OAFK;AAGnBC,MAAAA,MAAM,EAAEP,IAAI,CAACO;AAHM,KAAf;AAP4F,GAAxE,CAA5B;AAaA,QAAMlB,OAAO,GAAGL,QAAQ,CAACM,IAAT,EAAhB;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAaC,GAAG,IAAI;AAClB,WAAOX,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEjB,qBAAR;AAA+BkB,MAAAA,OAAO,EAAEF;AAAxC,KAAD,CAAf;AACD,GAFD;AAGD,CAnBM;AAoBP,OAAO,MAAMgB,iBAAiB,GAAIP,EAAD,IAAyB,MAAOpB,QAAP,IAAyB;AACjF,QAAMC,IAAI,GAAGH,qBAAqB,CAACI,gBAAnC;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAE,uDAAsDuB,EAAG,EAA3D,EAA8D;AACxFhB,IAAAA,MAAM,EAAE,KADgF;AAExFC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,qCAA+B,GAFxB;AAGP,uBAAkB,GAAEJ,IAAI,CAACK,UAAW,IAAGL,IAAI,CAACM,KAAM;AAH3C;AAF+E,GAA9D,CAA5B;AAQA,QAAMC,OAAO,GAAGL,QAAQ,CAACM,IAAT,EAAhB;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAaC,GAAG,IAAI;AAClB,WAAOX,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEhB,mBAAR;AAA6BiB,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAf;AACD,GAFD;AAGD,CAdM","sourcesContent":["import { GET_ALL_SUPPORT_TASKS, DELETE_SUPPORT_TASK } from \"./types\"\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { authenticationService } from \"../../_services\"\r\n\r\nexport const getAllSupportTasks = () => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    }\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: GET_ALL_SUPPORT_TASKS, payload: res })\r\n  }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const editSupportTasks = (data: any) => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/edit/${data.id}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    },\r\n    body: JSON.stringify({\r\n      subject: data.subject,\r\n      message: data.message,\r\n      answer: data.answer\r\n    })\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: GET_ALL_SUPPORT_TASKS, payload: res })\r\n  });\r\n}\r\nexport const deleteSupportTask = (id: number | string) => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/${id}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    }\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: DELETE_SUPPORT_TASK, payload: res })\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { TEST_CREATE_POST, SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, TEST_REQUEST_POSTS, GET_CATEGORIES, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\"; // T E S T \n\nexport function createPost(post) {\n  return {\n    type: TEST_CREATE_POST,\n    payload: post\n  };\n}\n;\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER\n  };\n}\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER\n  };\n}\nexport function showAlert(text) {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: text\n    });\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 3000);\n  };\n}\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT\n  };\n}\nexport function fetchPosts() {\n  return {\n    type: TEST_REQUEST_POSTS\n  };\n}\n;\nexport const getCategories = () => async dispatch => {\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/categories');\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getAllPosts = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getLocationsInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location`);\n  const promise = response.json();\n  promise.then(res => {\n    console.log(res);\n    return dispatch({\n      type: GET_LOCAITONS_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getAppInfo = () => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/info`);\n  const promise = response.json();\n  promise.then(res => {\n    console.log(res);\n    return dispatch({\n      type: GET_APP_INFO,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const getCities = stateId => async dispatch => {\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/cities/${stateId}`);\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_CITIES,\n      payload: res\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const createSupportTask = task => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify(task)\n  });\n  const promise = response.json();\n  promise.then(res => console.log(res)).catch(err => console.error('Error: ', err));\n  return dispatch({\n    type: CREATE_SUPPORT_TASK,\n    payload: task\n  });\n};\nexport const getAllUsersTasks = () => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/${user.user.id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_USER_TASKS,\n      payload: res\n    });\n  }).catch(err => console.error('Error: ', err));\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/actions.ts"],"names":["TEST_CREATE_POST","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","TEST_REQUEST_POSTS","GET_CATEGORIES","GET_ALL_POSTS","GET_LOCAITONS_INFO","GET_CITIES","CREATE_SUPPORT_TASK","GET_ALL_USER_TASKS","GET_APP_INFO","fetch","authenticationService","createPost","post","type","payload","showLoader","hideLoader","showAlert","text","dispatch","setTimeout","hideAlert","fetchPosts","getCategories","response","promise","json","then","res","data","catch","err","console","error","getAllPosts","getLocationsInfo","log","getAppInfo","getCities","stateId","createSupportTask","task","user","currentUserValue","method","headers","token_type","token","body","JSON","stringify","getAllUsersTasks","id"],"mappings":"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","sourcesContent":["import { TEST_CREATE_POST, SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, TEST_REQUEST_POSTS, GET_CATEGORIES, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO } from \"./types\"\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { authenticationService } from \"../../_services\";\r\n\r\n// T E S T \r\nexport function createPost(post: any): any {\r\n    return {\r\n        type: TEST_CREATE_POST,\r\n        payload: post\r\n    }\r\n};\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOADER\r\n    }\r\n}\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER\r\n    }\r\n}\r\nexport function showAlert(text: string): any {\r\n    return (dispatch: Function) => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: text\r\n        })\r\n        setTimeout(() => {\r\n            dispatch(hideAlert())\r\n        }, 3000)\r\n    }\r\n}\r\nexport function hideAlert() {\r\n    return {\r\n        type: HIDE_ALERT\r\n    }\r\n}\r\nexport function fetchPosts(): any {\r\n    return {\r\n        type: TEST_REQUEST_POSTS\r\n    }\r\n};\r\nexport const getCategories = () => async (dispatch: any) => {\r\n    const response = await fetch('https://intim-vibe-api.padilo.pro/api/categories');\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_CATEGORIES, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getAllPosts = () => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/posts`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_ALL_POSTS, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getLocationsInfo = () => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/location`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        console.log(res);\r\n        \r\n        return dispatch({ type: GET_LOCAITONS_INFO, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getAppInfo = () => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/info`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        console.log(res);\r\n        \r\n        return dispatch({ type: GET_APP_INFO, payload: res.data });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const getCities = (stateId: number | string) => async (dispatch: any) => {\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/cities/${stateId}`);\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_CITIES, payload: res });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const createSupportTask = (task: any) => async (dispatch: any) => {\r\n    const user = authenticationService.currentUserValue;\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': `${user.token_type} ${user.token}`\r\n        },\r\n        body: JSON.stringify(task)\r\n    });\r\n    const promise = response.json();\r\n    promise.then(res => console.log(res))\r\n        .catch(err => console.error('Error: ', err));\r\n    return dispatch({ type: CREATE_SUPPORT_TASK, payload: task })\r\n}\r\nexport const getAllUsersTasks = () => async (dispatch: any) => {\r\n    const user = await authenticationService.currentUserValue;\r\n    const response = await fetch(`https://intim-vibe-api.padilo.pro/api/support/${user.user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': `${user.token_type} ${user.token}`\r\n        }\r\n    });\r\n    const promise = response.json();\r\n    promise.then(res => {\r\n        return dispatch({ type: GET_ALL_USER_TASKS, payload: res });\r\n    }).catch(err => console.error('Error: ', err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
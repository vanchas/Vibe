{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\pages\\\\modelProfile.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Categories from \"../components/home-page/Categories\";\nimport Location from \"../components/home-page/Location\";\nimport Search from \"../components/home-page/Search\";\nimport ProfilesControl from \"../components/model-profile/ProfilesControl\";\nimport ModelProfileCard from \"../components/model-profile/ModelProfileCard\";\nimport { getAllPosts, getLocationsInfo, selectPostsPage, getPostComments, createPostComment, filterPosts } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\n\nfunction ModelProfile(props) {\n  const router = useRouter();\n  useEffect(() => {\n    props.getAllPosts();\n    props.getLocationsInfo();\n    props.getPostComments(router.query.id);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, __jsx(Location, {\n    states: props.states,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }), __jsx(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }), __jsx(Categories, {\n    categories: props.categories,\n    newPosts: props.newPosts,\n    filterPosts: props.filterPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }), __jsx(ProfilesControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }), __jsx(ModelProfileCard, {\n    posts: props.posts,\n    postComments: props.postComments,\n    createPostComment: props.createPostComment,\n    getAllPosts: props.getAllPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    categories: state.app.categories,\n    posts: state.app.posts,\n    states: state.app.states,\n    pagesNumber: state.app.pagesNumber,\n    postComments: state.app.postComments,\n    newPosts: state.app.newPosts\n  });\n};\n\nconst mapDispatchToPops = {\n  getAllPosts,\n  getLocationsInfo,\n  selectPostsPage,\n  getPostComments,\n  createPostComment,\n  filterPosts\n};\nexport default connect(mapStateToProps, mapDispatchToPops)(ModelProfile);","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/pages/modelProfile.jsx"],"names":["React","useEffect","useState","Categories","Location","Search","ProfilesControl","ModelProfileCard","getAllPosts","getLocationsInfo","selectPostsPage","getPostComments","createPostComment","filterPosts","connect","useRouter","ModelProfile","props","router","query","id","states","categories","newPosts","posts","postComments","mapStateToProps","state","app","pagesNumber","mapDispatchToPops"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,SACCC,WADD,EAECC,gBAFD,EAGCC,eAHD,EAICC,eAJD,EAKCC,iBALD,EAMCC,WAND,QAOO,0BAPP;AAQA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACfgB,IAAAA,KAAK,CAACT,WAAN;AACAS,IAAAA,KAAK,CAACR,gBAAN;AACAQ,IAAAA,KAAK,CAACN,eAAN,CAAsBO,MAAM,CAACC,KAAP,CAAaC,EAAnC;AACA,GAJQ,EAIN,EAJM,CAAT;AAMA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEH,KAAK,CAACI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,UAAD;AACC,IAAA,UAAU,EAAEJ,KAAK,CAACK,UADnB;AAEC,IAAA,QAAQ,EAAEL,KAAK,CAACM,QAFjB;AAGC,IAAA,WAAW,EAAEN,KAAK,CAACJ,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAQC,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,EASC,MAAC,gBAAD;AACC,IAAA,KAAK,EAAEI,KAAK,CAACO,KADd;AAEC,IAAA,YAAY,EAAEP,KAAK,CAACQ,YAFrB;AAGC,IAAA,iBAAiB,EAAER,KAAK,CAACL,iBAH1B;AAIC,IAAA,WAAW,EAAEK,KAAK,CAACT,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD;AAkBA;;AAED,MAAMkB,eAAe,GAAIC,KAAD,IAAW;AAClC,yCACIA,KADJ;AAECL,IAAAA,UAAU,EAAEK,KAAK,CAACC,GAAN,CAAUN,UAFvB;AAGCE,IAAAA,KAAK,EAAEG,KAAK,CAACC,GAAN,CAAUJ,KAHlB;AAICH,IAAAA,MAAM,EAAEM,KAAK,CAACC,GAAN,CAAUP,MAJnB;AAKCQ,IAAAA,WAAW,EAAEF,KAAK,CAACC,GAAN,CAAUC,WALxB;AAMCJ,IAAAA,YAAY,EAAEE,KAAK,CAACC,GAAN,CAAUH,YANzB;AAOCF,IAAAA,QAAQ,EAAEI,KAAK,CAACC,GAAN,CAAUL;AAPrB;AASA,CAVD;;AAYA,MAAMO,iBAAiB,GAAG;AACzBtB,EAAAA,WADyB;AAEzBC,EAAAA,gBAFyB;AAGzBC,EAAAA,eAHyB;AAIzBC,EAAAA,eAJyB;AAKzBC,EAAAA,iBALyB;AAMzBC,EAAAA;AANyB,CAA1B;AASA,eAAeC,OAAO,CAACY,eAAD,EAAkBI,iBAAlB,CAAP,CAA4Cd,YAA5C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Categories from \"../components/home-page/Categories\";\r\nimport Location from \"../components/home-page/Location\";\r\nimport Search from \"../components/home-page/Search\";\r\nimport ProfilesControl from \"../components/model-profile/ProfilesControl\";\r\nimport ModelProfileCard from \"../components/model-profile/ModelProfileCard\";\r\nimport {\r\n\tgetAllPosts,\r\n\tgetLocationsInfo,\r\n\tselectPostsPage,\r\n\tgetPostComments,\r\n\tcreatePostComment,\r\n\tfilterPosts\r\n} from \"../redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nfunction ModelProfile(props) {\r\n\tconst router = useRouter();\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.getAllPosts();\r\n\t\tprops.getLocationsInfo();\r\n\t\tprops.getPostComments(router.query.id);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Location states={props.states} />\r\n\t\t\t<Search />\r\n\t\t\t<Categories\r\n\t\t\t\tcategories={props.categories}\r\n\t\t\t\tnewPosts={props.newPosts}\r\n\t\t\t\tfilterPosts={props.filterPosts}\r\n\t\t\t/>\r\n\t\t\t<ProfilesControl />\r\n\t\t\t<ModelProfileCard\r\n\t\t\t\tposts={props.posts}\r\n\t\t\t\tpostComments={props.postComments}\r\n\t\t\t\tcreatePostComment={props.createPostComment}\r\n\t\t\t\tgetAllPosts={props.getAllPosts}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\t...state,\r\n\t\tcategories: state.app.categories,\r\n\t\tposts: state.app.posts,\r\n\t\tstates: state.app.states,\r\n\t\tpagesNumber: state.app.pagesNumber,\r\n\t\tpostComments: state.app.postComments,\r\n\t\tnewPosts: state.app.newPosts\r\n\t};\r\n};\r\n\r\nconst mapDispatchToPops = {\r\n\tgetAllPosts,\r\n\tgetLocationsInfo,\r\n\tselectPostsPage,\r\n\tgetPostComments,\r\n\tcreatePostComment,\r\n\tfilterPosts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToPops)(ModelProfile);\r\n"]},"metadata":{},"sourceType":"module"}
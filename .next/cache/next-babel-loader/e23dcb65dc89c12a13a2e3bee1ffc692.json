{"ast":null,"code":"import 'isomorphic-unfetch';\nimport { API_KEY } from './config';\nconst BASE_URI = 'https://api.themoviedb.org/3/movie';\nconst IMAGE_BASE_URI = 'https://image.tmdb.org/t/p';\n\nconst fetchWithErrorHandling = async url => {\n  try {\n    return await (await fetch(url)).json();\n  } catch (err) {\n    return {\n      error: true\n    };\n  }\n};\n\nexport const getMovieDetails = async id => fetchWithErrorHandling(`${BASE_URI}/${id}?api_key=${API_KEY}&language=en-US&append_to_response=credits`);\nexport const getUpcomingMovies = async () => fetchWithErrorHandling(`${BASE_URI}/upcoming?api_key=${API_KEY}&language=en-US&page=1`);\nexport const getImageSrc = (path, size) => `${IMAGE_BASE_URI}/${size ? `w${size}` : 'original'}${path}`;","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/utils/apiCalls.js"],"names":["API_KEY","BASE_URI","IMAGE_BASE_URI","fetchWithErrorHandling","url","fetch","json","err","error","getMovieDetails","id","getUpcomingMovies","getImageSrc","path","size"],"mappings":"AAAA,OAAO,oBAAP;AAEA,SAASA,OAAT,QAAwB,UAAxB;AAEA,MAAMC,QAAQ,GAAG,oCAAjB;AACA,MAAMC,cAAc,GAAG,4BAAvB;;AAEA,MAAMC,sBAAsB,GAAG,MAAMC,GAAN,IAAa;AAC1C,MAAI;AACF,WAAO,MAAM,CAAC,MAAMC,KAAK,CAACD,GAAD,CAAZ,EAAmBE,IAAnB,EAAb;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD;AACF,CAND;;AAQA,OAAO,MAAMC,eAAe,GAAG,MAAMC,EAAN,IAC7BP,sBAAsB,CACnB,GAAEF,QAAS,IAAGS,EAAG,YAAWV,OAAQ,4CADjB,CADjB;AAKP,OAAO,MAAMW,iBAAiB,GAAG,YAC/BR,sBAAsB,CACnB,GAAEF,QAAS,qBAAoBD,OAAQ,wBADpB,CADjB;AAKP,OAAO,MAAMY,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,KACxB,GAAEZ,cAAe,IAAGY,IAAI,GAAI,IAAGA,IAAK,EAAZ,GAAgB,UAAW,GAAED,IAAK,EADtD","sourcesContent":["import 'isomorphic-unfetch';\r\n\r\nimport { API_KEY } from './config';\r\n\r\nconst BASE_URI = 'https://api.themoviedb.org/3/movie';\r\nconst IMAGE_BASE_URI = 'https://image.tmdb.org/t/p';\r\n\r\nconst fetchWithErrorHandling = async url => {\r\n  try {\r\n    return await (await fetch(url)).json();\r\n  } catch (err) {\r\n    return { error: true };\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async id =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URI}/${id}?api_key=${API_KEY}&language=en-US&append_to_response=credits`\r\n  );\r\n\r\nexport const getUpcomingMovies = async () =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URI}/upcoming?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\nexport const getImageSrc = (path, size) =>\r\n  `${IMAGE_BASE_URI}/${size ? `w${size}` : 'original'}${path}`;\r\n"]},"metadata":{},"sourceType":"module"}
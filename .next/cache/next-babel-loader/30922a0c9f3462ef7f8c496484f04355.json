{"ast":null,"code":"import Cookies from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\nimport { handleResponse } from '../_helpers';\nlet currentUserSubject = Cookies.getJSON('currentUser') ? Cookies.getJSON('currentUser') : {};\nconst target = `https://intim-vibe-api.padilo.pro/api`;\nexport const authenticationService = {\n  login,\n  logout,\n  registrationAdmin,\n  registrationClient,\n  confirmEmail,\n  confirmSMS,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nasync function login(email, password) {\n  return await fetch(`${target}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleResponse).then(user => {\n    // if (user.token) {\n    Cookies.set('currentUser', JSON.stringify(user));\n    currentUserSubject = user;\n    return user; // }\n  }).catch(err => console.error('Error:', err)); // .then(() => window.location.reload(true));\n}\n\nasync function registrationClient(name, password, email, password_confirmation) {\n  // https://intim-vibe-api.padilo.pro/api/client/register\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(client => {\n    console.log('client:', client);\n    Cookies.set('currentUser', JSON.stringify(client));\n    currentUserSubject = client;\n    return client;\n  }).catch(err => console.error('Error:', err));\n}\n\nasync function registrationAdmin(name, password, email, password_confirmation) {\n  return await fetch(`${target}/admin/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(admin => {\n    Cookies.set('currentUser', JSON.stringify(admin));\n    currentUserSubject = admin;\n    return admin;\n  }).catch(err => console.error('Error:', err));\n}\n\nfunction logout() {\n  Cookies.remove('currentUser');\n  let requestHeaders = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': 'http://localhost:3000',\n    // Домен с которого идут запросы\n    'Access-Control-Allow-Credentials': true,\n    'Access-Control-Allow-Headers': \"заголовки которые можно отправить на удалённый сервер\",\n    // Разрешённые методы\n    'Access-Control-Allow-Methods': 'POST, GET, PUT, DELETE, OPTIONS'\n  };\n  return fetch(`${target}/logout`, {\n    method: 'GET',\n    headers: requestHeaders\n  }).then(handleResponse).catch(err => console.error('Error:', err));\n}\n\nfunction confirmEmail(token) {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(`/register/activate_email/${token}`, requestOptions).then(handleResponse).catch(err => console.error('Error:', err));\n}\n\nfunction confirmSMS(token) {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(`/register/activate_sms/${token}`, requestOptions).then(handleResponse).catch(err => console.error('Error:', err));\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","handleResponse","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","confirmEmail","confirmSMS","currentUser","currentUserValue","email","password","method","headers","body","JSON","stringify","then","user","set","catch","err","console","error","name","password_confirmation","client","log","admin","remove","requestHeaders","token","requestOptions"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { handleResponse } from '../_helpers';\r\n\r\nlet currentUserSubject = (Cookies.getJSON('currentUser')) ? Cookies.getJSON('currentUser') : {};\r\n\r\nconst target = `https://intim-vibe-api.padilo.pro/api`;\r\n\r\nexport const authenticationService = {\r\n  login,\r\n  logout,\r\n  registrationAdmin,\r\n  registrationClient,\r\n  confirmEmail,\r\n  confirmSMS,\r\n  currentUser: currentUserSubject,\r\n  get currentUserValue() { return currentUserSubject }\r\n};\r\n\r\nasync function login(email: string, password: string): Promise<any> {\r\n  return await fetch(`${target}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ email, password })\r\n  }).then(handleResponse)\r\n    .then(user => {\r\n      // if (user.token) {\r\n      Cookies.set('currentUser', JSON.stringify(user));\r\n      currentUserSubject = user;\r\n      return user;\r\n      // }\r\n    }).catch(err => console.error('Error:', err))\r\n  // .then(() => window.location.reload(true));\r\n}\r\n\r\nasync function registrationClient(name: string, password: number | string, email: string, password_confirmation: number | string): Promise<any> {\r\n  // https://intim-vibe-api.padilo.pro/api/client/register\r\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .then(client => {\r\n      console.log('client:', client);\r\n\r\n      Cookies.set('currentUser', JSON.stringify(client));\r\n      currentUserSubject = client;\r\n      return client;\r\n    }).catch(err => console.error('Error:', err))\r\n}\r\n\r\nasync function registrationAdmin(name: string, password: number | string, email: string, password_confirmation: number | string): Promise<any> {\r\n  return await fetch(`${target}/admin/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      name,\r\n      password,\r\n      email,\r\n      password_confirmation\r\n    })\r\n  }).then(handleResponse)\r\n    .then(admin => {\r\n      Cookies.set('currentUser', JSON.stringify(admin));\r\n      currentUserSubject = admin;\r\n      return admin;\r\n    })\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n\r\nfunction logout(): any {\r\n  Cookies.remove('currentUser');\r\n  let requestHeaders: any = {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': 'http://localhost:3000', // Домен с которого идут запросы\r\n    'Access-Control-Allow-Credentials': true,\r\n    'Access-Control-Allow-Headers': \"заголовки которые можно отправить на удалённый сервер\",\r\n    // Разрешённые методы\r\n    'Access-Control-Allow-Methods': 'POST, GET, PUT, DELETE, OPTIONS'\r\n  };\r\n  return fetch(`${target}/logout`, {\r\n    method: 'GET',\r\n    headers: requestHeaders\r\n  }).then(handleResponse)\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n\r\nfunction confirmEmail(token: string): any {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  return fetch(`/register/activate_email/${token}`, requestOptions)\r\n    .then(handleResponse)\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n\r\nfunction confirmSMS(token: string): any {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  return fetch(`/register/activate_sms/${token}`, requestOptions)\r\n    .then(handleResponse)\r\n    .catch(err => console.error('Error:', err))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
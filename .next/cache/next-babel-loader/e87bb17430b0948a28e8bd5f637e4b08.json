{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sagaWatcher),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(sagaWorker);\n\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport { REQUEST_POSTS, FETCH_POST } from './actions/types';\nimport { showLoader, hideLoader } from './actions/actions';\nexport function sagaWatcher() {\n  return _regeneratorRuntime.wrap(function sagaWatcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(REQUEST_POSTS, sagaWorker);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction sagaWorker() {\n  var payload;\n  return _regeneratorRuntime.wrap(function sagaWorker$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return put(showLoader());\n\n        case 2:\n          _context2.next = 4;\n          return call(fetchPosts);\n\n        case 4:\n          payload = _context2.sent;\n          _context2.next = 7;\n          return put({\n            type: FETCH_POST,\n            payload: payload\n          });\n\n        case 7:\n          _context2.next = 9;\n          return put(hideLoader());\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction fetchPosts() {\n  return _fetchPosts.apply(this, arguments);\n}\n\nfunction _fetchPosts() {\n  _fetchPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var json;\n    return _regeneratorRuntime.wrap(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // const response = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=5');\n            // return await response.json();\n            json = [{\n              \"userId\": 1,\n              \"id\": 1,\n              \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n              \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n            }, {\n              \"userId\": 1,\n              \"id\": 2,\n              \"title\": \"qui est esse\",\n              \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n            }, {\n              \"userId\": 1,\n              \"id\": 3,\n              \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n              \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n            }, {\n              \"userId\": 1,\n              \"id\": 4,\n              \"title\": \"eum et est occaecati\",\n              \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n            }, {\n              \"userId\": 1,\n              \"id\": 5,\n              \"title\": \"nesciunt quas odio\",\n              \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n            }];\n            setTimeout(function () {\n              return json;\n            }, 1000);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchPosts.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/sagas.js"],"names":["sagaWatcher","sagaWorker","takeEvery","put","call","REQUEST_POSTS","FETCH_POST","showLoader","hideLoader","fetchPosts","payload","type","json","setTimeout"],"mappings":";;;oDAIiBA,W;qDAIPC,U;;AARV,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,iBAA1C;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AAEA,OAAO,SAAUR,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CAACG,aAAD,EAAgBJ,UAAhB,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAME,GAAG,CAACI,UAAU,EAAX,CAAT;;AADF;AAAA;AAEkB,iBAAMH,IAAI,CAACK,UAAD,CAAV;;AAFlB;AAEQC,UAAAA,OAFR;AAAA;AAGE,iBAAMP,GAAG,CAAC;AAAEQ,YAAAA,IAAI,EAAEL,UAAR;AAAoBI,YAAAA,OAAO,EAAPA;AAApB,WAAD,CAAT;;AAHF;AAAA;AAIE,iBAAMP,GAAG,CAACK,UAAU,EAAX,CAAT;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;SAOeC,U;;;;;yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACA;AACMG,YAAAA,IAHR,GAGe,CAAC;AACZ,wBAAU,CADE;AAEZ,oBAAM,CAFM;AAGZ,uBAAS,4EAHG;AAIZ,sBAAQ;AAJI,aAAD,EAMb;AACE,wBAAU,CADZ;AAEE,oBAAM,CAFR;AAGE,uBAAS,cAHX;AAIE,sBAAQ;AAJV,aANa,EAYb;AACE,wBAAU,CADZ;AAEE,oBAAM,CAFR;AAGE,uBAAS,6DAHX;AAIE,sBAAQ;AAJV,aAZa,EAkBb;AACE,wBAAU,CADZ;AAEE,oBAAM,CAFR;AAGE,uBAAS,sBAHX;AAIE,sBAAQ;AAJV,aAlBa,EAwBb;AACE,wBAAU,CADZ;AAEE,oBAAM,CAFR;AAGE,uBAAS,oBAHX;AAIE,sBAAQ;AAJV,aAxBa,CAHf;AAiCEC,YAAAA,UAAU,CAAC,YAAM;AACf,qBAAOD,IAAP;AACD,aAFS,EAEP,IAFO,CAAV;;AAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { REQUEST_POSTS, FETCH_POST } from './actions/types';\r\nimport { showLoader, hideLoader } from './actions/actions';\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(REQUEST_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  yield put(showLoader());\r\n  const payload = yield call(fetchPosts);\r\n  yield put({ type: FETCH_POST, payload });\r\n  yield put(hideLoader());\r\n}\r\n\r\nasync function fetchPosts() {\r\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=5');\r\n  // return await response.json();\r\n  const json = [{\r\n    \"userId\": 1,\r\n    \"id\": 1,\r\n    \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n    \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 2,\r\n    \"title\": \"qui est esse\",\r\n    \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 3,\r\n    \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\r\n    \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 4,\r\n    \"title\": \"eum et est occaecati\",\r\n    \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 5,\r\n    \"title\": \"nesciunt quas odio\",\r\n    \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\r\n  }];\r\n  setTimeout(() => {\r\n    return json;\r\n  }, 1000);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
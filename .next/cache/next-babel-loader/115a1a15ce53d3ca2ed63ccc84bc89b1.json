{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport { REQUEST_POSTS, FETCH_POST } from '../actions/types';\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\nexport function* sagaWatcher() {\n  console.log('sagaWatcher');\n  yield takeEvery(REQUEST_POSTS, sagaWorker);\n}\n\nfunction* sagaWorker() {\n  console.log('sagaWorker');\n  console.log(fetchPosts());\n\n  try {\n    yield put(showLoader());\n    const payload = yield call(fetchPosts);\n    yield put({\n      type: FETCH_POST,\n      payload\n    });\n    yield put(hideLoader());\n  } catch (e) {\n    yield put(showAlert('Something going wrong'));\n    yield put(hideLoader());\n  }\n}\n\nasync function fetchPosts() {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  return await response.json();\n} // export function* rootSaga () {\n//   yield [\n//       fork(sagaWatcher), // saga1 can also yield [ fork(actionOne), fork(actionTwo) ]\n//   ];\n// }\n// const json = [{\n//   \"userId\": 1,\n//   \"id\": 1,\n//   \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n//   \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n// },\n// {\n//   \"userId\": 1,\n//   \"id\": 2,\n//   \"title\": \"qui est esse\",\n//   \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n// },\n// {\n//   \"userId\": 1,\n//   \"id\": 3,\n//   \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n//   \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n// },\n// {\n//   \"userId\": 1,\n//   \"id\": 4,\n//   \"title\": \"eum et est occaecati\",\n//   \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n// },\n// {\n//   \"userId\": 1,\n//   \"id\": 5,\n//   \"title\": \"nesciunt quas odio\",\n//   \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n// }];","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/sagas/sagas.ts"],"names":["fetch","takeEvery","put","call","REQUEST_POSTS","FETCH_POST","showLoader","hideLoader","showAlert","sagaWatcher","console","log","sagaWorker","fetchPosts","payload","type","e","response","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAA2C,oBAA3C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,oBAAlD;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,QAAMV,SAAS,CAACG,aAAD,EAAgBQ,UAAhB,CAAf;AACD;;AAED,UAAUA,UAAV,GAAuB;AACrBF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYE,UAAU,EAAtB;;AAEA,MAAI;AACF,UAAMX,GAAG,CAACI,UAAU,EAAX,CAAT;AACA,UAAMQ,OAAO,GAAG,MAAMX,IAAI,CAACU,UAAD,CAA1B;AACA,UAAMX,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAEV,UAAR;AAAoBS,MAAAA;AAApB,KAAD,CAAT;AACA,UAAMZ,GAAG,CAACK,UAAU,EAAX,CAAT;AACD,GALD,CAKE,OAAOS,CAAP,EAAU;AACV,UAAMd,GAAG,CAACM,SAAS,CAAC,uBAAD,CAAV,CAAT;AACA,UAAMN,GAAG,CAACK,UAAU,EAAX,CAAT;AACD;AACF;;AAED,eAAeM,UAAf,GAA4B;AAC1B,QAAMI,QAAQ,GAAG,MAAMjB,KAAK,CAAC,4CAAD,CAA5B;AACA,SAAO,MAAMiB,QAAQ,CAACC,IAAT,EAAb;AACD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { takeEvery, put, call, fork } from 'redux-saga/effects';\r\nimport { REQUEST_POSTS, FETCH_POST } from '../actions/types';\r\nimport { showLoader, hideLoader, showAlert } from '../actions/actions';\r\n\r\nexport function* sagaWatcher() {\r\n  console.log('sagaWatcher');\r\n  \r\n  yield takeEvery(REQUEST_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  console.log('sagaWorker');\r\n  console.log(fetchPosts());\r\n  \r\n  try {\r\n    yield put(showLoader());\r\n    const payload = yield call(fetchPosts);\r\n    yield put({ type: FETCH_POST, payload });\r\n    yield put(hideLoader());\r\n  } catch (e) {\r\n    yield put(showAlert('Something going wrong'));\r\n    yield put(hideLoader());\r\n  }\r\n}\r\n\r\nasync function fetchPosts() {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  return await response.json();\r\n}\r\n\r\n// export function* rootSaga () {\r\n//   yield [\r\n//       fork(sagaWatcher), // saga1 can also yield [ fork(actionOne), fork(actionTwo) ]\r\n//   ];\r\n// }\r\n\r\n// const json = [{\r\n  //   \"userId\": 1,\r\n  //   \"id\": 1,\r\n  //   \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n  //   \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n  // },\r\n  // {\r\n  //   \"userId\": 1,\r\n  //   \"id\": 2,\r\n  //   \"title\": \"qui est esse\",\r\n  //   \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\r\n  // },\r\n  // {\r\n  //   \"userId\": 1,\r\n  //   \"id\": 3,\r\n  //   \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\r\n  //   \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\r\n  // },\r\n  // {\r\n  //   \"userId\": 1,\r\n  //   \"id\": 4,\r\n  //   \"title\": \"eum et est occaecati\",\r\n  //   \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\r\n  // },\r\n  // {\r\n  //   \"userId\": 1,\r\n  //   \"id\": 5,\r\n  //   \"title\": \"nesciunt quas odio\",\r\n  //   \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\r\n  // }];"]},"metadata":{},"sourceType":"module"}
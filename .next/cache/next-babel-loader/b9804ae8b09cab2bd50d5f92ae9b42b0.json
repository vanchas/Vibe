{"ast":null,"code":"import { GET_ALL_SUPPORT_TASKS, DELETE_SUPPORT_TASK, GET_APP_INFO } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\";\nexport const getAllSupportTasks = () => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_SUPPORT_TASKS,\n      payload: res.data\n    });\n  }).catch(err => console.error('Error: ', err));\n};\nexport const editSupportTasks = data => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/edit/${data.id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      subject: data.subject,\n      message: data.message,\n      answer: data.answer\n    })\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_ALL_SUPPORT_TASKS,\n      payload: res\n    });\n  }).then(() => window.location.reload(true));\n};\nexport const deleteSupportTask = id => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  });\n  dispatch({\n    type: DELETE_SUPPORT_TASK,\n    payload: id\n  });\n  return response;\n};\nexport const createCategory = name => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/categories/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      name\n    })\n  });\n  const promise = response.json();\n  promise.then(res => {\n    return dispatch({\n      type: GET_APP_INFO\n    });\n  });\n};\nexport const editCategory = (id, name) => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/admin/categories/${id}/edit`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: JSON.stringify({\n      name\n    })\n  }).then(() => {\n    dispatch({\n      type: GET_APP_INFO\n    });\n  }).catch(err => console.error('Error: ', err));\n  ;\n};\nexport const deleteCategory = id => async dispatch => {\n  const user = await authenticationService.currentUserValue;\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/admin/categories/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': `${user.token_type} ${user.token}`\n    }\n  }).then(() => {\n    dispatch({\n      type: GET_APP_INFO\n    });\n  }).catch(err => console.error('Error: ', err));\n};","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/adminActions.ts"],"names":["GET_ALL_SUPPORT_TASKS","DELETE_SUPPORT_TASK","GET_APP_INFO","fetch","authenticationService","getAllSupportTasks","dispatch","user","currentUserValue","response","method","headers","token_type","token","promise","json","then","res","type","payload","data","catch","err","console","error","editSupportTasks","id","body","JSON","stringify","subject","message","answer","window","location","reload","deleteSupportTask","createCategory","name","editCategory","deleteCategory"],"mappings":"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","sourcesContent":["import { GET_ALL_SUPPORT_TASKS, DELETE_SUPPORT_TASK, GET_APP_INFO } from \"./types\"\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { authenticationService } from \"../../_services\"\r\n\r\nexport const getAllSupportTasks = () => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    }\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: GET_ALL_SUPPORT_TASKS, payload: res.data })\r\n  }).catch(err => console.error('Error: ', err));\r\n}\r\nexport const editSupportTasks = (data: any) => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/edit/${data.id}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    },\r\n    body: JSON.stringify({\r\n      subject: data.subject,\r\n      message: data.message,\r\n      answer: data.answer\r\n    })\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: GET_ALL_SUPPORT_TASKS, payload: res })\r\n  }).then(() => window.location.reload(true));\r\n}\r\nexport const deleteSupportTask = (id: number | string) => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/support/${id}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    }\r\n  });\r\n  dispatch({ type: DELETE_SUPPORT_TASK, payload: id })\r\n  return response;\r\n}\r\nexport const createCategory = (name: string) => async (dispatch: any) => {\r\n  const user = authenticationService.currentUserValue;\r\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/admin/categories/create`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    },\r\n    body: JSON.stringify({ name })\r\n  });\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    return dispatch({ type: GET_APP_INFO })\r\n  });\r\n}\r\nexport const editCategory = (id: string | number, name: string) => async (dispatch: any) => {\r\n  const user = await authenticationService.currentUserValue;\r\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/admin/categories/${id}/edit`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    },\r\n    body: JSON.stringify({ name })\r\n  }).then(() => {\r\n    dispatch({ type: GET_APP_INFO });\r\n  }).catch(err => console.error('Error: ', err));;\r\n}\r\nexport const deleteCategory = (id: string | number) => async (dispatch: any) => {\r\n  const user = await authenticationService.currentUserValue;\r\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/admin/categories/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Authorization': `${user.token_type} ${user.token}`\r\n    }\r\n  }).then(() => {\r\n    dispatch({ type: GET_APP_INFO });\r\n  }).catch(err => console.error('Error: ', err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
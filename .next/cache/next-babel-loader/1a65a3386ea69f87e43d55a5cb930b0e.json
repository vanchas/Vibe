{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\_helpers\\\\PrivateRoute.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../_services';\nexport var PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      roles = _ref.roles,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"roles\"]);\n\n  return __jsx(Route, _extends({}, rest, {\n    render: function render(props) {\n      var currentUser = authenticationService.currentUserValue;\n\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return __jsx(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 14\n          }\n        });\n      } // check if route is restricted by role\n\n\n      if (roles && roles.indexOf(currentUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return __jsx(Redirect, {\n          to: {\n            pathname: '/'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 14\n          }\n        });\n      } // authorised so return component\n\n\n      return __jsx(Component, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 12\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }));\n};\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_helpers/PrivateRoute.js"],"names":["React","Route","Redirect","authenticationService","PrivateRoute","Component","component","roles","rest","props","currentUser","currentUserValue","pathname","state","from","location","indexOf","role"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,qBAAT,QAAsC,cAAtC;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,KAAzB,QAAyBA,KAAzB;AAAA,MAAmCC,IAAnC;;AAAA,SAC1B,MAAC,KAAD,eAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AAChC,UAAMC,WAAW,GAAGP,qBAAqB,CAACQ,gBAA1C;;AACA,UAAI,CAACD,WAAL,EAAkB;AAChB;AACA,eAAO,MAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEE,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAA7B,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAL+B,CAOhC;;;AACA,UAAIR,KAAK,IAAIA,KAAK,CAACS,OAAN,CAAcN,WAAW,CAACO,IAA1B,MAAoC,CAAC,CAAlD,EAAqD;AACnD;AACA,eAAO,MAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEL,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAX+B,CAahC;;;AACA,aAAO,MAAC,SAAD,eAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0B;AAAA,CAArB;KAAML,Y","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../_services';\r\n\r\nexport const PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n  <Route {...rest} render={props => {\r\n    const currentUser = authenticationService.currentUserValue;\r\n    if (!currentUser) {\r\n      // not logged in so redirect to login page with the return url\r\n      return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    }\r\n\r\n    // check if route is restricted by role\r\n    if (roles && roles.indexOf(currentUser.role) === -1) {\r\n      // role not authorised so redirect to home page\r\n      return <Redirect to={{ pathname: '/' }} />\r\n    }\r\n\r\n    // authorised so return component\r\n    return <Component {...props} />\r\n  }} />\r\n)"]},"metadata":{},"sourceType":"module"}
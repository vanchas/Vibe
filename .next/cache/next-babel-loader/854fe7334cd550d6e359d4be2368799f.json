{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { createPost, showAlert } from '../../redux/actions/actions';\nimport Alert from './Alert';\n\nvar PostForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(PostForm, _React$Component);\n\n  var _super = _createSuper(PostForm);\n\n  function PostForm(props) {\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"submitHandler\", function (e) {\n      e.preventDefault();\n      var title = _this.state.title;\n\n      if (!title.trim()) {\n        return _this.props.showAlert('Post title can\\'t be empty');\n      }\n\n      var newPost = {\n        title: title,\n        id: Date.now().toString()\n      };\n\n      _this.props.createPost(newPost);\n\n      _this.setState({\n        title: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeInputHandler\", function (e) {\n      e.persist();\n\n      _this.setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), _defineProperty({}, e.target.name, e.target.value));\n      });\n    });\n\n    _this.state = {\n      title: ''\n    };\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"form\", {\n        onSubmit: this.submitHandler\n      }, this.props.alert && __jsx(Alert, {\n        text: this.props.alert\n      }), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", {\n        htmlFor: \"title\"\n      }, \"Post title\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"title\",\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.changeInputHandler\n      })), __jsx(\"button\", {\n        className: \"btn btn-success\",\n        type: \"submit\"\n      }, \"Create\"));\n    }\n  }]);\n\n  return PostForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    alert: state.app.alert\n  };\n};\n\nvar mapDispatchToProps = {\n  createPost: createPost,\n  showAlert: showAlert\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","map":null,"metadata":{},"sourceType":"module"}
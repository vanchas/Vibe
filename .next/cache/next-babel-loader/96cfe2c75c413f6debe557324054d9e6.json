{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport { handleResponse } from \"../_helpers\";\nimport Router from \"next/router\";\nlet currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nconst target = `https://intim-vibe-api.padilo.pro/api`;\nexport const authenticationService = {\n  login,\n  logout,\n  registrationAdmin,\n  registrationClient,\n  registrationProvider,\n  confirmEmail,\n  confirmSMS,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nasync function login(email, password) {\n  return await fetch(`${target}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleResponse).then(user => {\n    // if (user.token) {\n    Cookies.set(\"currentUser\", JSON.stringify(user));\n    currentUserSubject = user;\n    console.log(user);\n    return user; // }\n  }).catch(err => console.error(\"Error:\", err)); // .then(() => window.location.reload(true));\n}\n\nasync function registrationClient(name, password, email, password_confirmation) {\n  return await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(client => {\n    console.log(\"client:\", client);\n    Cookies.set(\"currentUser\", JSON.stringify(client));\n    currentUserSubject = client;\n    return client;\n  }).then(() => Router.push(\"/userCabinet\")).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationAdmin(name, password, email, password_confirmation) {\n  return await fetch(`${target}/admin/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(handleResponse).then(admin => {\n    Cookies.set(\"currentUser\", JSON.stringify(admin));\n    currentUserSubject = admin;\n    return admin;\n  }).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationProvider(name, password, email, password_confirmation, phone) {\n  return await fetch(`${target}/individual/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone\n    })\n  }).then(handleResponse).then(data => {\n    if (data.user) {\n      Cookies.set(\"currentUser\", JSON.stringify(data.user));\n      currentUserSubject = data.user;\n      return data.user;\n    }\n  }).then(() => Router.push(\"/modelCabinet\")).catch(err => console.error(\"Error:\", err));\n}\n\nasync function logout() {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/logout`, {\n    method: \"GET\",\n    mode: \"no-cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }).then(res => res).catch(err => console.error(\"Error:\", err));\n}\n\nfunction confirmEmail(token) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`/register/activate_email/${token}`, requestOptions).then(handleResponse).catch(err => console.error(\"Error:\", err));\n}\n\nfunction confirmSMS(token) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`/register/activate_sms/${token}`, requestOptions).then(handleResponse).catch(err => console.error(\"Error:\", err));\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","handleResponse","Router","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","confirmEmail","confirmSMS","currentUser","currentUserValue","email","password","method","headers","body","JSON","stringify","then","user","set","console","log","catch","err","error","name","password_confirmation","client","push","admin","phone","data","remove","mode","res","token","requestOptions"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAIC,kBAAkB,GAAGJ,OAAO,CAACK,OAAR,CAAgB,aAAhB,IACtBL,OAAO,CAACK,OAAR,CAAgB,aAAhB,CADsB,GAEtB,EAFH;AAIA,MAAMC,MAAM,GAAI,uCAAhB;AAEA,OAAO,MAAMC,qBAAqB,GAAG;AACpCC,EAAAA,KADoC;AAEpCC,EAAAA,MAFoC;AAGpCC,EAAAA,iBAHoC;AAIpCC,EAAAA,kBAJoC;AAKpCC,EAAAA,oBALoC;AAMpCC,EAAAA,YANoC;AAOpCC,EAAAA,UAPoC;AAQpCC,EAAAA,WAAW,EAAEX,kBARuB;;AASpC,MAAIY,gBAAJ,GAAuB;AACtB,WAAOZ,kBAAP;AACA;;AAXmC,CAA9B;;AAcP,eAAeI,KAAf,CAAqBS,KAArB,EAAoCC,QAApC,EAAoE;AACnE,SAAO,MAAMjB,KAAK,CAAE,GAAEK,MAAO,QAAX,EAAoB;AACrCa,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF4B;AAGrCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAH+B,GAApB,CAAL,CAKXM,IALW,CAKNtB,cALM,EAMXsB,IANW,CAMLC,IAAD,IAAU;AACf;AACAzB,IAAAA,OAAO,CAAC0B,GAAR,CAAY,aAAZ,EAA2BJ,IAAI,CAACC,SAAL,CAAeE,IAAf,CAA3B;AACArB,IAAAA,kBAAkB,GAAGqB,IAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAOA,IAAP,CANe,CAOf;AACA,GAdW,EAeXI,KAfW,CAeJC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,GAAxB,CAfJ,CAAb,CADmE,CAiBnE;AACA;;AAED,eAAenB,kBAAf,CACCqB,IADD,EAECd,QAFD,EAGCD,KAHD,EAICgB,qBAJD,EAKgB;AACf,SAAO,MAAMhC,KAAK,CAAE,uDAAF,EAA0D;AAC3EkB,IAAAA,MAAM,EAAE,MADmE;AAE3EC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFkE;AAG3EC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBS,MAAAA,IADoB;AAEpBd,MAAAA,QAFoB;AAGpBD,MAAAA,KAHoB;AAIpBgB,MAAAA;AAJoB,KAAf;AAHqE,GAA1D,CAAL,CAUXT,IAVW,CAUNtB,cAVM,EAWXsB,IAXW,CAWLU,MAAD,IAAY;AACjBP,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,MAAvB;AAEAlC,IAAAA,OAAO,CAAC0B,GAAR,CAAY,aAAZ,EAA2BJ,IAAI,CAACC,SAAL,CAAeW,MAAf,CAA3B;AACA9B,IAAAA,kBAAkB,GAAG8B,MAArB;AACA,WAAOA,MAAP;AACA,GAjBW,EAkBXV,IAlBW,CAkBN,MAAMrB,MAAM,CAACgC,IAAP,CAAY,cAAZ,CAlBA,EAmBXN,KAnBW,CAmBJC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,GAAxB,CAnBJ,CAAb;AAoBA;;AAED,eAAepB,iBAAf,CACCsB,IADD,EAECd,QAFD,EAGCD,KAHD,EAICgB,qBAJD,EAKgB;AACf,SAAO,MAAMhC,KAAK,CAAE,GAAEK,MAAO,iBAAX,EAA6B;AAC9Ca,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFqC;AAG9CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBS,MAAAA,IADoB;AAEpBd,MAAAA,QAFoB;AAGpBD,MAAAA,KAHoB;AAIpBgB,MAAAA;AAJoB,KAAf;AAHwC,GAA7B,CAAL,CAUXT,IAVW,CAUNtB,cAVM,EAWXsB,IAXW,CAWLY,KAAD,IAAW;AAChBpC,IAAAA,OAAO,CAAC0B,GAAR,CAAY,aAAZ,EAA2BJ,IAAI,CAACC,SAAL,CAAea,KAAf,CAA3B;AACAhC,IAAAA,kBAAkB,GAAGgC,KAArB;AACA,WAAOA,KAAP;AACA,GAfW,EAgBXP,KAhBW,CAgBJC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,GAAxB,CAhBJ,CAAb;AAiBA;;AAED,eAAelB,oBAAf,CACCoB,IADD,EAECd,QAFD,EAGCD,KAHD,EAICgB,qBAJD,EAKCI,KALD,EAMgB;AACf,SAAO,MAAMpC,KAAK,CAAE,GAAEK,MAAO,sBAAX,EAAkC;AACnDa,IAAAA,MAAM,EAAE,MAD2C;AAEnDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF0C;AAGnDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBS,MAAAA,IADoB;AAEpBd,MAAAA,QAFoB;AAGpBD,MAAAA,KAHoB;AAIpBgB,MAAAA,qBAJoB;AAKpBI,MAAAA;AALoB,KAAf;AAH6C,GAAlC,CAAL,CAWXb,IAXW,CAWNtB,cAXM,EAYXsB,IAZW,CAYLc,IAAD,IAAU;AACf,QAAIA,IAAI,CAACb,IAAT,EAAe;AACdzB,MAAAA,OAAO,CAAC0B,GAAR,CAAY,aAAZ,EAA2BJ,IAAI,CAACC,SAAL,CAAee,IAAI,CAACb,IAApB,CAA3B;AACArB,MAAAA,kBAAkB,GAAGkC,IAAI,CAACb,IAA1B;AACA,aAAOa,IAAI,CAACb,IAAZ;AACA;AACD,GAlBW,EAmBXD,IAnBW,CAmBN,MAAMrB,MAAM,CAACgC,IAAP,CAAY,eAAZ,CAnBA,EAoBXN,KApBW,CAoBJC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,GAAxB,CApBJ,CAAb;AAqBA;;AAED,eAAerB,MAAf,GAAsC;AACrCT,EAAAA,OAAO,CAACuC,MAAR,CAAe,aAAf;AACA,SAAO,MAAMtC,KAAK,CAAE,GAAEK,MAAO,SAAX,EAAqB;AACtCa,IAAAA,MAAM,EAAE,KAD8B;AAEtCqB,IAAAA,IAAI,EAAE,SAFgC;AAGtCpB,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR;AAER,qCAA+B;AAFvB;AAH6B,GAArB,CAAL,CAQXI,IARW,CAQLiB,GAAD,IAASA,GARH,EASXZ,KATW,CASJC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,GAAxB,CATJ,CAAb;AAUA;;AAED,SAASjB,YAAT,CAAsB6B,KAAtB,EAA0C;AACzC,QAAMC,cAAc,GAAG;AACtBxB,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFa,GAAvB;AAKA,SAAOnB,KAAK,CAAE,4BAA2ByC,KAAM,EAAnC,EAAsCC,cAAtC,CAAL,CACLnB,IADK,CACAtB,cADA,EAEL2B,KAFK,CAEEC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,GAAxB,CAFV,CAAP;AAGA;;AAED,SAAShB,UAAT,CAAoB4B,KAApB,EAAwC;AACvC,QAAMC,cAAc,GAAG;AACtBxB,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFa,GAAvB;AAKA,SAAOnB,KAAK,CAAE,0BAAyByC,KAAM,EAAjC,EAAoCC,cAApC,CAAL,CACLnB,IADK,CACAtB,cADA,EAEL2B,KAFK,CAEEC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,GAAxB,CAFV,CAAP;AAGA","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { handleResponse } from \"../_helpers\";\r\nimport Router from \"next/router\";\r\n\r\nlet currentUserSubject = Cookies.getJSON(\"currentUser\")\r\n\t? Cookies.getJSON(\"currentUser\")\r\n\t: {};\r\n\r\nconst target = `https://intim-vibe-api.padilo.pro/api`;\r\n\r\nexport const authenticationService = {\r\n\tlogin,\r\n\tlogout,\r\n\tregistrationAdmin,\r\n\tregistrationClient,\r\n\tregistrationProvider,\r\n\tconfirmEmail,\r\n\tconfirmSMS,\r\n\tcurrentUser: currentUserSubject,\r\n\tget currentUserValue() {\r\n\t\treturn currentUserSubject;\r\n\t},\r\n};\r\n\r\nasync function login(email: string, password: string): Promise<any> {\r\n\treturn await fetch(`${target}/login`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\tbody: JSON.stringify({ email, password }),\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.then((user) => {\r\n\t\t\t// if (user.token) {\r\n\t\t\tCookies.set(\"currentUser\", JSON.stringify(user));\r\n\t\t\tcurrentUserSubject = user;\r\n\t\t\tconsole.log(user);\r\n\r\n\t\t\treturn user;\r\n\t\t\t// }\r\n\t\t})\r\n\t\t.catch((err) => console.error(\"Error:\", err));\r\n\t// .then(() => window.location.reload(true));\r\n}\r\n\r\nasync function registrationClient(\r\n\tname: string,\r\n\tpassword: number | string,\r\n\temail: string,\r\n\tpassword_confirmation: number | string\r\n): Promise<any> {\r\n\treturn await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\tbody: JSON.stringify({\r\n\t\t\tname,\r\n\t\t\tpassword,\r\n\t\t\temail,\r\n\t\t\tpassword_confirmation,\r\n\t\t}),\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.then((client) => {\r\n\t\t\tconsole.log(\"client:\", client);\r\n\r\n\t\t\tCookies.set(\"currentUser\", JSON.stringify(client));\r\n\t\t\tcurrentUserSubject = client;\r\n\t\t\treturn client;\r\n\t\t})\r\n\t\t.then(() => Router.push(\"/userCabinet\"))\r\n\t\t.catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nasync function registrationAdmin(\r\n\tname: string,\r\n\tpassword: number | string,\r\n\temail: string,\r\n\tpassword_confirmation: number | string\r\n): Promise<any> {\r\n\treturn await fetch(`${target}/admin/register`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\tbody: JSON.stringify({\r\n\t\t\tname,\r\n\t\t\tpassword,\r\n\t\t\temail,\r\n\t\t\tpassword_confirmation,\r\n\t\t}),\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.then((admin) => {\r\n\t\t\tCookies.set(\"currentUser\", JSON.stringify(admin));\r\n\t\t\tcurrentUserSubject = admin;\r\n\t\t\treturn admin;\r\n\t\t})\r\n\t\t.catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nasync function registrationProvider(\r\n\tname: string,\r\n\tpassword: number | string,\r\n\temail: string,\r\n\tpassword_confirmation: number | string,\r\n\tphone: string | number\r\n): Promise<any> {\r\n\treturn await fetch(`${target}/individual/register`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\tbody: JSON.stringify({\r\n\t\t\tname,\r\n\t\t\tpassword,\r\n\t\t\temail,\r\n\t\t\tpassword_confirmation,\r\n\t\t\tphone,\r\n\t\t}),\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.then((data) => {\r\n\t\t\tif (data.user) {\r\n\t\t\t\tCookies.set(\"currentUser\", JSON.stringify(data.user));\r\n\t\t\t\tcurrentUserSubject = data.user;\r\n\t\t\t\treturn data.user;\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(() => Router.push(\"/modelCabinet\"))\r\n\t\t.catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nasync function logout(): Promise<any> {\r\n\tCookies.remove(\"currentUser\");\r\n\treturn await fetch(`${target}/logout`, {\r\n\t\tmethod: \"GET\",\r\n\t\tmode: \"no-cors\",\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\t\t},\r\n\t})\r\n\t\t.then((res) => res)\r\n\t\t.catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nfunction confirmEmail(token: string): any {\r\n\tconst requestOptions = {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t};\r\n\r\n\treturn fetch(`/register/activate_email/${token}`, requestOptions)\r\n\t\t.then(handleResponse)\r\n\t\t.catch((err) => console.error(\"Error:\", err));\r\n}\r\n\r\nfunction confirmSMS(token: string): any {\r\n\tconst requestOptions = {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t};\r\n\r\n\treturn fetch(`/register/activate_sms/${token}`, requestOptions)\r\n\t\t.then(handleResponse)\r\n\t\t.catch((err) => console.error(\"Error:\", err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT, GET_ALL_POSTS, GET_LOCAITONS_INFO, GET_CITIES, CREATE_SUPPORT_TASK, GET_ALL_USER_TASKS, GET_APP_INFO, GET_NEW_POSTS, GET_PAGES_NUMBER, GET_POST_COMMENTS, CREATE_POST_COMMENT, FILTER_POSTS, GET_FAVORITES, GET_COMPLAINS, SORT_POSTS, SHOW_SUCCESS } from \"../actions/types\";\nvar initialState = {\n  postComments: [],\n  loading: false,\n  alert: null,\n  categories: [],\n  posts: [],\n  newPosts: [],\n  states: [],\n  cities: [],\n  supportTasks: [],\n  affiliation: [],\n  availability: [],\n  available_to: [],\n  ethnicity: [],\n  eyes: [],\n  hair: [],\n  pagesNumber: 0,\n  favorites: [],\n  complains: [],\n  success: null\n};\nexport var appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case SHOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: action.payload\n      });\n\n    case HIDE_LOADER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case SHOW_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: action.payload\n      });\n\n    case HIDE_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alert: null\n      });\n\n    case GET_ALL_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case SORT_POSTS:\n      var newPosts = state.posts;\n\n      if (action.payload === 'date/-') {\n        newPosts.sort(function (a, b) {\n          var dateA = new Date(a.created_at.split('T')[0].split('-').join('/'));\n          var dateB = new Date(b.created_at.split('T')[0].split('-').join('/'));\n\n          if (dateA.getTime() < dateB.getTime()) {\n            return a - b;\n          } else if (dateA.getTime() > dateB.getTime()) {\n            return b - a;\n          } else return;\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: newPosts\n      });\n\n    case FILTER_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload\n      });\n\n    case GET_PAGES_NUMBER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pagesNumber: action.payload\n      });\n\n    case GET_NEW_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newPosts: action.payload\n      });\n\n    case GET_LOCAITONS_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        states: action.payload\n      });\n\n    case GET_CITIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cities: action.payload\n      });\n\n    case GET_COMPLAINS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        complains: action.payload\n      });\n\n    case GET_FAVORITES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favorites: action.payload\n      });\n\n    case CREATE_SUPPORT_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        supportTasks: [].concat(_toConsumableArray(state.supportTasks), [action.payload])\n      });\n\n    case GET_ALL_USER_TASKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        supportTasks: action.payload\n      });\n\n    case GET_POST_COMMENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postComments: action.payload\n      });\n\n    case CREATE_POST_COMMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postComments: [].concat(_toConsumableArray(state.postComments), [action.payload])\n      });\n\n    case GET_APP_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: action.payload.categories,\n        affiliation: action.payload.affiliation,\n        availability: action.payload.availability,\n        available_to: action.payload.available_to,\n        ethnicity: action.payload.ethnicity,\n        eyes: action.payload.eyes,\n        hair: action.payload.hair\n      });\n\n    default:\n      return state;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\vibe\\\\src\\\\components\\\\admin\\\\AdminRegistration.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { adminService } from '../../_services/admin.service';\nimport Alert from '../test/Alert';\nimport { connect } from 'react-redux';\nimport { showAlert } from '../../redux/actions/actions';\n\nfunction AdminRegistration(props) {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: confirmedPassword,\n    1: setConfirmedPassword\n  } = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!name.length || !password.length || !email.length || !confirmedPassword.length) {\n      return props.showAlert('All fields must be filled');\n    }\n\n    adminService.registration(name, password, email, confirmedPassword);\n  };\n\n  return __jsx(\"div\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"New admin registration\"), props.alert && __jsx(Alert, {\n    text: props.alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }), __jsx(\"form\", {\n    onSubmit: e => submitHandler(e),\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"form-group d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"name\", __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    className: \"form-group d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"password\", __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    className: \"form-group d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"email\", __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    className: \"form-group d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"password_confirmation\", __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    onChange: e => setConfirmedPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nconst mapStateToProps = state => ({\n  alert: state.app.alert\n});\n\nconst mapDispatchToProps = {\n  showAlert\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminRegistration);","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/components/admin/AdminRegistration.jsx"],"names":["React","useState","adminService","Alert","connect","showAlert","AdminRegistration","props","name","setName","password","setPassword","email","setEmail","confirmedPassword","setConfirmedPassword","submitHandler","e","preventDefault","length","registration","alert","target","value","mapStateToProps","state","app","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { adminService } from '../../_services/admin.service';\r\nimport Alert from '../test/Alert';\r\nimport { connect } from 'react-redux';\r\nimport { showAlert } from '../../redux/actions/actions';\r\n\r\nfunction AdminRegistration(props) {\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [confirmedPassword, setConfirmedPassword] = useState('');\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (!name.length || !password.length || !email.length || !confirmedPassword.length) {\r\n      return props.showAlert('All fields must be filled');\r\n    } \r\n    adminService.registration(name, password, email, confirmedPassword);\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-white\">\r\n      <span>New admin registration</span>\r\n\r\n      {props.alert && <Alert text={props.alert} />}\r\n\r\n      <form onSubmit={e => submitHandler(e)} className=\"form-group\">\r\n        <label className=\"form-group d-block\">\r\n          name\r\n          <input type=\"text\" className=\"form-control\"\r\n            onChange={e => setName(e.target.value)} />\r\n        </label>\r\n        <label className=\"form-group d-block\">\r\n          password\r\n          <input type=\"password\" className=\"form-control\"\r\n            onChange={e => setPassword(e.target.value)} />\r\n        </label>\r\n        <label className=\"form-group d-block\">\r\n          email\r\n          <input type=\"email\" className=\"form-control\"\r\n            onChange={e => setEmail(e.target.value)} />\r\n        </label>\r\n        <label className=\"form-group d-block\">\r\n          password_confirmation\r\n          <input type=\"password\" className=\"form-control\"\r\n            onChange={e => setConfirmedPassword(e.target.value)} />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  alert: state.app.alert\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  showAlert\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminRegistration);\r\n"]},"metadata":{},"sourceType":"module"}
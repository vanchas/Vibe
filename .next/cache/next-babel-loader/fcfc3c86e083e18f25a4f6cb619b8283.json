{"ast":null,"code":"import { ADD_POST, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\";\nimport fetch from 'isomorphic-unfetch';\nimport { authenticationService } from \"../../_services\";\nimport { showAlert, showSuccess } from \"./actions\"; // import { useRouter } from \"next/router\"\n\nexport function getAllProviderPost() {\n  return {\n    type: GET_ALL_POSTS\n  };\n}\n;\nexport const addProviderPost = post => async dispatch => {\n  const user = authenticationService.currentUserValue;\n  const formData = new FormData();\n  formData.append('gender', post.gender);\n  formData.append('age', post.age);\n  formData.append('ethnicity_id', post.ethnicity_id);\n  formData.append('hair_id', post.hair_id);\n  formData.append('eye_id', post.eye_id);\n  formData.append('height', post.height);\n  formData.append('affiliation_id', post.affiliation_id);\n  formData.append('availability_ids', post.availability_ids);\n  formData.append('availableto_ids', post.availableto_ids);\n  formData.append('number', post.number);\n  formData.append('email', post.email);\n  formData.append('model_name', post.model_name);\n  post.photo.forEach(p => {\n    return formData.append('photo', p);\n  });\n  formData.append('video_link', post.video_link);\n  formData.append('about', post.about);\n  formData.append('summary', post.summary);\n  formData.append('category_id', post.category_id);\n  formData.append('state_id', post.state_id);\n  formData.append('city_id', post.city_id);\n  formData.append('second_name', post.second_name);\n  formData.append('account_name', post.account_name);\n  formData.append('photo_vertical', post.photo_vertical);\n  formData.append('photo_horizontal', post.photo_horizontal);\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n    method: 'POST',\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Accept': 'application/json',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: formData\n  });\n  const promise = response.json();\n\n  if (response.status === 201) {\n    promise.then(data => {\n      dispatch({\n        type: ADD_POST,\n        payload: post\n      });\n      dispatch(showSuccess(data.message));\n    }).catch(err => console.error('Error:', err));\n  } else {\n    promise.then(data => {\n      dispatch(showAlert(data.message));\n    }).catch(err => console.error('Error:', err));\n  }\n};\nexport function updateProviderPost(post) {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  };\n}\n;\nexport function removeProviderPost(id) {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  };\n}\n;","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/redux/actions/providerActions.ts"],"names":["ADD_POST","UPDATE_POST","REMOVE_POST","GET_ALL_POSTS","fetch","authenticationService","showAlert","showSuccess","getAllProviderPost","type","addProviderPost","post","dispatch","user","currentUserValue","formData","FormData","append","gender","age","ethnicity_id","hair_id","eye_id","height","affiliation_id","availability_ids","availableto_ids","number","email","model_name","photo","forEach","p","video_link","about","summary","category_id","state_id","city_id","second_name","account_name","photo_vertical","photo_horizontal","response","method","headers","token_type","token","body","promise","json","status","then","data","payload","message","catch","err","console","error","updateProviderPost","removeProviderPost","id"],"mappings":"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","sourcesContent":["import { ADD_POST, ProviderPost, UPDATE_POST, REMOVE_POST, GET_ALL_POSTS } from \"./types\"\nimport fetch from 'isomorphic-unfetch'\nimport { authenticationService } from \"../../_services\";\nimport {showAlert, showSuccess} from \"./actions\";\n// import { useRouter } from \"next/router\"\n\nexport function getAllProviderPost(): any {\n  return {\n    type: GET_ALL_POSTS\n  }\n};\n\nexport const addProviderPost = (post: any) => async (dispatch: any) => {\n  const user = authenticationService.currentUserValue;\n  const formData = new FormData();\n  formData.append('gender', post.gender);\n  formData.append('age', post.age);\n  formData.append('ethnicity_id', post.ethnicity_id);\n  formData.append('hair_id', post.hair_id);\n  formData.append('eye_id', post.eye_id);\n  formData.append('height', post.height);\n  formData.append('affiliation_id', post.affiliation_id);\n  formData.append('availability_ids', post.availability_ids);\n  formData.append('availableto_ids', post.availableto_ids);\n  formData.append('number', post.number);\n  formData.append('email', post.email);\n  formData.append('model_name', post.model_name);\n  post.photo.forEach((p: any) => {\n    return formData.append('photo', p);\n  });\n  formData.append('video_link', post.video_link);\n  formData.append('about', post.about);\n  formData.append('summary', post.summary);\n  formData.append('category_id', post.category_id);\n  formData.append('state_id', post.state_id);\n  formData.append('city_id', post.city_id);\n  formData.append('second_name', post.second_name);\n  formData.append('account_name', post.account_name);\n  formData.append('photo_vertical', post.photo_vertical);\n  formData.append('photo_horizontal', post.photo_horizontal);\n\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts/create', {\n    method: 'POST',\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Accept': 'application/json',\n      'Authorization': `${user.token_type} ${user.token}`\n    },\n    body: formData\n  });\n  const promise = response.json();\n  if (response.status === 201) {\n    promise.then(data => {\n      dispatch({ type: ADD_POST, payload: post });\n      dispatch(showSuccess(data.message))\n    }).catch(err => console.error('Error:', err))\n  } else {\n    promise.then(data => {\n      dispatch(showAlert(data.message));\n    }).catch(err => console.error('Error:', err))\n  }\n};\nexport function updateProviderPost(post: ProviderPost): any {\n  return {\n    type: UPDATE_POST,\n    payload: post\n  }\n};\nexport function removeProviderPost(id: number | string): any {\n  return {\n    type: REMOVE_POST,\n    payload: id\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}
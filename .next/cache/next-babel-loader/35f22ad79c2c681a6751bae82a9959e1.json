{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport store from \"../redux/store\";\nimport { showSuccess } from \"../redux/actions/actions\";\nlet currentUserSubject = Cookies.getJSON(\"currentUser\") ? Cookies.getJSON(\"currentUser\") : {};\nconst target = `https://intim-vibe-api.padilo.pro/api`;\nexport const authenticationService = {\n  login,\n  logout,\n  registrationAdmin,\n  registrationClient,\n  registrationProvider,\n  registrationAgency,\n  currentUser: currentUserSubject,\n\n  get currentUserValue() {\n    return currentUserSubject;\n  }\n\n};\n\nasync function login(email, password) {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(user => {\n    if (user.token) {\n      Cookies.set(\"currentUser\", JSON.stringify(user), {\n        expires: 1\n      });\n      currentUserSubject = user;\n      return user;\n    }\n  }).then(user => {\n    if (user.user.role === 'client') {\n      Router.push('/userCabinet');\n    } else if (user.user.role = 'individual') {\n      Router.push('/modelCabinet');\n    } else if (user.user.role === 'admin') {\n      Router.push('/admin');\n    } else if (user.user.role === 'agency') {\n      Router.push('/modelCabinet');\n    }\n  }).then(() => window.location.reload(true)).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationClient(name, password, email, password_confirmation) {\n  Cookies.remove(\"currentUser\");\n  const response = await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  });\n  const promise = res.json();\n\n  if (response.status === 201) {\n    promise.then(data => store.dispatch(showSuccess(data.message))).catch(err => console.error(\"Error:\", err));\n  }\n}\n\nasync function registrationAdmin(name, password, email, password_confirmation) {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/admin/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation\n    })\n  }).then(res => res.json()).then(data => store.dispatch(showSuccess(data.message))).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationProvider(name, password, email, password_confirmation, phone) {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/individual/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone\n    })\n  }).then(res => res.json()).then(data => store.dispatch(showSuccess(data.message))).catch(err => console.error(\"Error:\", err));\n}\n\nasync function registrationAgency(name, password, email, password_confirmation, phone, agency_name) {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/agency/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      password,\n      email,\n      password_confirmation,\n      phone,\n      agency_name\n    })\n  }).then(res => res.json()).then(data => store.dispatch(showSuccess(data.message))).catch(err => console.error(\"Error:\", err));\n}\n\nasync function logout() {\n  Cookies.remove(\"currentUser\");\n  return await fetch(`${target}/logout`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }).then(() => Router.push('/login')).then(() => window.location.reload(true)).catch(err => console.error(\"Error:\", err));\n}","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/_services/authentication.service.ts"],"names":["Cookies","fetch","Router","store","showSuccess","currentUserSubject","getJSON","target","authenticationService","login","logout","registrationAdmin","registrationClient","registrationProvider","registrationAgency","currentUser","currentUserValue","email","password","remove","method","headers","body","JSON","stringify","then","user","token","set","expires","role","push","window","location","reload","catch","err","console","error","name","password_confirmation","response","promise","res","json","status","data","dispatch","message","phone","agency_name"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport store from \"../redux/store\";\nimport {showSuccess} from \"../redux/actions/actions\";\n\nlet currentUserSubject = Cookies.getJSON(\"currentUser\")\n    ? Cookies.getJSON(\"currentUser\")\n    : {};\n\nconst target = `https://intim-vibe-api.padilo.pro/api`;\n\nexport const authenticationService = {\n    login,\n    logout,\n    registrationAdmin,\n    registrationClient,\n    registrationProvider,\n    registrationAgency,\n    currentUser: currentUserSubject,\n    get currentUserValue() {\n        return currentUserSubject;\n    },\n};\n\nasync function login(email: string, password: string): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/login`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({email, password}),\n    })\n        .then((user) => {\n            if (user.token) {\n                Cookies.set(\"currentUser\", JSON.stringify(user), {expires: 1});\n                currentUserSubject = user;\n                return user;\n            }\n        }).then((user) => {\n            if (user.user.role === 'client') {\n                Router.push('/userCabinet');\n            } else if (user.user.role = 'individual') {\n                Router.push('/modelCabinet');\n            } else if (user.user.role === 'admin') {\n                Router.push('/admin');\n            } else if (user.user.role === 'agency') {\n                Router.push('/modelCabinet');\n            }\n        })\n        .then(() => window.location.reload(true))\n        .catch((err) => console.error(\"Error:\", err));\n}\n\nasync function registrationClient(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    const response =  await fetch(`https://intim-vibe-api.padilo.pro/api/client/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n        }),\n    });\n    const promise = res.json();\n    if (response.status === 201) {\n        promise.then((data: any) => store.dispatch(showSuccess(data.message)))\n            .catch((err: any) => console.error(\"Error:\", err));\n    }\n}\n\nasync function registrationAdmin(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/admin/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n        }),\n    }).then(res => res.json())\n        .then(data => store.dispatch(showSuccess(data.message)))\n        .catch((err) => console.error(\"Error:\", err));\n}\n\nasync function registrationProvider(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string,\n    phone: string | number\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/individual/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n            phone\n        }),\n    }).then(res => res.json())\n        .then(data => store.dispatch(showSuccess(data.message)))\n        .catch((err) => console.error(\"Error:\", err));\n}\n\nasync function registrationAgency(\n    name: string,\n    password: string,\n    email: string,\n    password_confirmation: string,\n    phone: string | number,\n    agency_name: string\n): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/agency/register`, {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", 'Accept': 'application/json'},\n        body: JSON.stringify({\n            name,\n            password,\n            email,\n            password_confirmation,\n            phone,\n            agency_name\n        }),\n    }).then(res => res.json())\n        .then(data => store.dispatch(showSuccess(data.message)))\n        .catch((err) => console.error(\"Error:\", err));\n}\n\nasync function logout(): Promise<any> {\n    Cookies.remove(\"currentUser\");\n    return await fetch(`${target}/logout`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    })\n        .then(() => Router.push('/login'))\n        .then(() => window.location.reload(true))\n        .catch((err) => console.error(\"Error:\", err));\n}\n"]},"metadata":{},"sourceType":"module"}
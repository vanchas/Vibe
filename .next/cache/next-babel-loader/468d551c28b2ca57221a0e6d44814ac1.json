{"ast":null,"code":"var _jsxFileName = \"/home/dev-2/WebstormProjects/vibe/src/components/login-page/SignIn.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\nexport default function SignIn({\n  registeredPassword,\n  registeredEmail\n}) {\n  const router = useRouter();\n  return __jsx(\"div\", {\n    className: s.login_page_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Login\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().required('email is required'),\n      password: Yup.string().required('Password is required')\n    }),\n    onSubmit: ({\n      email,\n      password\n    }, {\n      setStatus,\n      setSubmitting\n    }) => {\n      setStatus();\n      authenticationService.login(email, password).then(data => {// console.log('data:', data);\n        // if (data.token) {\n        //   if (data.user.role === 'client') {\n        //     router.push('/userCabinet');\n        //   } else if (data.user.role = 'individual') {\n        //     router.push('/modelCabinet');\n        //   } else if (data.user.role === 'admin') {\n        //     router.push('/admin');\n        //   } else if (data.user.role === 'agency') {\n        //     router.push('/modelCabinet');\n        //   }\n        // }\n      }, error => {\n        setSubmitting(false);\n        setStatus(error);\n      }) // .then(() => window.location.reload(true))\n      .catch(err => console.error(\"Error:\", err));\n    },\n    render: ({\n      errors,\n      status,\n      touched,\n      isSubmitting\n    }) => __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Email\"), __jsx(Field, {\n      name: \"email\",\n      type: \"text\",\n      className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Password\"), __jsx(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: `btn ${s.submit_btn}`,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Submit\"), isSubmitting && __jsx(\"div\", {\n      className: \"spinner-border spinner-border-sm text-primary ml-3\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \"Loading...\"))), status && __jsx(\"div\", {\n      className: 'alert alert-danger',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, status)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/dev-2/WebstormProjects/vibe/src/components/login-page/SignIn.jsx"],"names":["React","s","Formik","Field","Form","ErrorMessage","Yup","useRouter","authenticationService","SignIn","registeredPassword","registeredEmail","router","login_page_form","email","password","object","shape","string","required","setStatus","setSubmitting","login","then","data","error","catch","err","console","errors","status","touched","isSubmitting","submit_btn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport s from './login.module.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { authenticationService } from '../../_services';\n\nexport default function SignIn({ registeredPassword, registeredEmail }) {\n  const router = useRouter();\n\n  return (\n    <div className={s.login_page_form}>\n      <h2>Login</h2>\n      <Formik\n        initialValues={{\n          email: '',\n          password: ''\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().required('email is required'),\n          password: Yup.string().required('Password is required')\n        })}\n        onSubmit={({ email, password }, { setStatus, setSubmitting }) => {\n          setStatus();\n          authenticationService.login(email, password)\n            .then(\n              data => {\n                // console.log('data:', data);\n\n                // if (data.token) {\n                //   if (data.user.role === 'client') {\n                //     router.push('/userCabinet');\n                //   } else if (data.user.role = 'individual') {\n                //     router.push('/modelCabinet');\n                //   } else if (data.user.role === 'admin') {\n                //     router.push('/admin');\n                //   } else if (data.user.role === 'agency') {\n                //     router.push('/modelCabinet');\n                //   }\n                // }\n              },\n              error => {\n                setSubmitting(false);\n                setStatus(error);\n              }\n            )\n            // .then(() => window.location.reload(true))\n            .catch((err) => console.error(\"Error:\", err));\n        }}\n        render={({ errors, status, touched, isSubmitting }) => (\n          <Form>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className={`btn ${s.submit_btn}`} disabled={isSubmitting}>Submit</button>\n              {isSubmitting &&\n                <div className=\"spinner-border spinner-border-sm text-primary ml-3\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              }\n            </div>\n            {status &&\n              <div className={'alert alert-danger'}>{status}</div>\n            }\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SELECT_STATE, SELECT_CITY, SELECT_LIST_SORT, SELECT_LIST_FILTER, SELECT_CATEGORY, ALL_POSTS } from './types';\nimport fetch from 'isomorphic-unfetch';\nexport function allPosts() {\n  return _allPosts.apply(this, arguments);\n} // export const asyncAction = (...someArgs) => async dispatch => {\n//   const res = await someAsyncCall(...someArgs);\n//   dispatch({ type: SOME_ACTION_TYPE, payload: res });\n//   return res;\n// };\n\nfunction _allPosts() {\n  _allPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('https://intim-vibe-api.padilo.pro/api/posts');\n\n          case 2:\n            response = _context2.sent;\n            console.log(response.json());\n            return _context2.abrupt(\"return\", {\n              type: ALL_POSTS\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _allPosts.apply(this, arguments);\n}\n\nexport var getCategories = function getCategories() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, promise;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://intim-vibe-api.padilo.pro/api/categories');\n\n            case 2:\n              response = _context.sent;\n              // const categories: any = response.json();\n              // dispatch({ type: GET_CATEGORIES, payload: categories.data });\n              // categories\n              promise = response.json();\n              promise.then(function (res) {\n                console.log(res);\n              }); // console.log(categories);\n\n              return _context.abrupt(\"return\", {// type: GET_CATEGORIES,\n                // categories: categories.data\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport function selectState(state) {\n  return {\n    type: SELECT_STATE,\n    payload: state\n  };\n}\nexport function selectCity(city) {\n  return {\n    type: SELECT_CITY,\n    payload: city\n  };\n}\nexport function selectListSort(sort) {\n  return {\n    type: SELECT_LIST_SORT,\n    payload: sort\n  };\n}\nexport function selectListFilter(filter) {\n  return {\n    type: SELECT_LIST_FILTER,\n    payload: filter\n  };\n}\nexport function selectCategory(category) {\n  return {\n    type: SELECT_CATEGORY,\n    payload: category\n  };\n}","map":{"version":3,"sources":["C:/Users/user/projects/vibe/src/redux/actions/userActions.ts"],"names":["SELECT_STATE","SELECT_CITY","SELECT_LIST_SORT","SELECT_LIST_FILTER","SELECT_CATEGORY","ALL_POSTS","fetch","allPosts","response","console","log","json","type","getCategories","dispatch","promise","then","res","selectState","state","payload","selectCity","city","selectListSort","sort","selectListFilter","filter","selectCategory","category"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,gBAApC,EAAsDC,kBAAtD,EAA0EC,eAA1E,EAA2FC,SAA3F,QAA4H,SAA5H;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,gBAAsBC,QAAtB;AAAA;AAAA,C,CAQA;AACA;AACA;AAEA;AACA;;;uEAbO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBD,KAAK,CAAC,6CAAD,CADvB;;AAAA;AACCE,YAAAA,QADD;AAELC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,EAAZ;AAFK,8CAIE;AACLC,cAAAA,IAAI,EAAEP;AADD,aAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAcP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACVR,KAAK,CAAC,kDAAD,CADK;;AAAA;AAC3BE,cAAAA,QAD2B;AAEjC;AACA;AACA;AACMO,cAAAA,OAL2B,GAKjBP,QAAQ,CAACG,IAAT,EALiB;AAMjCI,cAAAA,OAAO,CAACC,IAAR,CAAa,UAAAC,GAAG,EAAI;AAClBR,gBAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,eAFD,EANiC,CASjC;;AATiC,+CAU1B,CACL;AACA;AAFK,eAV0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAeP,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAoC;AACzC,SAAO;AACLP,IAAAA,IAAI,EAAEZ,YADD;AAELoB,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID;AACD,OAAO,SAASE,UAAT,CAAoBC,IAApB,EAAkC;AACvC,SAAO;AACLV,IAAAA,IAAI,EAAEX,WADD;AAELmB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAAsC;AAC3C,SAAO;AACLZ,IAAAA,IAAI,EAAEV,gBADD;AAELkB,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID;AACD,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAA0C;AAC/C,SAAO;AACLd,IAAAA,IAAI,EAAET,kBADD;AAELiB,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID;AACD,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAA0C;AAC/C,SAAO;AACLhB,IAAAA,IAAI,EAAER,eADD;AAELgB,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID","sourcesContent":["import { SELECT_STATE, SELECT_CITY, SELECT_LIST_SORT, SELECT_LIST_FILTER, SELECT_CATEGORY, ALL_POSTS, GET_CATEGORIES } from './types'\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport async function allPosts() {\r\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/posts');\r\n  console.log(response.json());\r\n\r\n  return {\r\n    type: ALL_POSTS\r\n  }\r\n}\r\n// export const asyncAction = (...someArgs) => async dispatch => {\r\n//   const res = await someAsyncCall(...someArgs);\r\n//   dispatch({ type: SOME_ACTION_TYPE, payload: res });\r\n\r\n//   return res;\r\n// };\r\nexport const getCategories = () => async (dispatch: any) => {\r\n  const response = await fetch('https://intim-vibe-api.padilo.pro/api/categories');\r\n  // const categories: any = response.json();\r\n  // dispatch({ type: GET_CATEGORIES, payload: categories.data });\r\n  // categories\r\n  const promise = response.json();\r\n  promise.then(res => {\r\n    console.log(res);\r\n  });\r\n  // console.log(categories);\r\n  return {\r\n    // type: GET_CATEGORIES,\r\n    // categories: categories.data\r\n  }\r\n}\r\nexport function selectState(state: string) {\r\n  return {\r\n    type: SELECT_STATE,\r\n    payload: state\r\n  }\r\n}\r\nexport function selectCity(city: string) {\r\n  return {\r\n    type: SELECT_CITY,\r\n    payload: city\r\n  }\r\n}\r\nexport function selectListSort(sort: string) {\r\n  return {\r\n    type: SELECT_LIST_SORT,\r\n    payload: sort\r\n  }\r\n}\r\nexport function selectListFilter(filter: string) {\r\n  return {\r\n    type: SELECT_LIST_FILTER,\r\n    payload: filter\r\n  }\r\n}\r\nexport function selectCategory(category: string) {\r\n  return {\r\n    type: SELECT_CATEGORY,\r\n    payload: category\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
// https://intim-vibe-api.padilo.pro/api/

/filter - POST, поля (from, to, gender, ethnicity_id, hair_id, eye_id, category_id, affiliation_id, availability_ids(array), availableto_ids(array))
/posts/filter/state/{stateId} - POST - те же поля, только + stateId в заголовке роута
/posts/filter/city/{cityId} - POST - те же поля, только + cityId в заголовке роута

// Admin:
// admin / register - POST,
//     поля:
// name(от 3 до 50 символов),
//     password,
//     email(уникальный для админов),
//     password_confirmation - все обязательные поля.
//                  201 - если регистрация прошла успешно,
//     404 - если админ уже есть в базе.Возвращаю админа.
//         /login - POST,
//         поля:
// email,
//     password. 
//                 200 - если ОК,
//     400 - если такого нет в базе, поменяю потом на 401. Возвращается token_type(Bearer), token, и юзера
//  / settings / notification - GET,
//     отправляется на мыло с подтверждением, когда уже залогинен
//  / logout - GET,
//     код - 200
//  / detailt - GET,
//     200 и инфа по юзеру

// admin / categories / create - POST,
//     name(от 3 до 50),
//     возвращаю категорию, 201
// admin / categories / { id } / edit - POST,
//     ко мне айдишник категории и поле name(от 3 до 50),
//         возвращаю категорию, 200
// admin / categories / { id } - DELETE,
//     айдишник категории, 204

// Жалобы:
// admin / complaints - GET,
//     все жалобы, которые есть на сайте,
//         возвращаю все жалобы, 200
// admin / complaints / { id } / change - POST,
//     id жалобы ко мне, поле status, возвращаю жалобу, на мыло отправляется сообщение о изменении статуса жалобы, 200
// admin / complaints / post / { postId } / - GET,
//     id поста, возвращаю жалобы по посту, 200
// admin / complaints / user / { userId } / - GET,
//     id поста, возвращаю жалобы юзера, которые он создал, 200
// admin / complaints / { id } - DELETE,
//     айдишник жалобы, 204

// Бан:
// admin / { userId } / ban - POST,
//     ко мне айди юзера, поля is_banned(true / false), banned_for(за что забанили, 255 максимум), banned_on(количество месяцев, число), 200


// Client:
// если админа на сайте нет - зарегаться не сможет, придет 404, первый должен зарегаться админ
// client / register - POST,
//     поля:
// name(от 3 до 50 символов),
//     password,
//     email(уникальный для для всех(юрики, физики, клиенты)),
//     password_confirmation - все обязательные поля, может ввести номер телефона(не обязательно, уникальный),
//         phone(12 цифр). 201 - если регистрация прошла успешно, 404 - если клиент уже есть в базе.Возвращаю клиента.
//             /login - POST,
//             поля:
// email,
//     password. 
//                 200 - если ОК,
//     400 - если такого нет в базе, поменяю потом на 401.
// Возвращается token_type(Bearer), token, и юзера
//  / settings / notification - GET,
//     отправляется на мыло с подтверждением, когда уже залогинен
//  / logout - GET,
//     код - 200
//  / detailt - GET,
//     200 и инфа по юзеру

// Individual:
// individual / register - POST,
//     поля:
// name(от 3 до 50 символов),
//     password,
//     email(уникальный для для всех(юрики, физики, клиенты)),
//     password_confirmation,
//     phone(12 цифр, уникальный) - все обязательные поля.
//              201 - если регистрация прошла успешно,
//     404 - если физик уже есть в базе.Возвращаю физика.
//         / login - POST,
//         поля:
// email,
//     password. 
//         200 - если ОК,
//     400 - если такого нет в базе, поменяю потом на 401.
// Возвращается token_type(Bearer), token, и юзера
// individual / settings / notification - GET,
//     отправляется на мыло и телефон с подтверждением, когда уже залогинен
// individual / logout - GET,
//     код - 200
// individual / detailt - GET,
//     200 и инфа по физику

// Agency:
// agency / register - POST,
//     поля:
// name(от 3 до 50 символов),
//     password,
//     email(уникальный для для всех(юрики, физики, клиенты)),
//     password_confirmation,
//     phone(12 цифр, уникальный),
//     agency_name - все обязательные поля. 
//             201 - если регистрация прошла успешно,
//     404 - если физик уже есть в базе.Возвращаю физика.
//         agency / login - POST,
//         поля:
// email,
//     password. 
//             200 - если ОК,
//     400 - если такого нет в базе, поменяю потом на 401.
// Возвращается token_type(Bearer), token, и юзера
// agency / settings / notification - GET,
//     отправляется на мыло и телефон с подтверждением, когда уже залогинен
// agency / logout - GET,
//     код - 200
// agency / detailt - GET,
//     200 и инфа по физику

// Категории: можно без авторизации
// categories - GET, получение всех категорий, 200
// categories / { id } - GET, отображение одной категории, 200

/ - GET, все штаты
/cities/{stateId} - GET, все города по штату
/posts/s/{stateId} - GET, все посты по штату
/posts/c/{cityId} - GET, все посты по городу

// Посты:
// можно без авторизации:
// posts - GET, получение всех постов, 200
// posts / { id } - GET, получение одного поста, 200
// posts / all / new - GET, получение четырех новых поста(если меньше постов - меньше получешь ^ -^), 200

// с авторизацией юрика или физика только и не забаненых:
// posts / all / my - GET, получение всех постов авторизованного пользователя,
//     200
// posts / create - POST, создание поста,
//     201,
//     поля обзательные:
// gender(3 - 50),
//     age(число),
//     ethnicity(3 - 50),
//     hair_color(3 - 50),
//     eye_color(3 - 50),
//     height(3 - 50),
//     affiliation(3 - 50),
//     number(формат + и 10 чисел(в душе неебу сколько в Америке должно быть чисел в номере)),
//     email,
//     model_name(2 - 50),
//     video_link(формат ссылки на ютубе),
//     about(3 - 500),
//      available_to(3 - 50)[],
//      availability(3 - 50)[],
//      summary(3 - 200),
//      second_name(3 - 50),
//      account_name(3 - 50),
//     category(3 - 50), в теле запроса,
//         не обязательные поля:
// status('other' изначально, можешь просто пустое это поле отправлять),
//     photo(пока 1, добавлю возможность добавлять более 1), также приходит 403 для физиков, если у него уже есть один пост и хочет создать еще один, возвращаю пост
			

// posts / { id } / edit - POST,
//     все те же поля, только ко мне еще и айди поста,
//         200, возвращаю пост
// posts / { id } - DELETE, 204

// Комменты для всех зареганых и не забаненых:
// posts / { idpostId } / comments - GET, получение ввсех комментов по посту, 200
// posts / { postId } / comments / create - POST,
//     добавление коммента к посту, поле comment(255), 201 в ответ идет
// posts / { postId } / comments / { id } / edit - POST, ко мне айди поста и айди коммента, поле comment(255), 200 в ответ идет, 403 если пытается заэдитить не свйо пост
// posts / comments / { id } - DELETE, ко мне айди коммента, 204


// Желания, авторизованные и не забаненные:
// favorites / my - GET, 200, все желания по юзеру
// { postId } /favorites - GET, 200, все желания по посту
// { postId } /favorites/add - POST, 201, is_favorite(true / false), добавление желания
// favorites / { id } - DELETE, ко мне айди желания, 204

// Жалоба, авторизованные и не забаненные:
// { postId } /complaints/add - POST, 201, message(5 - 255), status - ставится сразу 'In progress', главное, чтобы поле было просто, ну или можешь его по дефолту отправлять, на мыло юзеру отправляется сообщение с какой - то хуйней


